/**
 * JavaScript –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–¥–∞—á –≤ mini-app
 * 
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å—é –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –∑–∞–¥–∞—á–∏,
 * –≤–∫–ª—é—á–∞—è –≤—ã–±–æ—Ä –æ—Ç–≤–µ—Ç–æ–≤, –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä, –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
 * –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏–π.
 * 
 * @author Mini App Team
 * @version 2.0.0
 * @updated 2025-08-24 - Fixed user initialization and telegram_id detection
 */

console.log('üöÄ tasks.js –∑–∞–≥—Ä—É–∂–µ–Ω');
console.log('üìÑ tasks.js: DOM ready state:', document.readyState);
console.log('üìÑ tasks.js: Current URL:', window.location.href);

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏
 */
class TaskManager {
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–¥–∞—á
     */
    constructor() {
        console.log('üîß TaskManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è...');
        this.dontKnowOptions = [
            "–Ø –Ω–µ –∑–Ω–∞—é, –Ω–æ —Ö–æ—á—É —É–∑–Ω–∞—Ç—å",
            "I don't know, but I want to learn"
        ];
        this.init();
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
     */
    init() {
        console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤...');
        this.setupAnswerHandlers();
        this.setupBackButton();
        console.log('‚úÖ TaskManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤
     */
    setupAnswerHandlers() {
        const answerOptions = document.querySelectorAll('.answer-option');
        console.log(`üîß –ù–∞–π–¥–µ–Ω–æ ${answerOptions.length} –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤`);
        
        answerOptions.forEach((option, index) => {
            console.log(`üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ ${index + 1}:`, option.textContent);
            
            // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
            option.removeEventListener('click', this.handleAnswerSelection.bind(this));
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å dont-know-option, –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –≤ —Å–ø–∏—Å–∫–µ
            if (this.dontKnowOptions.includes(option.dataset.answer)) {
                option.classList.add('dont-know-option');
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
            option.addEventListener('click', this.handleAnswerSelection.bind(this));
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            option.addEventListener('click', (e) => {
                console.log('üñ±Ô∏è –ö–ª–∏–∫ –ø–æ –æ—Ç–≤–µ—Ç—É:', option.textContent);
            });
        });
    }

    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
     */
    setupBackButton() {
        const backButton = document.querySelector('.back-button');
        if (backButton) {
            console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"');
            backButton.addEventListener('click', this.goBack.bind(this));
        } else {
            console.log('‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
     * @param {Event} event - –°–æ–±—ã—Ç–∏–µ –∫–ª–∏–∫–∞
     */
    async handleAnswerSelection(event) {
        console.log('üéØ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∞');
        event.preventDefault();
        event.stopPropagation();
        
        const option = event.currentTarget;
        const taskItem = option.closest('.task-item');
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ data-–∞—Ç—Ä–∏–±—É—Ç–æ–≤
        const selectedAnswer = option.dataset.answer;
        const isCorrect = option.dataset.correct === 'true';
        const explanation = option.dataset.explanation;
        const taskId = taskItem.dataset.taskId;
        
        console.log('Task ID:', taskId, 'Answer:', selectedAnswer, 'Correct:', isCorrect);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Ä–µ—à–µ–Ω–∞ –ª–∏ —É–∂–µ –∑–∞–¥–∞—á–∞
        if (taskItem.dataset.solved === 'true') {
            console.log('Answer selection blocked: task already solved');
            return;
        }
        const isDontKnow = option.classList.contains('dont-know-option') || 
                          this.dontKnowOptions.includes(option.dataset.answer);
        
        console.log('–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:', isCorrect, '–ù–µ –∑–Ω–∞—é:', isDontKnow);
        
        // –§–∏–∫—Å–∏—Ä—É–µ–º –∑–∞–¥–∞—á—É
        this.disableAllAnswers(taskItem);
        this.markSelectedAnswer(option, isCorrect);
        taskItem.dataset.solved = 'true';
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        await this.submitAnswerToServer(taskId, selectedAnswer);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
        if (!isCorrect) {
            this.showCorrectAnswer(taskItem);
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ
        this.showExplanation(taskItem);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        this.showNotification(isCorrect, isDontKnow);
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä
     * @param {number} taskId - ID –∑–∞–¥–∞—á–∏
     * @param {string} answer - –í—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
     */
    async submitAnswerToServer(taskId, answer) {
        try {
            // –ü–æ–ª—É—á–∞–µ–º telegram_id –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
            let telegramId = null;
            
            console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ telegram_id:', {
                hasCurrentUser: !!window.currentUser,
                currentUserTelegramId: window.currentUser?.telegram_id,
                hasTelegram: typeof window.Telegram !== 'undefined',
                hasWebApp: typeof window.Telegram !== 'undefined' && window.Telegram.WebApp,
                hasInitData: typeof window.Telegram !== 'undefined' && window.Telegram.WebApp ? !!window.Telegram.WebApp.initData : false,
                initDataLength: typeof window.Telegram !== 'undefined' && window.Telegram.WebApp ? window.Telegram.WebApp.initData?.length : 0,
                initDataUnsafe: typeof window.Telegram !== 'undefined' ? window.Telegram.WebApp?.initDataUnsafe : null,
                user: typeof window.Telegram !== 'undefined' ? window.Telegram.WebApp?.initDataUnsafe?.user : null,
                userId: typeof window.Telegram !== 'undefined' ? window.Telegram.WebApp?.initDataUnsafe?.user?.id : null,
                isUserInitialized: window.isUserInitialized,
                currentUserData: window.currentUser
            });
            
            // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —á–µ—Ä–µ–∑ /api/verify-init-data
            if (window.currentUser && window.currentUser.telegram_id) {
                telegramId = window.currentUser.telegram_id;
                console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω telegram_id –∏–∑ window.currentUser (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1):', telegramId);
            }
            // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2: Telegram WebApp –Ω–∞–ø—Ä—è–º—É—é
            else if (typeof window.Telegram !== 'undefined' && window.Telegram.WebApp && window.Telegram.WebApp.initDataUnsafe?.user?.id) {
                telegramId = window.Telegram.WebApp.initDataUnsafe.user.id;
                console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω telegram_id –∏–∑ Telegram WebApp (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2):', telegramId);
            }
            // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 3: –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –º—ã –≤ Telegram)
            else if (typeof window.Telegram !== 'undefined' && window.Telegram.WebApp && window.Telegram.WebApp.initData) {
                console.log('‚è≥ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –Ω–æ –µ—Å—Ç—å initData. –ü–æ–ø—Ä–æ–±—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å...');
                
                // –ü—ã—Ç–∞–µ–º—Å—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—Ä—É—á–Ω—É—é
                try {
                    const response = await fetch('/api/verify-init-data', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ initData: window.Telegram.WebApp.initData })
                    });
                    
                    if (response.ok) {
                        const userData = await response.json();
                        window.currentUser = userData;
                        window.isUserInitialized = true;
                        telegramId = userData.telegram_id;
                        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤—Ä—É—á–Ω—É—é, telegram_id:', telegramId);
                    } else {
                        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', response.status);
                    }
                } catch (error) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
                }
            }
            
            // Fallback –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
            if (!telegramId) {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –ù–ï –≤ Telegram (–±—Ä–∞—É–∑–µ—Ä)
                if (typeof window.Telegram === 'undefined' || !window.Telegram.WebApp) {
                    telegramId = 7827592658; // Fulani –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    console.warn('‚ö†Ô∏è –ë—Ä–∞—É–∑–µ—Ä: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π ID —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', telegramId);
                } else {
                    console.error('‚ùå –í Telegram, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å telegram_id');
                    this.showToast('–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'error');
                    return;
                }
            }
            
            console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä:', { taskId, answer, telegramId });
            
            const response = await fetch(`/api/tasks/${taskId}/submit`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    telegram_id: telegramId,
                    answer: answer
                })
            });
            
            if (response.ok) {
                const result = await response.json();
                console.log('‚úÖ –û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:', result);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                if (result.total_attempts) {
                    this.updateTaskStatistics(taskId, result);
                }
            } else {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞:', response.status, response.statusText);
                const errorData = await response.json().catch(() => ({}));
                console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', errorData);
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:', error);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–¥–∞—á–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
     * @param {number} taskId - ID –∑–∞–¥–∞—á–∏
     * @param {Object} result - –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
     */
    updateTaskStatistics(taskId, result) {
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        // –ù–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫, –ø—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –∏ —Ç.–¥.
        console.log('üìä –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –∑–∞–¥–∞—á–∏', taskId, result);
    }

    /**
     * –û—Ç–∫–ª—é—á–∞–µ—Ç –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
     * @param {HTMLElement} taskItem - –≠–ª–µ–º–µ–Ω—Ç –∑–∞–¥–∞—á–∏
     */
    disableAllAnswers(taskItem) {
        const answers = taskItem.querySelectorAll('.answer-option');
        answers.forEach(opt => {
            opt.style.pointerEvents = 'none';
            opt.classList.remove('active');
            opt.classList.add('disabled');
        });
    }

    /**
     * –û—Ç–º–µ—á–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
     * @param {HTMLElement} option - –í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞
     * @param {boolean} isCorrect - –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–∏ –æ—Ç–≤–µ—Ç
     */
    markSelectedAnswer(option, isCorrect) {
        option.classList.add('selected');
        option.classList.add(isCorrect ? 'correct' : 'incorrect');
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
     * @param {HTMLElement} taskItem - –≠–ª–µ–º–µ–Ω—Ç –∑–∞–¥–∞—á–∏
     */
    showCorrectAnswer(taskItem) {
        const answers = taskItem.querySelectorAll('.answer-option');
        answers.forEach(btn => {
            if (btn.dataset.correct === 'true') {
                btn.classList.add('correct');
            }
        });
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ
     * @param {HTMLElement} taskItem - –≠–ª–µ–º–µ–Ω—Ç –∑–∞–¥–∞—á–∏
     */
    showExplanation(taskItem) {
        const taskId = taskItem.dataset.taskId;
        const explanationDiv = document.getElementById(`explanation-${taskId}`);
        
        if (explanationDiv) {
            explanationDiv.style.display = 'block';
            explanationDiv.scrollIntoView({ 
                behavior: 'smooth', 
                block: 'center' 
            });
        }
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
     * @param {boolean} isCorrect - –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–∏ –æ—Ç–≤–µ—Ç
     * @param {boolean} isDontKnow - –í—ã–±—Ä–∞–Ω–∞ –ª–∏ –æ–ø—Ü–∏—è "–ù–µ –∑–Ω–∞—é"
     */
    showNotification(isCorrect, isDontKnow) {
        let message, type;
        
        if (isDontKnow) {
            message = '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –í—ã –≤—ã–±—Ä–∞–ª–∏ "–ù–µ –∑–Ω–∞—é" - —ç—Ç–æ —Ö–æ—Ä–æ—à–∏–π –ø–æ–¥—Ö–æ–¥ –∫ –æ–±—É—á–µ–Ω–∏—é.';
            type = 'info';
        } else if (isCorrect) {
            message = '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!';
            type = 'success';
        } else {
            message = '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –Ω–∏–∂–µ.';
            type = 'error';
        }
        
        this.showToast(message, type);
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
     * @param {string} message - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param {string} type - –¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (success, error, info)
     */
    showToast(message, type = 'info') {
        const toast = document.createElement('div');
        toast.className = `toast toast-${type}`;
        toast.textContent = message;
        
        // –°—Ç–∏–ª–∏ –¥–ª—è toast
        toast.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 8px;
            color: white;
            font-weight: 600;
            z-index: 1000;
            animation: slideIn 0.3s ease;
            max-width: 300px;
        `;
        
        // –¶–≤–µ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
        if (type === 'success') {
            toast.style.background = '#28a745';
        } else if (type === 'error') {
            toast.style.background = '#dc3545';
        } else {
            toast.style.background = '#007bff';
        }
        
        document.body.appendChild(toast);
        
        // –£–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            toast.remove();
        }, 3000);
    }

    /**
     * –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞–∑–∞–¥
     */
    goBack() {
        if (typeof window.Telegram !== 'undefined' && window.Telegram.WebApp) {
            window.Telegram.WebApp.navigateTo('/');
        } else {
            window.history.back();
        }
    }
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 */
document.addEventListener('DOMContentLoaded', function() {
    console.log('üìÑ DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è TaskManager...');
    console.log('üìÑ –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ .task-item:', document.querySelectorAll('.task-item').length);
    console.log('üìÑ –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ .answer-option:', document.querySelectorAll('.answer-option').length);
    window.taskManager = new TaskManager();
});

// –¢–∞–∫–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º, –µ—Å–ª–∏ DOM —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω
if (document.readyState === 'loading') {
    console.log('üìÑ DOM –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –∂–¥–µ–º...');
} else {
    console.log('üìÑ DOM —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ä–∞–∑—É...');
    console.log('üìÑ –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ .task-item:', document.querySelectorAll('.task-item').length);
    console.log('üìÑ –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ .answer-option:', document.querySelectorAll('.answer-option').length);
    window.taskManager = new TaskManager();
}

/**
 * –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å inline –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏
 * @param {HTMLElement} button - –ö–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—Ç–∞
 * @param {string} selectedAnswer - –í—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
 * @param {string} correctAnswer - –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
 * @param {string} explanation - –û–±—ä—è—Å–Ω–µ–Ω–∏–µ
 */
function selectAnswer(button, selectedAnswer, correctAnswer, explanation) {
    console.log('üîß –í—ã–∑–æ–≤ selectAnswer');
    if (window.taskManager) {
        // –°–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        const event = {
            preventDefault: () => {},
            stopPropagation: () => {},
            currentTarget: button
        };
        window.taskManager.handleAnswerSelection(event);
    }
}

/**
 * –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞–∑–∞–¥
 */
function goBack() {
    console.log('üîß –í—ã–∑–æ–≤ goBack');
    if (window.taskManager) {
        window.taskManager.goBack();
    }
} 