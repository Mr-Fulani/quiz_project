// –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò –ö–ù–û–ü–û–ö –ö–ê–†–£–°–ï–õ–ò
window.initCarouselButtons = function() {
    console.log('üîß –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ö–ù–û–ü–û–ö –ò SWIPER');
    
    const showBtn = document.getElementById('show-all-users');
    const carousel = document.getElementById('all-users-carousel');
    
    console.log('üîß –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', {
        showBtn: !!showBtn,
        carousel: !!carousel
    });
    
    if (showBtn && carousel) {
        console.log('üîß –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω—ã, –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏');
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        showBtn.onclick = null;
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö"
        showBtn.onclick = function(e) {
            console.log('üîß –ö–ù–û–ü–ö–ê "–ü–û–ö–ê–ó–ê–¢–¨ –í–°–ï–•" –ù–ê–ñ–ê–¢–ê!');
            e.preventDefault();
            e.stopPropagation();
            
            // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö"
            showBtn.style.display = 'none';
            
            // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª body ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é –∏ —Ñ–∏–∫—Å–∏—Ä—É–µ–º —Å top offset
            const scrollY = window.pageYOffset || document.documentElement.scrollTop || 0;
            window.scrollPositionBeforeSwiper = scrollY;

            document.body.style.overflow = 'hidden';
            // –§–∏–∫—Å–∏—Ä—É–µ–º —Ç–µ–ª–æ –∏ —Å–º–µ—â–∞–µ–º –≤–≤–µ—Ä—Ö –Ω–∞ —Ç–µ–∫—É—â–∏–π —Å–∫—Ä–æ–ª–ª, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø—Ä—ã–∂–∫–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
            document.body.style.position = 'fixed';
            document.body.style.top = `-${scrollY}px`;
            document.body.style.left = '0';
            document.body.style.right = '0';
            document.body.style.width = '100%';
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ä—É—Å–µ–ª—å –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å active –¥–ª—è flex-—Å—Ç–∏–ª–µ–π
            carousel.style.display = 'block';
            carousel.classList.add('active');
            
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
            const screenWidth = window.innerWidth;
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–µ–Ω–Ω–æ –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ —É–∑–∫–∏–π —ç–∫—Ä–∞–Ω
            const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
            const width = '330px';
            const height = isMobile ? '515px' : '445px';  // –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö +5px
            
            carousel.style.setProperty('width', width, 'important');
            carousel.style.setProperty('height', height, 'important');
            carousel.style.setProperty('max-width', width, 'important');
            carousel.style.setProperty('max-height', height, 'important');
            carousel.style.setProperty('min-width', width, 'important');
            carousel.style.setProperty('min-height', height, 'important');
            
            console.log('üîß –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —Ä–∞–∑–º–µ—Ä—ã –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:', {
                screenWidth: screenWidth,
                isMobile: isMobile,
                width: width,
                height: height,
                computedWidth: window.getComputedStyle(carousel).width,
                computedHeight: window.getComputedStyle(carousel).height
            });
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Swiper
            setTimeout(() => {
                if (typeof Swiper !== 'undefined') {
                    console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Swiper');
                    
                    // –£–Ω–∏—á—Ç–æ–∂–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä Swiper –µ—Å–ª–∏ –µ—Å—Ç—å
                    if (window.userSwiper) {
                        window.userSwiper.destroy(true, true);
                    }
                    
                    window.userSwiper = new Swiper('#users-swiper', {
                        slidesPerView: 1,
                        spaceBetween: 0,
                        centeredSlides: true,
                        loop: false,
                        effect: 'slide',
                        speed: 300,
                        navigation: {
                            nextEl: '.swiper-button-next',
                            prevEl: '.swiper-button-prev',
                        },
                        on: {
                            init: function() {
                                console.log('üîß Swiper –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!');
                                
                                // –ü–æ–≤—Ç–æ—Ä–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Swiper
                                setTimeout(() => {
                                    const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
                                    const width = '330px';
                                    const height = isMobile ? '515px' : '445px';
                                    
                                    carousel.style.setProperty('width', width, 'important');
                                    carousel.style.setProperty('height', height, 'important');
                                    carousel.style.setProperty('max-width', width, 'important');
                                    carousel.style.setProperty('max-height', height, 'important');
                                    carousel.style.setProperty('min-width', width, 'important');
                                    carousel.style.setProperty('min-height', height, 'important');
                                    
                                    console.log('üîß –†–∞–∑–º–µ—Ä—ã –ø–æ–≤—Ç–æ—Ä–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø–æ—Å–ª–µ Swiper init:', {
                                        computedWidth: window.getComputedStyle(carousel).width,
                                        computedHeight: window.getComputedStyle(carousel).height
                                    });
                                }, 50);
                            }
                        }
                    });
                } else {
                    console.error('üîß Swiper –Ω–µ –Ω–∞–π–¥–µ–Ω!');
                }
            }, 100);
        };
        
        // –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –∫–∞—Ä—É—Å–µ–ª–∏
        function closeCarousel() {
            console.log('üîß –ó–ê–ö–†–´–¢–ò–ï –ö–ê–†–£–°–ï–õ–ò');
            
            // –£–Ω–∏—á—Ç–æ–∂–∞–µ–º Swiper
            if (window.userSwiper) {
                window.userSwiper.destroy(true, true);
                window.userSwiper = null;
            }
            
            // –°–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ä—É—Å–µ–ª—å –∏ —É–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å active
            carousel.style.display = 'none';
            carousel.classList.remove('active');
            
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª body –∏ –ø–æ–∑–∏—Ü–∏—é
            const prevScroll = typeof window.scrollPositionBeforeSwiper !== 'undefined' ? window.scrollPositionBeforeSwiper : 0;

            // –£–±–∏—Ä–∞–µ–º —Ñ–∏–∫—Å–∞—Ü–∏—é —Ç–µ–ª–∞ –∏ –æ—á–∏—â–∞–µ–º top, –∑–∞—Ç–µ–º –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é —Å–∫—Ä–æ–ª–ª–∞
            document.body.style.overflow = '';
            document.body.style.position = '';
            document.body.style.top = '';
            document.body.style.left = '';
            document.body.style.right = '';
            document.body.style.width = '';

            if (prevScroll) {
                window.scrollTo(0, prevScroll);
                delete window.scrollPositionBeforeSwiper;
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö"
            showBtn.style.display = 'block';
            
            console.log('‚úÖ –ö–∞—Ä—É—Å–µ–ª—å –∑–∞–∫—Ä—ã—Ç–∞, —Å—Ç–∏–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
        };
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ –∫–ª–∞–≤–∏—à–µ ESC
        const handleEscKey = function(e) {
            if (e.key === 'Escape' || e.keyCode === 27) {
                if (carousel.style.display === 'block') {
                    closeCarousel();
                }
            }
        };

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –≤–Ω–µ –æ–±–ª–∞—Å—Ç–∏ –∫–∞—Ä—É—Å–µ–ª–∏ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
        carousel.addEventListener('click', function(e) {
            // –ï—Å–ª–∏ –∫–ª–∏–∫ –±—ã–ª –ø–æ —Å–∞–º–æ–º—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É –∫–∞—Ä—É—Å–µ–ª–∏ (–Ω–µ –ø–æ swiper –∏–ª–∏ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É)
            if (e.target === carousel) {
                console.log('üîß –ö–õ–ò–ö –í–ù–ï –û–ë–õ–ê–°–¢–ò –ö–ê–†–£–°–ï–õ–ò - –ó–ê–ö–†–´–í–ê–ï–ú');
                closeCarousel();
            }
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ ESC
        document.addEventListener('keydown', handleEscKey);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É–¥–∞–ª–µ–Ω–∏—è
        window.carouselEscHandler = handleEscKey;
        
        console.log('üîß –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
        return true;
    } else {
        console.error('üîß –ù–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω—ã!');
        return false;
    }
};

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
class TopUsersFilter {
    constructor() {
        this.filters = {
            gender: '',
            age: '',
            language: '',
            online: ''
        };
        
        this.init();
    }

    init() {
        console.log('üöÄ TopUsersFilter: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è');
        this.bindEvents();
        this.loadFiltersFromURL();
        console.log('‚úÖ TopUsersFilter: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
        this.testElements();
    }
    
    testElements() {
        console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ñ–∏–ª—å—Ç—Ä–æ–≤:');
        const elements = {
            'gender-filter': document.getElementById('gender-filter'),
            'age-filter': document.getElementById('age-filter'),
            'language-filter': document.getElementById('language-filter'),
            'online-filter': document.getElementById('online-filter'),
            'reset-filters': document.getElementById('reset-filters')
        };
        
        for (const [name, element] of Object.entries(elements)) {
            if (element) {
                console.log(`‚úÖ ${name}: –Ω–∞–π–¥–µ–Ω`);
            } else {
                console.error(`‚ùå ${name}: –ù–ï –ù–ê–ô–î–ï–ù!`);
            }
        }
    }

    bindEvents() {
        console.log('üîó TopUsersFilter: –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π...');
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–µ–ª–µ–∫—Ç–æ–≤ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        const genderFilter = document.getElementById('gender-filter');
        const ageFilter = document.getElementById('age-filter');
        const languageFilter = document.getElementById('language-filter');
        const onlineFilter = document.getElementById('online-filter');
        const resetButton = document.getElementById('reset-filters');
        
        console.log('üîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:', {
            genderFilter: !!genderFilter,
            ageFilter: !!ageFilter,
            languageFilter: !!languageFilter,
            onlineFilter: !!onlineFilter,
            resetButton: !!resetButton
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω—ã
        if (!genderFilter) console.warn('‚ö†Ô∏è gender-filter –Ω–µ –Ω–∞–π–¥–µ–Ω');
        if (!ageFilter) console.warn('‚ö†Ô∏è age-filter –Ω–µ –Ω–∞–π–¥–µ–Ω');
        if (!languageFilter) console.warn('‚ö†Ô∏è language-filter –Ω–µ –Ω–∞–π–¥–µ–Ω');
        if (!onlineFilter) console.warn('‚ö†Ô∏è online-filter –Ω–µ –Ω–∞–π–¥–µ–Ω');
        if (!resetButton) console.warn('‚ö†Ô∏è reset-filters –∫–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        
        genderFilter?.addEventListener('change', (e) => {
            console.log('üë§ Gender filter changed:', e.target.value);
            this.filters.gender = e.target.value;
            this.applyFilters();
        });

        ageFilter?.addEventListener('change', (e) => {
            console.log('üéÇ Age filter changed:', e.target.value);
            this.filters.age = e.target.value;
            this.applyFilters();
        });

        languageFilter?.addEventListener('change', (e) => {
            console.log('üíª Language filter changed:', e.target.value);
            this.filters.language = e.target.value;
            this.applyFilters();
        });

        // ratingFilter?.addEventListener('change', (e) => { // –£–±—Ä–∞–Ω, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç –≤ HTML
        //     console.log('‚≠ê Rating filter changed:', e.target.value);
        //     this.filters.rating = e.target.value;
        //     this.applyFilters();
        // });

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞ –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å–∞
        if (onlineFilter) {
            console.log('‚úÖ Online filter –Ω–∞–π–¥–µ–Ω, –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫');
            onlineFilter.addEventListener('change', (e) => {
                console.log('üü¢ Online filter changed:', e.target.value);
                this.filters.online = e.target.value;
                console.log('üü¢ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:', this.filters);
                this.applyFilters();
            });
        } else {
            console.error('‚ùå Online filter –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        }

        // –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        if (resetButton) {
            console.log('üîó –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫ –∫–Ω–æ–ø–∫–µ —Å–±—Ä–æ—Å–∞');
            resetButton.addEventListener('click', (e) => {
                console.log('üîÑ Reset filters clicked - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ä–∞–±–æ—Ç–∞–ª!');
                e.preventDefault();
                this.resetFilters();
            });
        } else {
            console.error('‚ùå –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
        }
        
        console.log('‚úÖ TopUsersFilter: –°–æ–±—ã—Ç–∏—è –ø—Ä–∏–≤—è–∑–∞–Ω—ã');
    }

    loadFiltersFromURL() {
        const urlParams = new URLSearchParams(window.location.search);
        
        this.filters.gender = urlParams.get('gender') || '';
        this.filters.age = urlParams.get('age') || '';
        this.filters.language = urlParams.get('language_pref') || '';
        this.filters.online = urlParams.get('online_only') || '';

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å–µ–ª–µ–∫—Ç—ã
        this.setSelectValue('gender-filter', this.filters.gender);
        this.setSelectValue('age-filter', this.filters.age);
        this.setSelectValue('language-filter', this.filters.language);
        this.setSelectValue('online-filter', this.filters.online);
    }

    setSelectValue(selectId, value) {
        const select = document.getElementById(selectId);
        if (select) {
            select.value = value;
            console.log(`üîÑ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è ${selectId}: ${value}`);
        } else {
            console.warn(`‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç ${selectId} –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è ${value}`);
        }
    }


    applyFilters() {
        console.log('üîç TopUsersFilter: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤', this.filters);
        console.log('üîç –¢–µ–∫—É—â–∏–π URL:', window.location.href);
        console.log('üîç –§–∏–ª—å—Ç—Ä—ã –∞–∫—Ç–∏–≤–Ω—ã:', {
            gender: this.filters.gender,
            age: this.filters.age,
            language: this.filters.language,
            online: this.filters.online
        });
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ AJAX –≤–º–µ—Å—Ç–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        this.updateContentWithFilters();
    }

    updateContentWithFilters() {
        console.log('üîÑ TopUsersFilter: updateContentWithFilters –≤—ã–∑–≤–∞–Ω');
        console.log('üîÑ –¢–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã:', this.filters);
        
        const url = new URL(window.location);
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤
        url.searchParams.delete('gender');
        url.searchParams.delete('age');
        url.searchParams.delete('language_pref');
        url.searchParams.delete('online_only');

        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤
        if (this.filters.gender) {
            url.searchParams.set('gender', this.filters.gender);
        }
        if (this.filters.age) {
            url.searchParams.set('age', this.filters.age);
        }
        if (this.filters.language) {
            url.searchParams.set('language_pref', this.filters.language);
        }
        if (this.filters.online) {
            url.searchParams.set('online_only', this.filters.online);
        }
        // if (this.filters.rating) { // –£–±—Ä–∞–Ω
        //     url.searchParams.set('rating', this.filters.rating);
        // }

        console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ AJAX:', url.toString());
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ AJAX
        fetch(url.toString(), {
            method: 'GET',
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.text())
        .then(html => {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
            const currentFilters = {
                gender: document.getElementById('gender-filter')?.value || '',
                age: document.getElementById('age-filter')?.value || '',
                language: document.getElementById('language-filter')?.value || '',
                online: document.getElementById('online-filter')?.value || ''
            };
            
            console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã:', currentFilters);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            const parser = new DOMParser();
            const doc = parser.parseFromString(html, 'text/html');
            const newContent = doc.querySelector('.top-users-container');
            const currentContent = document.querySelector('.top-users-container');
            
            if (newContent && currentContent) {
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–µ —Ç—Ä–æ–≥–∞—è —Ñ–∏–ª—å—Ç—Ä—ã
                const newUserList = newContent.querySelector('.top-users-list');
                const currentUserList = currentContent.querySelector('.top-users-list');
                
                if (newUserList && currentUserList) {
                    currentUserList.innerHTML = newUserList.innerHTML;
                    console.log('‚úÖ –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–±–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ AJAX');
                } else {
                    // Fallback - –æ–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç
                    currentContent.innerHTML = newContent.innerHTML;
                    console.log('‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ AJAX (fallback)');
                }
                
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
                setTimeout(() => {
                    if (currentFilters.gender) {
                        const genderSelect = document.getElementById('gender-filter');
                        if (genderSelect) genderSelect.value = currentFilters.gender;
                    }
                    if (currentFilters.age) {
                        const ageSelect = document.getElementById('age-filter');
                        if (ageSelect) ageSelect.value = currentFilters.age;
                    }
                    if (currentFilters.language) {
                        const languageSelect = document.getElementById('language-filter');
                        if (languageSelect) languageSelect.value = currentFilters.language;
                    }
                    if (currentFilters.online) {
                        const onlineSelect = document.getElementById('online-filter');
                        if (onlineSelect) onlineSelect.value = currentFilters.online;
                    }
                    console.log('üîÑ –§–∏–ª—å—Ç—Ä—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
                    
                    // –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–±–Ω–æ–≤–∏–ª–∏ –≤–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç
                    if (!newUserList || !currentUserList) {
                        this.bindEvents();
                    }
                    
                    // –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –∫–∞—Ä—É—Å–µ–ª–∏
                    if (typeof window.initCarouselButtons === 'function') {
                        console.log('üîÑ –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –∫–∞—Ä—É—Å–µ–ª–∏');
                        window.initCarouselButtons();
                    }
                }, 100);
            } else {
                // Fallback - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
                window.location.href = url.toString();
            }
        })
        .catch(error => {
            console.error('‚ùå –û—à–∏–±–∫–∞ AJAX –∑–∞–ø—Ä–æ—Å–∞:', error);
            // Fallback - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
            window.location.href = url.toString();
        });
    }

    reloadWithFilters() {
        console.log('üîÑ TopUsersFilter: reloadWithFilters –≤—ã–∑–≤–∞–Ω');
        console.log('üîÑ –¢–µ–∫—É—â–∏–π URL:', window.location.href);
        console.log('üîÑ –¢–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã:', this.filters);
        
        const url = new URL(window.location);
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤
        url.searchParams.delete('gender');
        url.searchParams.delete('age');
        url.searchParams.delete('language_pref');
        url.searchParams.delete('online_only');

        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤
        if (this.filters.gender) {
            url.searchParams.set('gender', this.filters.gender);
            console.log('‚ûï –î–æ–±–∞–≤–ª–µ–Ω gender:', this.filters.gender);
        }
        if (this.filters.age) {
            url.searchParams.set('age', this.filters.age);
            console.log('‚ûï –î–æ–±–∞–≤–ª–µ–Ω age:', this.filters.age);
        }
        if (this.filters.language) {
            url.searchParams.set('language_pref', this.filters.language);
            console.log('‚ûï –î–æ–±–∞–≤–ª–µ–Ω language_pref:', this.filters.language);
        }
        if (this.filters.online) {
            url.searchParams.set('online_only', this.filters.online);
            console.log('‚ûï –î–æ–±–∞–≤–ª–µ–Ω online_only:', this.filters.online);
        }

        console.log('üîÑ –ù–æ–≤—ã–π URL:', url.toString());
        console.log('üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É...');

        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
        window.location.href = url.toString();
    }


    resetFilters() {
        console.log('üîÑ Reset filters clicked - —Å–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–æ–≤');
        console.log('üîÑ –¢–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã –¥–æ —Å–±—Ä–æ—Å–∞:', this.filters);
        console.log('üîÑ –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ –Ω–∞–∂–∞—Ç–∞, –Ω–∞—á–∏–Ω–∞–µ–º —Å–±—Ä–æ—Å...');
        
        this.filters = {
            gender: '',
            age: '',
            language: '',
            online: ''
        };

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–µ–ª–µ–∫—Ç—ã
        this.setSelectValue('gender-filter', '');
        this.setSelectValue('age-filter', '');
        this.setSelectValue('language-filter', '');
        this.setSelectValue('online-filter', '');
        
        console.log('üîÑ –§–∏–ª—å—Ç—Ä—ã —Å–±—Ä–æ—à–µ–Ω—ã –≤ –æ–±—ä–µ–∫—Ç–µ:', this.filters);

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ AJAX –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        const url = new URL(window.location);
        url.searchParams.delete('gender');
        url.searchParams.delete('age');
        url.searchParams.delete('language_pref');
        url.searchParams.delete('online_only');
        
        console.log('üîÑ Reset filters - –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ AJAX:', url.toString());
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ AJAX
        fetch(url.toString(), {
            method: 'GET',
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.text())
        .then(html => {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            const parser = new DOMParser();
            const doc = parser.parseFromString(html, 'text/html');
            const newContent = doc.querySelector('.top-users-container');
            const currentContent = document.querySelector('.top-users-container');
            
            if (newContent && currentContent) {
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–µ —Ç—Ä–æ–≥–∞—è —Ñ–∏–ª—å—Ç—Ä—ã
                const newUserList = newContent.querySelector('.top-users-list');
                const currentUserList = currentContent.querySelector('.top-users-list');
                
                if (newUserList && currentUserList) {
                    currentUserList.innerHTML = newUserList.innerHTML;
                    console.log('‚úÖ –§–∏–ª—å—Ç—Ä—ã —Å–±—Ä–æ—à–µ–Ω—ã, —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–±–Ω–æ–≤–ª–µ–Ω');
                } else {
                    // Fallback - –æ–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç
                    currentContent.innerHTML = newContent.innerHTML;
                    console.log('‚úÖ –§–∏–ª—å—Ç—Ä—ã —Å–±—Ä–æ—à–µ–Ω—ã, –∫–æ–Ω—Ç–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω (fallback)');
                }
                
                // –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –∫–∞—Ä—É—Å–µ–ª–∏ –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
                setTimeout(() => {
                    if (typeof window.initCarouselButtons === 'function') {
                        console.log('üîÑ –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –∫–∞—Ä—É—Å–µ–ª–∏ –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞');
                        window.initCarouselButtons();
                    }
                }, 100);
            } else {
                // Fallback - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
                window.location.href = url.toString();
            }
        })
        .catch(error => {
            console.error('‚ùå –û—à–∏–±–∫–∞ AJAX –∑–∞–ø—Ä–æ—Å–∞:', error);
            // Fallback - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
            window.location.href = url.toString();
        });
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–ø–µ—Ä—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏–∑ HTML —à–∞–±–ª–æ–Ω–∞
// document.addEventListener('DOMContentLoaded', () => {
//     new TopUsersFilter();
// });

// –î–µ–ª–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –≥–ª–æ–±–∞–ª—å–Ω—ã–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
window.TopUsersFilter = TopUsersFilter;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ SPA –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
window.reinitializeTopUsersPage = function() {
    console.log('üîÑ reinitializeTopUsersPage –≤—ã–∑–≤–∞–Ω –¥–ª—è SPA –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
    
    // –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
    if (window.TopUsersFilter) {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        if (window.topUsersFilter) {
            console.log('üîÑ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä TopUsersFilter');
            // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–æ–¥ destroy –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        }
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
        window.topUsersFilter = new window.TopUsersFilter();
        console.log('‚úÖ TopUsersFilter –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è SPA –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
    } else {
        console.error('‚ùå TopUsersFilter class –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
    }
};
