// –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –û–¢–ö–†–´–¢–ò–Ø –°–í–ê–ô–ü–ï–†–ê –ù–ê –û–ü–†–ï–î–ï–õ–Å–ù–ù–û–ú –°–õ–ê–ô–î–ï
window.openSwiperAtIndex = function(slideIndex = 3) {
    console.log('üîß –û–¢–ö–†–´–¢–ò–ï –°–í–ê–ô–ü–ï–†–ê –ù–ê –°–õ–ê–ô–î–ï:', slideIndex);
    
    const showBtn = document.getElementById('show-all-users');
    const carousel = document.getElementById('all-users-carousel');
    const backdrop = document.getElementById('carousel-backdrop');
    
    if (!carousel) {
        console.error('üîß –ö–∞—Ä—É—Å–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
        return;
    }
    
    // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö" –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
    if (showBtn) {
        showBtn.classList.add('hidden');
    }
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª body ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é –∏ —Ñ–∏–∫—Å–∏—Ä—É–µ–º —Å top offset
    const scrollY = window.pageYOffset || document.documentElement.scrollTop || 0;
    window.scrollPositionBeforeSwiper = scrollY;

    document.body.style.overflow = 'hidden';
    // –§–∏–∫—Å–∏—Ä—É–µ–º —Ç–µ–ª–æ –∏ —Å–º–µ—â–∞–µ–º –≤–≤–µ—Ä—Ö –Ω–∞ —Ç–µ–∫—É—â–∏–π —Å–∫—Ä–æ–ª–ª, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø—Ä—ã–∂–∫–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
    document.body.style.position = 'fixed';
    document.body.style.top = `-${scrollY}px`;
    document.body.style.left = '0';
    document.body.style.right = '0';
    document.body.style.width = '100%';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º backdrop
    if (backdrop) {
        backdrop.classList.add('active');
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ä—É—Å–µ–ª—å –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å active –¥–ª—è flex-—Å—Ç–∏–ª–µ–π
    carousel.style.display = 'block';
    carousel.classList.add('active');
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    const screenWidth = window.innerWidth;
    const screenHeight = window.innerHeight;
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–µ–Ω–Ω–æ –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ —É–∑–∫–∏–π —ç–∫—Ä–∞–Ω
    const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
    const width = '330px';
    const height = isMobile ? '515px' : '445px';
    
    // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ - —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —É—á–µ—Ç–æ–º Safe Areas Telegram (–∑–∞–¥–∞–Ω–æ –≤ CSS)
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç—ã –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
    const topPosition = '50%';
    const leftPosition = '50%';
    
    // –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –°–¢–ò–õ–ï–ô –° –í–´–°–û–ö–û–ô –°–ü–ï–¶–ò–§–ò–ß–ù–û–°–¢–¨–Æ
    carousel.style.setProperty('position', 'fixed', 'important');
    carousel.style.setProperty('top', topPosition, 'important');
    carousel.style.setProperty('left', leftPosition, 'important');
    carousel.style.setProperty('right', 'auto', 'important');
    carousel.style.setProperty('bottom', 'auto', 'important');
    carousel.style.setProperty('transform', 'translate(-50%, -50%)', 'important');
    carousel.style.setProperty('width', width, 'important');
    carousel.style.setProperty('height', height, 'important');
    carousel.style.setProperty('max-width', width, 'important');
    carousel.style.setProperty('max-height', height, 'important');
    carousel.style.setProperty('min-width', width, 'important');
    carousel.style.setProperty('min-height', height, 'important');
    carousel.style.setProperty('margin', '0', 'important');
    carousel.style.setProperty('padding', '0', 'important');
    carousel.style.setProperty('z-index', '99999', 'important');
    
    console.log('üîß –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —Ä–∞–∑–º–µ—Ä—ã –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:', {
        screenWidth: screenWidth,
        isMobile: isMobile,
        width: width,
        height: height,
        computedWidth: window.getComputedStyle(carousel).width,
        computedHeight: window.getComputedStyle(carousel).height
    });
    
    // –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –û–¢–õ–ê–î–ö–ê –ü–û–ó–ò–¶–ò–û–ù–ò–†–û–í–ê–ù–ò–Ø
    console.log('üîß –û–¢–õ–ê–î–ö–ê –ü–û–ó–ò–¶–ò–û–ù–ò–†–û–í–ê–ù–ò–Ø:', {
        top: carousel.style.top,
        left: carousel.style.left,
        transform: carousel.style.transform,
        position: getComputedStyle(carousel).position,
        display: carousel.style.display,
        zIndex: getComputedStyle(carousel).zIndex,
        windowInnerWidth: window.innerWidth,
        windowInnerHeight: window.innerHeight
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –≤–Ω–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å–≤–∞–π–ø–µ—Ä–∞ –∏–ª–∏ –Ω–∞ backdrop
    const handleOutsideClick = function(e) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–∫—Ä—ã—Ç–∞ –ª–∏ –∫–∞—Ä—É—Å–µ–ª—å
        if (carousel.style.display !== 'block') return;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –∫–ª–∏–∫ –≤–Ω–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∫–∞—Ä—É—Å–µ–ª–∏ –∏–ª–∏ –Ω–∞ backdrop
        if (!carousel.contains(e.target) || (backdrop && e.target === backdrop)) {
            console.log('üîß –ö–õ–ò–ö –í–ù–ï –ö–û–ù–¢–ï–ô–ù–ï–†–ê –°–í–ê–ô–ü–ï–†–ê - –ó–ê–ö–†–´–í–ê–ï–ú');
            closeCarousel();
            // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è
            document.removeEventListener('click', handleOutsideClick);
            if (backdrop) {
                backdrop.removeEventListener('click', handleOutsideClick);
            }
        }
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π, —á—Ç–æ–±—ã –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª –Ω–∞ –∫–ª–∏–∫–µ –ø–æ –∫–Ω–æ–ø–∫–µ
    setTimeout(() => {
        document.addEventListener('click', handleOutsideClick);
        // –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ backdrop
        if (backdrop) {
            backdrop.addEventListener('click', handleOutsideClick);
        }
    }, 100);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Swiper —Å –Ω–∞—á–∞–ª—å–Ω—ã–º —Å–ª–∞–π–¥–æ–º
    setTimeout(() => {
        if (typeof Swiper !== 'undefined') {
            console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Swiper –Ω–∞ —Å–ª–∞–π–¥–µ:', slideIndex);
            
            // –£–Ω–∏—á—Ç–æ–∂–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä Swiper –µ—Å–ª–∏ –µ—Å—Ç—å
            if (window.userSwiper) {
                window.userSwiper.destroy(true, true);
            }
            
            window.userSwiper = new Swiper('#users-swiper', {
                slidesPerView: 1,
                spaceBetween: 0,
                centeredSlides: true,
                loop: false,
                effect: 'slide',
                speed: 300,
                initialSlide: slideIndex, // –ù–∞—á–∏–Ω–∞–µ–º —Å —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Å–ª–∞–π–¥–∞
                navigation: {
                    nextEl: '.swiper-button-next',
                    prevEl: '.swiper-button-prev',
                },
                on: {
                    init: function() {
                        console.log('üîß Swiper –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –Ω–∞ —Å–ª–∞–π–¥–µ:', this.activeIndex);
                        
                        // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ last_seen —Ç–µ–∫—Å—Ç–æ–≤
                        if (typeof updateLastSeenTexts === 'function') {
                            setTimeout(() => updateLastSeenTexts(), 100);
                        }
                        
                        // –ü–æ–≤—Ç–æ—Ä–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Swiper
                        setTimeout(() => {
                            const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
                            const width = '330px';
                            const height = isMobile ? '515px' : '445px';
                            // –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ
                            const topPosition = '50%';
                            const leftPosition = '50%';
                            
                            carousel.style.setProperty('width', width, 'important');
                            carousel.style.setProperty('height', height, 'important');
                            carousel.style.setProperty('max-width', width, 'important');
                            carousel.style.setProperty('max-height', height, 'important');
                            carousel.style.setProperty('min-width', width, 'important');
                            carousel.style.setProperty('min-height', height, 'important');
                            carousel.style.setProperty('top', topPosition, 'important');
                            carousel.style.setProperty('left', leftPosition, 'important');
                            carousel.style.setProperty('right', 'auto', 'important');
                            carousel.style.setProperty('bottom', 'auto', 'important');
                            carousel.style.setProperty('transform', 'translate(-50%, -50%)', 'important');
                            
                            console.log('üîß –†–∞–∑–º–µ—Ä—ã –ø–æ–≤—Ç–æ—Ä–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø–æ—Å–ª–µ Swiper init:', {
                                computedWidth: window.getComputedStyle(carousel).width,
                                computedHeight: window.getComputedStyle(carousel).height
                            });
                            
                            // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ –Ω–∞ swiper-wrapper
                            console.log('üîß –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤');
                            const swiperWrapper = carousel.querySelector('.swiper-wrapper');
                            
                            if (swiperWrapper) {
                                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π
                                swiperWrapper.addEventListener('click', function(e) {
                                    // –ò—â–µ–º –±–ª–∏–∂–∞–π—à–∏–π .user-item
                                    const userItem = e.target.closest('.user-item');
                                    
                                    if (userItem) {
                                        const telegramId = userItem.getAttribute('data-telegram-id');
                                        console.log('üë§üë§üë§ –ö–õ–ò–ö –ü–û –ö–ê–†–¢–û–ß–ö–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø!', telegramId);
                                        console.log('üë§ Event target:', e.target);
                                        console.log('üë§ Closest user-item:', userItem);
                                        
                                        e.stopPropagation();
                                        e.preventDefault();
                                        
                                        if (telegramId) {
                                            console.log('‚úÖ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ—Ñ–∏–ª—è:', `/user_profile/${telegramId}`);
                                            
                                            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å —Å–ª–∞–π–¥–∞ –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ swiper-slide
                                            const swiperSlide = userItem.closest('.swiper-slide');
                                            if (swiperSlide && window.userSwiper) {
                                                const currentIndex = window.userSwiper.activeIndex;
                                                sessionStorage.setItem('topUsersSwiperIndex', currentIndex);
                                                sessionStorage.setItem('returnToSwiper', 'true');
                                                console.log('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω –∏–Ω–¥–µ–∫—Å —Å–ª–∞–π–¥–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞:', currentIndex);
                                            } else {
                                                console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω–¥–µ–∫—Å Swiper, —Å–æ—Ö—Ä–∞–Ω—è–µ–º 0');
                                                sessionStorage.setItem('topUsersSwiperIndex', '0');
                                                sessionStorage.setItem('returnToSwiper', 'true');
                                            }
                                            
                                            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã
                                            if (window.topUsersFilter && window.topUsersFilter.filters) {
                                                const filters = window.topUsersFilter.filters;
                                                sessionStorage.setItem('topUsersFilters', JSON.stringify(filters));
                                                console.log('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω—ã —Ñ–∏–ª—å—Ç—Ä—ã:', filters);
                                            }
                                            
                                            window.location.href = `/user_profile/${telegramId}`;
                                        } else {
                                            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å telegram_id');
                                        }
                                    }
                                }, true); // –ò—Å–ø–æ–ª—å–∑—É–µ–º capture phase
                                
                                console.log('‚úÖ –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω –Ω–∞ swiper-wrapper');
                            } else {
                                console.error('‚ùå swiper-wrapper –Ω–µ –Ω–∞–π–¥–µ–Ω!');
                            }
                        }, 50);
                    }
                }
            });
        } else {
            console.error('üîß Swiper –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        }
    }, 100);
};

// –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ó–ê–ö–†–´–¢–ò–Ø –ö–ê–†–£–°–ï–õ–ò
window.closeCarousel = function() {
    console.log('üîß –ó–ê–ö–†–´–¢–ò–ï –ö–ê–†–£–°–ï–õ–ò');
    
    const showBtn = document.getElementById('show-all-users');
    const carousel = document.getElementById('all-users-carousel');
    const backdrop = document.getElementById('carousel-backdrop');
    
    if (!carousel) {
        console.error('üîß –ö–∞—Ä—É—Å–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏');
        return;
    }
    
    // –£–Ω–∏—á—Ç–æ–∂–∞–µ–º Swiper
    if (window.userSwiper) {
        window.userSwiper.destroy(true, true);
        window.userSwiper = null;
    }
    
    // –°–∫—Ä—ã–≤–∞–µ–º backdrop
    if (backdrop) {
        backdrop.classList.remove('active');
    }
    
    // –°–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ä—É—Å–µ–ª—å –∏ —É–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å active
    carousel.style.display = 'none';
    carousel.classList.remove('active');
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª body –∏ –ø–æ–∑–∏—Ü–∏—é
    const prevScroll = typeof window.scrollPositionBeforeSwiper !== 'undefined' ? window.scrollPositionBeforeSwiper : 0;

    // –£–±–∏—Ä–∞–µ–º —Ñ–∏–∫—Å–∞—Ü–∏—é —Ç–µ–ª–∞ –∏ –æ—á–∏—â–∞–µ–º top, –∑–∞—Ç–µ–º –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é —Å–∫—Ä–æ–ª–ª–∞
    document.body.style.overflow = '';
    document.body.style.position = '';
    document.body.style.top = '';
    document.body.style.left = '';
    document.body.style.right = '';
    document.body.style.width = '';

    if (prevScroll) {
        window.scrollTo(0, prevScroll);
        delete window.scrollPositionBeforeSwiper;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö" —á–µ—Ä–µ–∑ —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞
    if (showBtn) {
        showBtn.classList.remove('hidden');
    }
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–ø—Ä–∏–º–µ–Ω—è–µ–º –≤—Å–µ —Å—Ç–∏–ª–∏ –ø–æ—Å–ª–µ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π —Å document.body
    setTimeout(() => {
        // –¢—Ä–∏–≥–≥–µ—Ä–∏–º reflow –¥–ª—è –ø–µ—Ä–µ–ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è CSS
        if (showBtn) {
            void showBtn.offsetHeight;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å—Ç–∏–ª–∏ –∫–Ω–æ–ø–æ–∫ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
        const resetBtn = document.getElementById('reset-filters');
        if (resetBtn) {
            void resetBtn.offsetHeight;
        }
        
        console.log('‚úÖ –ö–∞—Ä—É—Å–µ–ª—å –∑–∞–∫—Ä—ã—Ç–∞, —Å—Ç–∏–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏ –ø–µ—Ä–µ–ø—Ä–∏–º–µ–Ω–µ–Ω—ã');
    }, 50);
};

// –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò –ö–ù–û–ü–û–ö –ö–ê–†–£–°–ï–õ–ò
window.initCarouselButtons = function() {
    console.log('üîß –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ö–ù–û–ü–û–ö –ò SWIPER');
    
    const showBtn = document.getElementById('show-all-users');
    const carousel = document.getElementById('all-users-carousel');
    
    console.log('üîß –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', {
        showBtn: !!showBtn,
        carousel: !!carousel
    });
    
    if (showBtn && carousel) {
        console.log('üîß –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω—ã, –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏');
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        showBtn.onclick = null;
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö" - –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å 4-–≥–æ —Å–ª–∞–π–¥–∞ (–∏–Ω–¥–µ–∫—Å 3)
        showBtn.onclick = function(e) {
            console.log('üîß –ö–ù–û–ü–ö–ê "–ü–û–ö–ê–ó–ê–¢–¨ –í–°–ï–•" –ù–ê–ñ–ê–¢–ê!');
            e.preventDefault();
            e.stopPropagation();
            
            // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–≤–∞–π–ø–µ—Ä –Ω–∞ 4-–º —Å–ª–∞–π–¥–µ (–∏–Ω–¥–µ–∫—Å 3)
            openSwiperAtIndex(3);
        };
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ –∫–ª–∞–≤–∏—à–µ ESC
        const handleEscKey = function(e) {
            if (e.key === 'Escape' || e.keyCode === 27) {
                if (carousel.style.display === 'block') {
                    closeCarousel();
                }
            }
        };

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–Ω–∞ –ø—É—Å—Ç—É—é –æ–±–ª–∞—Å—Ç—å)
        carousel.addEventListener('click', function(e) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –∫–ª–∏–∫ –ù–ï –ø–æ user-item
            const clickedOnUserItem = e.target.closest('.user-item');
            
            if (clickedOnUserItem) {
                // –ï—Å–ª–∏ –∫–ª–∏–∫ –ø–æ user-item - –Ω–µ –∑–∞–∫—Ä—ã–≤–∞–µ–º, –ø—É—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç—Å—è onclick
                console.log('üîß –ö–õ–ò–ö –ü–û –ö–ê–†–¢–û–ß–ö–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø - –ù–ï –ó–ê–ö–†–´–í–ê–ï–ú');
                return;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –∫–ª–∏–∫ –ø–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É –∏–ª–∏ –ø–æ swiper (–Ω–µ –ø–æ user-item)
            const clickedOnCarousel = e.target === carousel;
            const clickedOnSwiper = e.target.classList.contains('swiper') || 
                                   e.target.classList.contains('swiper-wrapper') ||
                                   e.target.classList.contains('swiper-slide');
            
            if (clickedOnCarousel || clickedOnSwiper) {
                console.log('üîß –ö–õ–ò–ö –í–ù–ï –û–ë–õ–ê–°–¢–ò –ö–û–ù–¢–ï–ù–¢–ê - –ó–ê–ö–†–´–í–ê–ï–ú');
                closeCarousel();
            }
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ ESC
        document.addEventListener('keydown', handleEscKey);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É–¥–∞–ª–µ–Ω–∏—è
        window.carouselEscHandler = handleEscKey;
        
        console.log('üîß –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
        return true;
    } else {
        console.error('üîß –ù–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω—ã!');
        return false;
    }
};

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
class TopUsersFilter {
    constructor() {
        this.filters = {
            gender: '',
            age: '',
            language: '',
            online: ''
        };
        
        this.init();
    }

    init() {
        console.log('üöÄ TopUsersFilter: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è');
        
        // –û—á–∏—â–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –∏–∑ sessionStorage (–µ—Å–ª–∏ –µ—Å—Ç—å)
        // –û–Ω–∏ —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —á–µ—Ä–µ–∑ URL –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ
        const savedFilters = sessionStorage.getItem('topUsersFilters');
        if (savedFilters) {
            console.log('üßπ –û—á–∏—â–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –∏–∑ sessionStorage');
            sessionStorage.removeItem('topUsersFilters');
        }
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (–æ–Ω–∏ –±—É–¥—É—Ç —Ç–∞–º –µ—Å–ª–∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏)
        this.loadFiltersFromURL();
        
        this.bindEvents();
        console.log('‚úÖ TopUsersFilter: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
        this.testElements();
    }
    
    testElements() {
        console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ñ–∏–ª—å—Ç—Ä–æ–≤:');
        const elements = {
            'gender-filter': document.getElementById('gender-filter'),
            'age-filter': document.getElementById('age-filter'),
            'language-filter': document.getElementById('language-filter'),
            'online-filter': document.getElementById('online-filter'),
            'reset-filters': document.getElementById('reset-filters')
        };
        
        for (const [name, element] of Object.entries(elements)) {
            if (element) {
                console.log(`‚úÖ ${name}: –Ω–∞–π–¥–µ–Ω`);
            } else {
                console.error(`‚ùå ${name}: –ù–ï –ù–ê–ô–î–ï–ù!`);
            }
        }
    }

    bindEvents() {
        console.log('üîó TopUsersFilter: –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π...');
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–µ–ª–µ–∫—Ç–æ–≤ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        const genderFilter = document.getElementById('gender-filter');
        const ageFilter = document.getElementById('age-filter');
        const languageFilter = document.getElementById('language-filter');
        const onlineFilter = document.getElementById('online-filter');
        const resetButton = document.getElementById('reset-filters');
        
        console.log('üîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:', {
            genderFilter: !!genderFilter,
            ageFilter: !!ageFilter,
            languageFilter: !!languageFilter,
            onlineFilter: !!onlineFilter,
            resetButton: !!resetButton
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω—ã
        if (!genderFilter) console.warn('‚ö†Ô∏è gender-filter –Ω–µ –Ω–∞–π–¥–µ–Ω');
        if (!ageFilter) console.warn('‚ö†Ô∏è age-filter –Ω–µ –Ω–∞–π–¥–µ–Ω');
        if (!languageFilter) console.warn('‚ö†Ô∏è language-filter –Ω–µ –Ω–∞–π–¥–µ–Ω');
        if (!onlineFilter) console.warn('‚ö†Ô∏è online-filter –Ω–µ –Ω–∞–π–¥–µ–Ω');
        if (!resetButton) console.warn('‚ö†Ô∏è reset-filters –∫–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        
        genderFilter?.addEventListener('change', (e) => {
            console.log('üë§ Gender filter changed:', e.target.value);
            this.filters.gender = e.target.value;
            this.applyFilters();
        });

        ageFilter?.addEventListener('change', (e) => {
            console.log('üéÇ Age filter changed:', e.target.value);
            this.filters.age = e.target.value;
            this.applyFilters();
        });

        languageFilter?.addEventListener('change', (e) => {
            console.log('üíª Language filter changed:', e.target.value);
            this.filters.language = e.target.value;
            this.applyFilters();
        });

        // ratingFilter?.addEventListener('change', (e) => { // –£–±—Ä–∞–Ω, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç –≤ HTML
        //     console.log('‚≠ê Rating filter changed:', e.target.value);
        //     this.filters.rating = e.target.value;
        //     this.applyFilters();
        // });

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞ –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å–∞
        if (onlineFilter) {
            console.log('‚úÖ Online filter –Ω–∞–π–¥–µ–Ω, –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫');
            onlineFilter.addEventListener('change', (e) => {
                console.log('üü¢ Online filter changed:', e.target.value);
                this.filters.online = e.target.value;
                console.log('üü¢ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:', this.filters);
                this.applyFilters();
            });
        } else {
            console.error('‚ùå Online filter –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        }

        // –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        if (resetButton) {
            console.log('üîó –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫ –∫–Ω–æ–ø–∫–µ —Å–±—Ä–æ—Å–∞');
            resetButton.addEventListener('click', (e) => {
                console.log('üîÑ Reset filters clicked - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ä–∞–±–æ—Ç–∞–ª!');
                e.preventDefault();
                this.resetFilters();
            });
        } else {
            console.error('‚ùå –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
        }
        
        console.log('‚úÖ TopUsersFilter: –°–æ–±—ã—Ç–∏—è –ø—Ä–∏–≤—è–∑–∞–Ω—ã');
    }

    loadFiltersFromURL() {
        console.log('üåêüåêüåê –ó–ê–ì–†–£–ó–ö–ê –§–ò–õ–¨–¢–†–û–í –ò–ó URL üåêüåêüåê');
        console.log('üîç –¢–µ–∫—É—â–∏–π URL:', window.location.href);
        console.log('üîç Query string:', window.location.search);
        
        const urlParams = new URLSearchParams(window.location.search);
        console.log('üîç URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:', Object.fromEntries(urlParams));
        
        this.filters.gender = urlParams.get('gender') || '';
        this.filters.age = urlParams.get('age') || '';
        this.filters.language = urlParams.get('language_pref') || '';
        this.filters.online = urlParams.get('online_only') || '';

        console.log('üì¶ –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:', this.filters);

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å–µ–ª–µ–∫—Ç—ã
        console.log('üéØ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å–µ–ª–µ–∫—Ç—ã...');
        this.setSelectValue('gender-filter', this.filters.gender);
        this.setSelectValue('age-filter', this.filters.age);
        this.setSelectValue('language-filter', this.filters.language);
        this.setSelectValue('online-filter', this.filters.online);
        
        console.log('‚úÖ –§–∏–ª—å—Ç—Ä—ã –∏–∑ URL –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∫ —Å–µ–ª–µ–∫—Ç–∞–º');
    }

    setSelectValue(selectId, value) {
        const select = document.getElementById(selectId);
        if (select) {
            select.value = value;
            console.log(`üîÑ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è ${selectId}: ${value}`);
        } else {
            console.warn(`‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç ${selectId} –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è ${value}`);
        }
    }


    applyFilters() {
        console.log('üîç TopUsersFilter: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤', this.filters);
        console.log('üîç –¢–µ–∫—É—â–∏–π URL:', window.location.href);
        console.log('üîç –§–∏–ª—å—Ç—Ä—ã –∞–∫—Ç–∏–≤–Ω—ã:', {
            gender: this.filters.gender,
            age: this.filters.age,
            language: this.filters.language,
            online: this.filters.online
        });
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ AJAX –≤–º–µ—Å—Ç–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        this.updateContentWithFilters();
    }

    updateContentWithFilters() {
        console.log('üîÑ TopUsersFilter: updateContentWithFilters –≤—ã–∑–≤–∞–Ω');
        console.log('üîÑ –¢–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã:', this.filters);
        
        const url = new URL(window.location);
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤
        url.searchParams.delete('gender');
        url.searchParams.delete('age');
        url.searchParams.delete('language_pref');
        url.searchParams.delete('online_only');

        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤
        if (this.filters.gender) {
            url.searchParams.set('gender', this.filters.gender);
        }
        if (this.filters.age) {
            url.searchParams.set('age', this.filters.age);
        }
        if (this.filters.language) {
            url.searchParams.set('language_pref', this.filters.language);
        }
        if (this.filters.online) {
            url.searchParams.set('online_only', this.filters.online);
        }
        // if (this.filters.rating) { // –£–±—Ä–∞–Ω
        //     url.searchParams.set('rating', this.filters.rating);
        // }

        console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ AJAX:', url.toString());
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ AJAX
        fetch(url.toString(), {
            method: 'GET',
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.text())
        .then(html => {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
            const currentFilters = {
                gender: document.getElementById('gender-filter')?.value || '',
                age: document.getElementById('age-filter')?.value || '',
                language: document.getElementById('language-filter')?.value || '',
                online: document.getElementById('online-filter')?.value || ''
            };
            
            console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã:', currentFilters);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            const parser = new DOMParser();
            const doc = parser.parseFromString(html, 'text/html');
            const newContent = doc.querySelector('.top-users-container');
            const currentContent = document.querySelector('.top-users-container');
            
            if (newContent && currentContent) {
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–µ —Ç—Ä–æ–≥–∞—è —Ñ–∏–ª—å—Ç—Ä—ã
                const newUserList = newContent.querySelector('.top-users-list');
                const currentUserList = currentContent.querySelector('.top-users-list');
                
                if (newUserList && currentUserList) {
                    currentUserList.innerHTML = newUserList.innerHTML;
                    console.log('‚úÖ –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–±–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ AJAX');
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ last_seen —Ç–µ–∫—Å—Ç–æ–≤ –≤ —Ç–æ–ø-5
                    if (typeof updateLastSeenTexts === 'function') {
                        updateLastSeenTexts();
                    }
                } else {
                    // Fallback - –æ–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç
                    currentContent.innerHTML = newContent.innerHTML;
                    console.log('‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ AJAX (fallback)');
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ last_seen —Ç–µ–∫—Å—Ç–æ–≤
                    if (typeof updateLastSeenTexts === 'function') {
                        updateLastSeenTexts();
                    }
                }
                
                // –û–ë–ù–û–í–õ–Ø–ï–ú –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û –°–í–ê–ô–ü–ï–†–ê (–æ–Ω–æ –≤–Ω–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞)
                const newCarousel = doc.querySelector('.all-users-carousel');
                const currentCarousel = document.querySelector('.all-users-carousel');
                
                if (newCarousel && currentCarousel) {
                    // –£–Ω–∏—á—Ç–æ–∂–∞–µ–º —Å—Ç–∞—Ä—ã–π Swiper –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                    if (window.userSwiper) {
                        console.log('üîÑ –£–Ω–∏—á—Ç–æ–∂–∞–µ–º —Å—Ç–∞—Ä—ã–π Swiper –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º');
                        window.userSwiper.destroy(true, true);
                        window.userSwiper = null;
                    }
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –∫–∞—Ä—É—Å–µ–ª–∏
                    currentCarousel.innerHTML = newCarousel.innerHTML;
                    console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–≤–∞–π–ø–µ—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–æ —Å —É—á–µ—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤');
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ last_seen —Ç–µ–∫—Å—Ç–æ–≤
                    if (typeof updateLastSeenTexts === 'function') {
                        updateLastSeenTexts();
                    }
                }
                
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
                setTimeout(() => {
                    if (currentFilters.gender) {
                        const genderSelect = document.getElementById('gender-filter');
                        if (genderSelect) genderSelect.value = currentFilters.gender;
                    }
                    if (currentFilters.age) {
                        const ageSelect = document.getElementById('age-filter');
                        if (ageSelect) ageSelect.value = currentFilters.age;
                    }
                    if (currentFilters.language) {
                        const languageSelect = document.getElementById('language-filter');
                        if (languageSelect) languageSelect.value = currentFilters.language;
                    }
                    if (currentFilters.online) {
                        const onlineSelect = document.getElementById('online-filter');
                        if (onlineSelect) onlineSelect.value = currentFilters.online;
                    }
                    console.log('üîÑ –§–∏–ª—å—Ç—Ä—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
                    
                    // –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–±–Ω–æ–≤–∏–ª–∏ –≤–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç
                    if (!newUserList || !currentUserList) {
                        this.bindEvents();
                    }
                    
                    // –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –∫–∞—Ä—É—Å–µ–ª–∏
                    if (typeof window.initCarouselButtons === 'function') {
                        console.log('üîÑ –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –∫–∞—Ä—É—Å–µ–ª–∏');
                        window.initCarouselButtons();
                    }
                }, 100);
            } else {
                // Fallback - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
                window.location.href = url.toString();
            }
        })
        .catch(error => {
            console.error('‚ùå –û—à–∏–±–∫–∞ AJAX –∑–∞–ø—Ä–æ—Å–∞:', error);
            // Fallback - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
            window.location.href = url.toString();
        });
    }

    reloadWithFilters() {
        console.log('üîÑ TopUsersFilter: reloadWithFilters –≤—ã–∑–≤–∞–Ω');
        console.log('üîÑ –¢–µ–∫—É—â–∏–π URL:', window.location.href);
        console.log('üîÑ –¢–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã:', this.filters);
        
        const url = new URL(window.location);
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤
        url.searchParams.delete('gender');
        url.searchParams.delete('age');
        url.searchParams.delete('language_pref');
        url.searchParams.delete('online_only');

        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤
        if (this.filters.gender) {
            url.searchParams.set('gender', this.filters.gender);
            console.log('‚ûï –î–æ–±–∞–≤–ª–µ–Ω gender:', this.filters.gender);
        }
        if (this.filters.age) {
            url.searchParams.set('age', this.filters.age);
            console.log('‚ûï –î–æ–±–∞–≤–ª–µ–Ω age:', this.filters.age);
        }
        if (this.filters.language) {
            url.searchParams.set('language_pref', this.filters.language);
            console.log('‚ûï –î–æ–±–∞–≤–ª–µ–Ω language_pref:', this.filters.language);
        }
        if (this.filters.online) {
            url.searchParams.set('online_only', this.filters.online);
            console.log('‚ûï –î–æ–±–∞–≤–ª–µ–Ω online_only:', this.filters.online);
        }

        console.log('üîÑ –ù–æ–≤—ã–π URL:', url.toString());
        console.log('üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É...');

        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
        window.location.href = url.toString();
    }


    resetFilters() {
        console.log('üîÑ Reset filters clicked - —Å–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–æ–≤');
        console.log('üîÑ –¢–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã –¥–æ —Å–±—Ä–æ—Å–∞:', this.filters);
        console.log('üîÑ –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ –Ω–∞–∂–∞—Ç–∞, –Ω–∞—á–∏–Ω–∞–µ–º —Å–±—Ä–æ—Å...');
        
        this.filters = {
            gender: '',
            age: '',
            language: '',
            online: ''
        };

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–µ–ª–µ–∫—Ç—ã
        this.setSelectValue('gender-filter', '');
        this.setSelectValue('age-filter', '');
        this.setSelectValue('language-filter', '');
        this.setSelectValue('online-filter', '');
        
        console.log('üîÑ –§–∏–ª—å—Ç—Ä—ã —Å–±—Ä–æ—à–µ–Ω—ã –≤ –æ–±—ä–µ–∫—Ç–µ:', this.filters);

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ AJAX –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        const url = new URL(window.location);
        url.searchParams.delete('gender');
        url.searchParams.delete('age');
        url.searchParams.delete('language_pref');
        url.searchParams.delete('online_only');
        
        console.log('üîÑ Reset filters - –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ AJAX:', url.toString());
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ AJAX
        fetch(url.toString(), {
            method: 'GET',
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.text())
        .then(html => {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            const parser = new DOMParser();
            const doc = parser.parseFromString(html, 'text/html');
            const newContent = doc.querySelector('.top-users-container');
            const currentContent = document.querySelector('.top-users-container');
            
            if (newContent && currentContent) {
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–µ —Ç—Ä–æ–≥–∞—è —Ñ–∏–ª—å—Ç—Ä—ã
                const newUserList = newContent.querySelector('.top-users-list');
                const currentUserList = currentContent.querySelector('.top-users-list');
                
                if (newUserList && currentUserList) {
                    currentUserList.innerHTML = newUserList.innerHTML;
                    console.log('‚úÖ –§–∏–ª—å—Ç—Ä—ã —Å–±—Ä–æ—à–µ–Ω—ã, —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–±–Ω–æ–≤–ª–µ–Ω');
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ last_seen —Ç–µ–∫—Å—Ç–æ–≤ –≤ —Ç–æ–ø-5
                    if (typeof updateLastSeenTexts === 'function') {
                        updateLastSeenTexts();
                    }
                } else {
                    // Fallback - –æ–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç
                    currentContent.innerHTML = newContent.innerHTML;
                    console.log('‚úÖ –§–∏–ª—å—Ç—Ä—ã —Å–±—Ä–æ—à–µ–Ω—ã, –∫–æ–Ω—Ç–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω (fallback)');
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ last_seen —Ç–µ–∫—Å—Ç–æ–≤
                    if (typeof updateLastSeenTexts === 'function') {
                        updateLastSeenTexts();
                    }
                }
                
                // –û–ë–ù–û–í–õ–Ø–ï–ú –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û –°–í–ê–ô–ü–ï–†–ê –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
                const newCarousel = doc.querySelector('.all-users-carousel');
                const currentCarousel = document.querySelector('.all-users-carousel');
                
                if (newCarousel && currentCarousel) {
                    // –£–Ω–∏—á—Ç–æ–∂–∞–µ–º —Å—Ç–∞—Ä—ã–π Swiper –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                    if (window.userSwiper) {
                        console.log('üîÑ –£–Ω–∏—á—Ç–æ–∂–∞–µ–º —Å—Ç–∞—Ä—ã–π Swiper –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º (—Å–±—Ä–æ—Å)');
                        window.userSwiper.destroy(true, true);
                        window.userSwiper = null;
                    }
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –∫–∞—Ä—É—Å–µ–ª–∏
                    currentCarousel.innerHTML = newCarousel.innerHTML;
                    console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–≤–∞–π–ø–µ—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤');
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ last_seen —Ç–µ–∫—Å—Ç–æ–≤
                    if (typeof updateLastSeenTexts === 'function') {
                        updateLastSeenTexts();
                    }
                }
                
                // –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –∫–∞—Ä—É—Å–µ–ª–∏ –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
                setTimeout(() => {
                    if (typeof window.initCarouselButtons === 'function') {
                        console.log('üîÑ –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –∫–∞—Ä—É—Å–µ–ª–∏ –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞');
                        window.initCarouselButtons();
                    }
                }, 100);
            } else {
                // Fallback - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
                window.location.href = url.toString();
            }
        })
        .catch(error => {
            console.error('‚ùå –û—à–∏–±–∫–∞ AJAX –∑–∞–ø—Ä–æ—Å–∞:', error);
            // Fallback - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
            window.location.href = url.toString();
        });
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–ø–µ—Ä—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏–∑ HTML —à–∞–±–ª–æ–Ω–∞
// document.addEventListener('DOMContentLoaded', () => {
//     new TopUsersFilter();
// });

// –î–µ–ª–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –≥–ª–æ–±–∞–ª—å–Ω—ã–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
window.TopUsersFilter = TopUsersFilter;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ SPA –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
window.reinitializeTopUsersPage = function() {
    console.log('üîÑ reinitializeTopUsersPage –≤—ã–∑–≤–∞–Ω –¥–ª—è SPA –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
    
    // –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
    if (window.TopUsersFilter) {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        if (window.topUsersFilter) {
            console.log('üîÑ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä TopUsersFilter');
            // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–æ–¥ destroy –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        }
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
        window.topUsersFilter = new window.TopUsersFilter();
        console.log('‚úÖ TopUsersFilter –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è SPA –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
    } else {
        console.error('‚ùå TopUsersFilter class –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ "–±—ã–ª –æ–Ω–ª–∞–π–Ω X –Ω–∞–∑–∞–¥"
function formatLastSeen(lastSeenDate) {
    if (!lastSeenDate) return null;
    
    const now = new Date();
    const lastSeen = new Date(lastSeenDate);
    const diffMs = now - lastSeen;
    const diffMins = Math.floor(diffMs / 60000);
    const diffHours = Math.floor(diffMs / 3600000);
    const diffDays = Math.floor(diffMs / 86400000);
    
    const currentLang = window.currentLanguage || 'ru';
    
    if (diffMins < 1) {
        return currentLang === 'en' ? 'just now' : '—Ç–æ–ª—å–∫–æ —á—Ç–æ';
    } else if (diffMins < 60) {
        const unit = currentLang === 'en' ? 
            (diffMins === 1 ? 'minute' : 'minutes') :
            (diffMins === 1 ? '–º–∏–Ω—É—Ç—É' : diffMins < 5 ? '–º–∏–Ω—É—Ç—ã' : '–º–∏–Ω—É—Ç');
        return currentLang === 'en' ? 
            `${diffMins} ${unit} ago` : 
            `${diffMins} ${unit} –Ω–∞–∑–∞–¥`;
    } else if (diffHours < 24) {
        const unit = currentLang === 'en' ? 
            (diffHours === 1 ? 'hour' : 'hours') :
            (diffHours === 1 ? '—á–∞—Å' : diffHours < 5 ? '—á–∞—Å–∞' : '—á–∞—Å–æ–≤');
        return currentLang === 'en' ? 
            `${diffHours} ${unit} ago` : 
            `${diffHours} ${unit} –Ω–∞–∑–∞–¥`;
    } else if (diffDays < 7) {
        const unit = currentLang === 'en' ? 
            (diffDays === 1 ? 'day' : 'days') :
            (diffDays === 1 ? '–¥–µ–Ω—å' : diffDays < 5 ? '–¥–Ω—è' : '–¥–Ω–µ–π');
        return currentLang === 'en' ? 
            `${diffDays} ${unit} ago` : 
            `${diffDays} ${unit} –Ω–∞–∑–∞–¥`;
    } else {
        const weeks = Math.floor(diffDays / 7);
        const unit = currentLang === 'en' ? 
            (weeks === 1 ? 'week' : 'weeks') :
            (weeks === 1 ? '–Ω–µ–¥–µ–ª—é' : weeks < 5 ? '–Ω–µ–¥–µ–ª–∏' : '–Ω–µ–¥–µ–ª—å');
        return currentLang === 'en' ? 
            `${weeks} ${unit} ago` : 
            `${weeks} ${unit} –Ω–∞–∑–∞–¥`;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö last-seen —Ç–µ–∫—Å—Ç–æ–≤
function updateLastSeenTexts() {
    const lastSeenElements = document.querySelectorAll('.last-seen-text[data-last-seen]');
    const currentLang = window.currentLanguage || 'ru';
    const prefix = currentLang === 'en' ? 'Last seen' : '–ë—ã–ª –≤ —Å–µ—Ç–∏';
    
    lastSeenElements.forEach(element => {
        const lastSeenDate = element.getAttribute('data-last-seen');
        if (lastSeenDate) {
            const formattedTime = formatLastSeen(lastSeenDate);
            if (formattedTime) {
                element.textContent = `${prefix} ${formattedTime}`;
            }
        }
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    updateLastSeenTexts();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞
    const shouldReturnToSwiper = sessionStorage.getItem('returnToSwiper');
    const savedSwiperIndex = sessionStorage.getItem('topUsersSwiperIndex');
    
    if (shouldReturnToSwiper === 'true' && savedSwiperIndex !== null) {
        console.log('üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ Swiper –Ω–∞ —Å–ª–∞–π–¥–µ:', savedSwiperIndex);
        
        // –û—á–∏—â–∞–µ–º —Ñ–ª–∞–≥–∏
        sessionStorage.removeItem('returnToSwiper');
        sessionStorage.removeItem('topUsersSwiperIndex');
        
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–º —Å–ª–∞–π–¥–µ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
        setTimeout(() => {
            const slideIndex = parseInt(savedSwiperIndex, 10);
            if (typeof window.openSwiperAtIndex === 'function') {
                window.openSwiperAtIndex(slideIndex);
                console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ —Å–ª–∞–π–¥–µ:', slideIndex);
            }
        }, 100);
    }
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ —Å–º–µ–Ω–µ —è–∑—ã–∫–∞
if (window.localizationService) {
    const originalUpdateInterface = window.localizationService.updateInterface;
    window.localizationService.updateInterface = function() {
        originalUpdateInterface.call(this);
        updateLastSeenTexts();
    };
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ
window.formatLastSeen = formatLastSeen;
window.updateLastSeenTexts = updateLastSeenTexts;
