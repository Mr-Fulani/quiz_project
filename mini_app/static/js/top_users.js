// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
class TopUsersFilter {
    constructor() {
        this.filters = {
            gender: '',
            age: '',
            language: '',
            grade: ''
        };
        
        this.init();
    }

    init() {
        console.log('üöÄ TopUsersFilter: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è');
        this.bindEvents();
        this.loadFiltersFromURL();
        console.log('‚úÖ TopUsersFilter: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
        this.testElements();
    }
    
    testElements() {
        console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ñ–∏–ª—å—Ç—Ä–æ–≤:');
        const elements = {
            'gender-filter': document.getElementById('gender-filter'),
            'age-filter': document.getElementById('age-filter'),
            'language-filter': document.getElementById('language-filter'),
            'grade-filter': document.getElementById('grade-filter'),
            'reset-filters': document.getElementById('reset-filters')
        };
        
        for (const [name, element] of Object.entries(elements)) {
            if (element) {
                console.log(`‚úÖ ${name}: –Ω–∞–π–¥–µ–Ω`);
            } else {
                console.error(`‚ùå ${name}: –ù–ï –ù–ê–ô–î–ï–ù!`);
            }
        }
    }

    bindEvents() {
        console.log('üîó TopUsersFilter: –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π...');
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–µ–ª–µ–∫—Ç–æ–≤ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        const genderFilter = document.getElementById('gender-filter');
        const ageFilter = document.getElementById('age-filter');
        const languageFilter = document.getElementById('language-filter');
        // const ratingFilter = document.getElementById('rating-filter'); // –£–±—Ä–∞–Ω, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç –≤ HTML
        const resetButton = document.getElementById('reset-filters');
        
        console.log('üîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:', {
            genderFilter: !!genderFilter,
            ageFilter: !!ageFilter,
            languageFilter: !!languageFilter,
            resetButton: !!resetButton
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω—ã
        if (!genderFilter) console.warn('‚ö†Ô∏è gender-filter –Ω–µ –Ω–∞–π–¥–µ–Ω');
        if (!ageFilter) console.warn('‚ö†Ô∏è age-filter –Ω–µ –Ω–∞–π–¥–µ–Ω');
        if (!languageFilter) console.warn('‚ö†Ô∏è language-filter –Ω–µ –Ω–∞–π–¥–µ–Ω');
        // if (!ratingFilter) console.warn('‚ö†Ô∏è rating-filter –Ω–µ –Ω–∞–π–¥–µ–Ω'); // –£–±—Ä–∞–Ω
        if (!resetButton) console.warn('‚ö†Ô∏è reset-filters –∫–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        
        genderFilter?.addEventListener('change', (e) => {
            console.log('üë§ Gender filter changed:', e.target.value);
            this.filters.gender = e.target.value;
            this.applyFilters();
        });

        ageFilter?.addEventListener('change', (e) => {
            console.log('üéÇ Age filter changed:', e.target.value);
            this.filters.age = e.target.value;
            this.applyFilters();
        });

        languageFilter?.addEventListener('change', (e) => {
            console.log('üíª Language filter changed:', e.target.value);
            this.filters.language = e.target.value;
            this.applyFilters();
        });

        // ratingFilter?.addEventListener('change', (e) => { // –£–±—Ä–∞–Ω, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç –≤ HTML
        //     console.log('‚≠ê Rating filter changed:', e.target.value);
        //     this.filters.rating = e.target.value;
        //     this.applyFilters();
        // });

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞ –≥—Ä–µ–π–¥–∞
        const gradeFilter = document.getElementById('grade-filter');
        if (gradeFilter) {
            console.log('‚úÖ Grade filter –Ω–∞–π–¥–µ–Ω, –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫');
            gradeFilter.addEventListener('change', (e) => {
                console.log('üéØ Grade filter changed:', e.target.value);
                this.filters.grade = e.target.value;
                console.log('üéØ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:', this.filters);
                this.applyFilters();
            });
        } else {
            console.error('‚ùå Grade filter –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        }

        // –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        if (resetButton) {
            console.log('üîó –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫ –∫–Ω–æ–ø–∫–µ —Å–±—Ä–æ—Å–∞');
            resetButton.addEventListener('click', (e) => {
                console.log('üîÑ Reset filters clicked - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ä–∞–±–æ—Ç–∞–ª!');
                e.preventDefault();
                this.resetFilters();
            });
        } else {
            console.error('‚ùå –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
        }
        
        console.log('‚úÖ TopUsersFilter: –°–æ–±—ã—Ç–∏—è –ø—Ä–∏–≤—è–∑–∞–Ω—ã');
    }

    loadFiltersFromURL() {
        const urlParams = new URLSearchParams(window.location.search);
        
        this.filters.gender = urlParams.get('gender') || '';
        this.filters.age = urlParams.get('age') || '';
        this.filters.language = urlParams.get('language_pref') || '';
        this.filters.grade = urlParams.get('grade') || '';
        // this.filters.rating = urlParams.get('rating') || ''; // –£–±—Ä–∞–Ω

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å–µ–ª–µ–∫—Ç—ã
        this.setSelectValue('gender-filter', this.filters.gender);
        this.setSelectValue('age-filter', this.filters.age);
        this.setSelectValue('language-filter', this.filters.language);
        this.setSelectValue('grade-filter', this.filters.grade);
        // this.setSelectValue('rating-filter', this.filters.rating); // –£–±—Ä–∞–Ω
    }

    setSelectValue(selectId, value) {
        const select = document.getElementById(selectId);
        if (select) {
            select.value = value;
            console.log(`üîÑ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è ${selectId}: ${value}`);
        } else {
            console.warn(`‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç ${selectId} –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è ${value}`);
        }
    }


    applyFilters() {
        console.log('üîç TopUsersFilter: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤', this.filters);
        console.log('üîç –¢–µ–∫—É—â–∏–π URL:', window.location.href);
        console.log('üîç –§–∏–ª—å—Ç—Ä—ã –∞–∫—Ç–∏–≤–Ω—ã:', {
            gender: this.filters.gender,
            age: this.filters.age,
            language: this.filters.language,
            grade: this.filters.grade
        });
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ AJAX –≤–º–µ—Å—Ç–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        this.updateContentWithFilters();
    }

    updateContentWithFilters() {
        console.log('üîÑ TopUsersFilter: updateContentWithFilters –≤—ã–∑–≤–∞–Ω');
        console.log('üîÑ –¢–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã:', this.filters);
        
        const url = new URL(window.location);
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤
        url.searchParams.delete('gender');
        url.searchParams.delete('age');
        url.searchParams.delete('language_pref');
        url.searchParams.delete('grade');

        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤
        if (this.filters.gender) {
            url.searchParams.set('gender', this.filters.gender);
        }
        if (this.filters.age) {
            url.searchParams.set('age', this.filters.age);
        }
        if (this.filters.language) {
            url.searchParams.set('language_pref', this.filters.language);
        }
        if (this.filters.grade) {
            url.searchParams.set('grade', this.filters.grade);
        }
        // if (this.filters.rating) { // –£–±—Ä–∞–Ω
        //     url.searchParams.set('rating', this.filters.rating);
        // }

        console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ AJAX:', url.toString());
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ AJAX
        fetch(url.toString(), {
            method: 'GET',
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.text())
        .then(html => {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
            const currentFilters = {
                gender: document.getElementById('gender-filter')?.value || '',
                age: document.getElementById('age-filter')?.value || '',
                language: document.getElementById('language-filter')?.value || '',
                grade: document.getElementById('grade-filter')?.value || '',
                // rating: document.getElementById('rating-filter')?.value || '' // –£–±—Ä–∞–Ω
            };
            
            console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã:', currentFilters);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            const parser = new DOMParser();
            const doc = parser.parseFromString(html, 'text/html');
            const newContent = doc.querySelector('.top-users-container');
            const currentContent = document.querySelector('.top-users-container');
            
            if (newContent && currentContent) {
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–µ —Ç—Ä–æ–≥–∞—è —Ñ–∏–ª—å—Ç—Ä—ã
                const newUserList = newContent.querySelector('.top-users-list');
                const currentUserList = currentContent.querySelector('.top-users-list');
                
                if (newUserList && currentUserList) {
                    currentUserList.innerHTML = newUserList.innerHTML;
                    console.log('‚úÖ –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–±–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ AJAX');
                } else {
                    // Fallback - –æ–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç
                    currentContent.innerHTML = newContent.innerHTML;
                    console.log('‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ AJAX (fallback)');
                }
                
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
                setTimeout(() => {
                    if (currentFilters.gender) {
                        const genderSelect = document.getElementById('gender-filter');
                        if (genderSelect) genderSelect.value = currentFilters.gender;
                    }
                    if (currentFilters.age) {
                        const ageSelect = document.getElementById('age-filter');
                        if (ageSelect) ageSelect.value = currentFilters.age;
                    }
                    if (currentFilters.language) {
                        const languageSelect = document.getElementById('language-filter');
                        if (languageSelect) languageSelect.value = currentFilters.language;
                    }
                    if (currentFilters.grade) {
                        const gradeSelect = document.getElementById('grade-filter');
                        if (gradeSelect) gradeSelect.value = currentFilters.grade;
                    }
                    // if (currentFilters.rating) { // –£–±—Ä–∞–Ω
                    //     const ratingSelect = document.getElementById('rating-filter');
                    //     if (ratingSelect) ratingSelect.value = currentFilters.rating;
                    // }
                    console.log('üîÑ –§–∏–ª—å—Ç—Ä—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
                    
                    // –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–±–Ω–æ–≤–∏–ª–∏ –≤–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç
                    if (!newUserList || !currentUserList) {
                        this.bindEvents();
                    }
                }, 100);
            } else {
                // Fallback - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
                window.location.href = url.toString();
            }
        })
        .catch(error => {
            console.error('‚ùå –û—à–∏–±–∫–∞ AJAX –∑–∞–ø—Ä–æ—Å–∞:', error);
            // Fallback - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
            window.location.href = url.toString();
        });
    }

    reloadWithFilters() {
        console.log('üîÑ TopUsersFilter: reloadWithFilters –≤—ã–∑–≤–∞–Ω');
        console.log('üîÑ –¢–µ–∫—É—â–∏–π URL:', window.location.href);
        console.log('üîÑ –¢–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã:', this.filters);
        
        const url = new URL(window.location);
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤
        url.searchParams.delete('gender');
        url.searchParams.delete('age');
        url.searchParams.delete('language_pref');
        url.searchParams.delete('grade');
        // url.searchParams.delete('rating'); // –£–±—Ä–∞–Ω

        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤
        if (this.filters.gender) {
            url.searchParams.set('gender', this.filters.gender);
            console.log('‚ûï –î–æ–±–∞–≤–ª–µ–Ω gender:', this.filters.gender);
        }
        if (this.filters.age) {
            url.searchParams.set('age', this.filters.age);
            console.log('‚ûï –î–æ–±–∞–≤–ª–µ–Ω age:', this.filters.age);
        }
        if (this.filters.language) {
            url.searchParams.set('language_pref', this.filters.language);
            console.log('‚ûï –î–æ–±–∞–≤–ª–µ–Ω language_pref:', this.filters.language);
        }
        if (this.filters.grade) {
            url.searchParams.set('grade', this.filters.grade);
            console.log('‚ûï –î–æ–±–∞–≤–ª–µ–Ω grade:', this.filters.grade);
        }
        // if (this.filters.rating) { // –£–±—Ä–∞–Ω
        //     url.searchParams.set('rating', this.filters.rating);
        //     console.log('‚ûï –î–æ–±–∞–≤–ª–µ–Ω rating:', this.filters.rating);
        // }

        console.log('üîÑ –ù–æ–≤—ã–π URL:', url.toString());
        console.log('üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É...');

        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
        window.location.href = url.toString();
    }


    resetFilters() {
        console.log('üîÑ Reset filters clicked - —Å–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–æ–≤');
        console.log('üîÑ –¢–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã –¥–æ —Å–±—Ä–æ—Å–∞:', this.filters);
        console.log('üîÑ –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ –Ω–∞–∂–∞—Ç–∞, –Ω–∞—á–∏–Ω–∞–µ–º —Å–±—Ä–æ—Å...');
        
        this.filters = {
            gender: '',
            age: '',
            language: '',
            grade: ''
        };

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–µ–ª–µ–∫—Ç—ã
        this.setSelectValue('gender-filter', '');
        this.setSelectValue('age-filter', '');
        this.setSelectValue('language-filter', '');
        this.setSelectValue('grade-filter', '');
        // this.setSelectValue('rating-filter', ''); // –£–±—Ä–∞–Ω
        
        console.log('üîÑ –§–∏–ª—å—Ç—Ä—ã —Å–±—Ä–æ—à–µ–Ω—ã –≤ –æ–±—ä–µ–∫—Ç–µ:', this.filters);

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ AJAX –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        const url = new URL(window.location);
        url.searchParams.delete('gender');
        url.searchParams.delete('age');
        url.searchParams.delete('language_pref');
        url.searchParams.delete('grade');
        // url.searchParams.delete('rating'); // –£–±—Ä–∞–Ω
        
        console.log('üîÑ Reset filters - –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ AJAX:', url.toString());
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ AJAX
        fetch(url.toString(), {
            method: 'GET',
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.text())
        .then(html => {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            const parser = new DOMParser();
            const doc = parser.parseFromString(html, 'text/html');
            const newContent = doc.querySelector('.top-users-container');
            const currentContent = document.querySelector('.top-users-container');
            
            if (newContent && currentContent) {
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–µ —Ç—Ä–æ–≥–∞—è —Ñ–∏–ª—å—Ç—Ä—ã
                const newUserList = newContent.querySelector('.top-users-list');
                const currentUserList = currentContent.querySelector('.top-users-list');
                
                if (newUserList && currentUserList) {
                    currentUserList.innerHTML = newUserList.innerHTML;
                    console.log('‚úÖ –§–∏–ª—å—Ç—Ä—ã —Å–±—Ä–æ—à–µ–Ω—ã, —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–±–Ω–æ–≤–ª–µ–Ω');
                } else {
                    // Fallback - –æ–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç
                    currentContent.innerHTML = newContent.innerHTML;
                    console.log('‚úÖ –§–∏–ª—å—Ç—Ä—ã —Å–±—Ä–æ—à–µ–Ω—ã, –∫–æ–Ω—Ç–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω (fallback)');
                }
            } else {
                // Fallback - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
                window.location.href = url.toString();
            }
        })
        .catch(error => {
            console.error('‚ùå –û—à–∏–±–∫–∞ AJAX –∑–∞–ø—Ä–æ—Å–∞:', error);
            // Fallback - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
            window.location.href = url.toString();
        });
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–ø–µ—Ä—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏–∑ HTML —à–∞–±–ª–æ–Ω–∞
// document.addEventListener('DOMContentLoaded', () => {
//     new TopUsersFilter();
// });

// –î–µ–ª–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –≥–ª–æ–±–∞–ª—å–Ω—ã–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
window.TopUsersFilter = TopUsersFilter;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ SPA –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
window.reinitializeTopUsersPage = function() {
    console.log('üîÑ reinitializeTopUsersPage –≤—ã–∑–≤–∞–Ω –¥–ª—è SPA –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
    
    // –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
    if (window.TopUsersFilter) {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        if (window.topUsersFilter) {
            console.log('üîÑ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä TopUsersFilter');
            // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–æ–¥ destroy –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        }
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
        window.topUsersFilter = new window.TopUsersFilter();
        console.log('‚úÖ TopUsersFilter –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è SPA –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
    } else {
        console.error('‚ùå TopUsersFilter class –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
    }
};
