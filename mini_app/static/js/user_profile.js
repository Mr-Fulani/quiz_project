/**
 * JavaScript –º–æ–¥—É–ª—å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram Mini App.
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—É–±–ª–∏—á–Ω—ã—Ö –∏ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π.
 */

(function(window) {
    console.log('üöÄ User Profile.js –∑–∞–≥—Ä—É–∂–µ–Ω!');
    
    let currentUserData = null;
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ telegram_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ URL
     */
    function getUserTelegramId() {
        // –ò–∑–≤–ª–µ–∫–∞–µ–º telegram_id –∏–∑ URL: /user_profile/{telegram_id}
        const pathParts = window.location.pathname.split('/');
        const telegramId = pathParts[pathParts.length - 1];
        const parsed = parseInt(telegramId, 10);
        
        console.log('üîç –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ telegram_id –∏–∑ URL:', {
            pathname: window.location.pathname,
            pathParts: pathParts,
            telegramId: telegramId,
            parsed: parsed
        });
        
        return parsed || null;
    }
    
    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞
     */
    async function loadUserProfile() {
        console.log('üöÄüöÄüöÄ –§–£–ù–ö–¶–ò–Ø loadUserProfile –í–´–ó–í–ê–ù–ê!');
        
        const telegramId = getUserTelegramId();
        console.log('üîç –ü–æ–ª—É—á–µ–Ω telegram_id:', telegramId);
        
        if (!telegramId) {
            console.error('‚ùå Telegram ID –Ω–µ –Ω–∞–π–¥–µ–Ω');
            showError('–û—à–∏–±–∫–∞: –Ω–µ —É–∫–∞–∑–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
            return;
        }
        
        console.log(`üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${telegramId}`);
        
        try {
            // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è —á–µ—Ä–µ–∑ mini_app API
            const response = await fetch(`/api/user-profile/${telegramId}`, {
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            
            if (!response.ok) {
                console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è: ${response.status}`);
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            
            const userData = await response.json();
            console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—É—á–µ–Ω—ã:', userData);
            console.log('üîç is_profile_public:', userData.is_profile_public);
            
            currentUserData = userData;
            
            // –°–∫—Ä—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä
            console.log('üîÑ –í—ã–∑—ã–≤–∞–µ–º hideLoader()...');
            hideLoader();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –ø—Ä–æ—Ñ–∏–ª—è –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
            if (userData.is_profile_public) {
                console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø—É–±–ª–∏—á–Ω—ã–π, –≤—ã–∑—ã–≤–∞–µ–º renderPublicProfile()');
                renderPublicProfile(userData);
            } else {
                console.log('üîí –ü—Ä–æ—Ñ–∏–ª—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–π, –≤—ã–∑—ã–≤–∞–µ–º renderPrivateProfile()');
                renderPrivateProfile(userData);
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è:', error);
            hideLoader();
            showError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        }
    }
    
    /**
     * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
     */
    function renderPublicProfile(userData) {
        console.log('üëÅÔ∏è –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å');
        console.log('üëÅÔ∏è –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∞:', userData);
        
        const container = document.getElementById('public-profile-container');
        console.log('üëÅÔ∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞–π–¥–µ–Ω:', container);
        
        if (!container) {
            console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—É–±–ª–∏—á–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—É–±–ª–∏—á–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
        console.log('üëÅÔ∏è –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—É–±–ª–∏—á–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è —á–µ—Ä–µ–∑ –∫–ª–∞—Å—Å visible');
        container.classList.add('visible');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        updateProfileHeader(userData);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        updateProfessionalInfo(userData);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        updateStatistics(userData);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏
        updateSocialLinks(userData);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–ø–∏—Å–∞—Ç—å", –µ—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø—É–±–ª–∏—á–Ω—ã–π –∏ –µ—Å—Ç—å username
        if (userData.is_profile_public && userData.username) {
            const writeBtn = document.getElementById('write-message-btn');
            if (writeBtn) {
                writeBtn.style.display = 'flex';
                writeBtn.onclick = () => openTelegramChat(userData.username);
            }
        } else {
            // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π –∏–ª–∏ –µ—Å–ª–∏ –Ω–µ—Ç username
            const writeBtn = document.getElementById('write-message-btn');
            if (writeBtn) {
                writeBtn.style.display = 'none';
            }
        }
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
        const backBtn = document.getElementById('back-btn');
        if (backBtn) {
            backBtn.onclick = () => goBack();
        }
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–∫
        setupAvatarHandlers(userData);
        
        console.log('‚úÖ‚úÖ‚úÖ –ü–£–ë–õ–ò–ß–ù–´–ô –ü–†–û–§–ò–õ–¨ –û–¢–†–ò–°–û–í–ê–ù –£–°–ü–ï–®–ù–û!');
    }
    
    /**
     * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
     */
    function renderPrivateProfile(userData) {
        console.log('üîí –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å');
        
        const container = document.getElementById('private-profile-container');
        if (!container) {
            console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
        console.log('üîí –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è —á–µ—Ä–µ–∑ –∫–ª–∞—Å—Å visible');
        container.classList.add('visible');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        const avatar = document.getElementById('private-avatar');
        const name = document.getElementById('private-name');
        const username = document.getElementById('private-username');
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤–∞—Ç–∞—Ä —Å fallback –Ω–∞ default
        if (avatar) {
            if (userData.avatar) {
                console.log('üñºÔ∏è [Private] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤–∞—Ç–∞—Ä:', userData.avatar);
                avatar.src = userData.avatar;
                avatar.onerror = function() {
                    console.log('‚ùå [Private] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º default');
                    this.src = '/static/images/default_avatar.png';
                };
            } else {
                console.log('‚ö†Ô∏è [Private] –ù–µ—Ç –∞–≤–∞—Ç–∞—Ä–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º default');
                avatar.src = '/static/images/default_avatar.png';
            }
        }
        
        if (name) {
            name.textContent = userData.full_name || `${userData.first_name || ''} ${userData.last_name || ''}`.trim() || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
        }
        
        // –°–∫—Ä—ã–≤–∞–µ–º username –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π
        if (username) {
            if (userData.username) {
                username.textContent = `@${userData.username}`;
                username.style.display = 'block';
            } else {
                // –î–ª—è —Å–∫—Ä—ã—Ç—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º username
                username.style.display = 'none';
            }
        }
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
        const backBtn = document.getElementById('back-to-top-users-btn');
        if (backBtn) {
            backBtn.onclick = () => goBack();
        }
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–∫
        setupAvatarHandlers(userData);
    }
    
    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ "–±—ã–ª –æ–Ω–ª–∞–π–Ω X –Ω–∞–∑–∞–¥"
     */
    function formatLastSeen(lastSeenDate) {
        if (!lastSeenDate) return null;
        
        const now = new Date();
        const lastSeen = new Date(lastSeenDate);
        const diffMs = now - lastSeen;
        const diffMins = Math.floor(diffMs / 60000);
        const diffHours = Math.floor(diffMs / 3600000);
        const diffDays = Math.floor(diffMs / 86400000);
        
        const translations = window.translations || {};
        
        if (diffMins < 1) {
            return translations.just_now || '—Ç–æ–ª—å–∫–æ —á—Ç–æ';
        } else if (diffMins < 60) {
            const unit = window.currentLanguage === 'en' ? 
                (diffMins === 1 ? 'minute' : 'minutes') :
                (diffMins === 1 ? '–º–∏–Ω—É—Ç—É' : diffMins < 5 ? '–º–∏–Ω—É—Ç—ã' : '–º–∏–Ω—É—Ç');
            return window.currentLanguage === 'en' ? 
                `${diffMins} ${unit} ago` : 
                `${diffMins} ${unit} –Ω–∞–∑–∞–¥`;
        } else if (diffHours < 24) {
            const unit = window.currentLanguage === 'en' ? 
                (diffHours === 1 ? 'hour' : 'hours') :
                (diffHours === 1 ? '—á–∞—Å' : diffHours < 5 ? '—á–∞—Å–∞' : '—á–∞—Å–æ–≤');
            return window.currentLanguage === 'en' ? 
                `${diffHours} ${unit} ago` : 
                `${diffHours} ${unit} –Ω–∞–∑–∞–¥`;
        } else if (diffDays < 7) {
            const unit = window.currentLanguage === 'en' ? 
                (diffDays === 1 ? 'day' : 'days') :
                (diffDays === 1 ? '–¥–µ–Ω—å' : diffDays < 5 ? '–¥–Ω—è' : '–¥–Ω–µ–π');
            return window.currentLanguage === 'en' ? 
                `${diffDays} ${unit} ago` : 
                `${diffDays} ${unit} –Ω–∞–∑–∞–¥`;
        } else {
            const weeks = Math.floor(diffDays / 7);
            const unit = window.currentLanguage === 'en' ? 
                (weeks === 1 ? 'week' : 'weeks') :
                (weeks === 1 ? '–Ω–µ–¥–µ–ª—é' : weeks < 5 ? '–Ω–µ–¥–µ–ª–∏' : '–Ω–µ–¥–µ–ª—å');
            return window.currentLanguage === 'en' ? 
                `${weeks} ${unit} ago` : 
                `${weeks} ${unit} –Ω–∞–∑–∞–¥`;
        }
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è
     */
    function updateProfileHeader(userData) {
        const avatar = document.getElementById('profile-avatar');
        const name = document.getElementById('profile-name');
        const username = document.getElementById('profile-username');
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤–∞—Ç–∞—Ä —Å fallback –Ω–∞ default
        if (avatar) {
            if (userData.avatar) {
                console.log('üñºÔ∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤–∞—Ç–∞—Ä:', userData.avatar);
                avatar.src = userData.avatar;
                avatar.onerror = function() {
                    console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º default');
                    this.src = '/static/images/default_avatar.png';
                };
            } else {
                console.log('‚ö†Ô∏è –ù–µ—Ç –∞–≤–∞—Ç–∞—Ä–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º default');
                avatar.src = '/static/images/default_avatar.png';
            }
        }
        
        if (name) {
            name.textContent = userData.full_name || `${userData.first_name || ''} ${userData.last_name || ''}`.trim() || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
        }
        
        // –°–∫—Ä—ã–≤–∞–µ–º username –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π
        if (username) {
            if (userData.username) {
                username.textContent = `@${userData.username}`;
                username.style.display = 'block';
            } else {
                // –î–ª—è —Å–∫—Ä—ã—Ç—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º username
                username.style.display = 'none';
            }
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–Ω–ª–∞–π–Ω
        const onlineIndicator = document.getElementById('profile-online-indicator');
        const onlineStatus = document.getElementById('profile-online-status');
        
        if (userData.is_online) {
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–Ω–ª–∞–π–Ω
            if (onlineIndicator) {
                onlineIndicator.style.display = 'block';
            }
            if (onlineStatus) {
                const onlineText = window.currentLanguage === 'en' ? 'Online' : '–í —Å–µ—Ç–∏';
                onlineStatus.textContent = onlineText;
                onlineStatus.classList.add('is-online');
            }
        } else if (userData.last_seen) {
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –æ–Ω–ª–∞–π–Ω –Ω–µ–¥–∞–≤–Ω–æ
            if (onlineIndicator) {
                onlineIndicator.style.display = 'none';
            }
            if (onlineStatus) {
                const lastSeenText = formatLastSeen(userData.last_seen);
                const prefix = window.currentLanguage === 'en' ? 'Last seen' : '–ë—ã–ª –≤ —Å–µ—Ç–∏';
                onlineStatus.textContent = `${prefix} ${lastSeenText}`;
                onlineStatus.classList.remove('is-online');
            }
        } else {
            // –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            if (onlineIndicator) {
                onlineIndicator.style.display = 'none';
            }
            if (onlineStatus) {
                onlineStatus.textContent = '';
            }
        }
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
     */
    function updateProfessionalInfo(userData) {
        // –ü–æ–ª
        const genderElement = document.getElementById('profile-gender');
        if (genderElement) {
            if (userData.gender) {
                const genderMap = {
                    'male': window.translations?.male || '–ú—É–∂—Å–∫–æ–π',
                    'female': window.translations?.female || '–ñ–µ–Ω—Å–∫–∏–π'
                };
                genderElement.textContent = genderMap[userData.gender] || userData.gender;
            } else {
                genderElement.textContent = window.translations?.not_specified || '–ù–µ —É–∫–∞–∑–∞–Ω';
            }
        }
        
        // –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
        const birthDateElement = document.getElementById('profile-birth-date');
        if (birthDateElement) {
            if (userData.birth_date) {
                const date = new Date(userData.birth_date);
                const currentLang = window.currentLanguage || 'ru';
                const locale = currentLang === 'en' ? 'en-US' : 'ru-RU';
                
                birthDateElement.textContent = date.toLocaleDateString(locale, {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                });
            } else {
                birthDateElement.textContent = window.translations?.not_specified || '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
            }
        }
        
        // –ì—Ä–µ–π–¥
        const gradeElement = document.getElementById('profile-grade');
        if (gradeElement) {
            if (userData.grade) {
                const gradeMap = {
                    'junior': window.translations?.grade_junior || 'Junior',
                    'middle': window.translations?.grade_middle || 'Middle',
                    'senior': window.translations?.grade_senior || 'Senior'
                };
                const gradeText = gradeMap[userData.grade] || userData.grade;
                
                // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å—ã –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≥—Ä–µ–π–¥–∞
                gradeElement.className = `info-value grade-${userData.grade}`;
                gradeElement.textContent = gradeText;
            } else {
                gradeElement.className = 'info-value grade-none';
                gradeElement.textContent = window.translations?.not_specified || '–ù–µ —É–∫–∞–∑–∞–Ω';
            }
        }
        
        // –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
        const technologiesElement = document.getElementById('profile-technologies');
        if (technologiesElement) {
            if (userData.programming_languages && userData.programming_languages.length > 0) {
                technologiesElement.innerHTML = userData.programming_languages
                    .map(tech => `<span class="technology-tag">${tech}</span>`)
                    .join('');
            } else {
                technologiesElement.innerHTML = `<span class="no-data">${window.translations?.no_technologies || '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã'}</span>`;
            }
        }
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     */
    function updateStatistics(userData) {
        // –í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤
        const totalQuizzesElement = document.getElementById('profile-total-quizzes');
        if (totalQuizzesElement) {
            totalQuizzesElement.textContent = userData.total_quizzes || 0;
        }
        
        // –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
        const correctAnswersElement = document.getElementById('profile-correct-answers');
        if (correctAnswersElement) {
            correctAnswersElement.textContent = userData.correct_answers || 0;
        }
        
        // –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
        const incorrectAnswersElement = document.getElementById('profile-incorrect-answers');
        if (incorrectAnswersElement) {
            incorrectAnswersElement.textContent = userData.incorrect_answers || 0;
        }
        
        // –¢–æ—á–Ω–æ—Å—Ç—å
        const successRateElement = document.getElementById('profile-success-rate');
        if (successRateElement) {
            const successRate = userData.success_rate || 0;
            successRateElement.textContent = `${Math.round(successRate)}%`;
        }
        
        // –¢–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è
        const currentStreakElement = document.getElementById('profile-current-streak');
        if (currentStreakElement) {
            currentStreakElement.textContent = userData.current_streak || 0;
        }
        
        // –õ—É—á—à–∞—è —Å–µ—Ä–∏—è
        const bestStreakElement = document.getElementById('profile-best-streak');
        if (bestStreakElement) {
            bestStreakElement.textContent = userData.best_streak || 0;
        }
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
     */
    function updateSocialLinks(userData) {
        const container = document.getElementById('social-links-container');
        if (!container) return;
        
        if (!userData.social_links || userData.social_links.length === 0) {
            container.innerHTML = `<p class="social-empty">${window.translations?.no_social_links || '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã.'}</p>`;
            return;
        }
        
        // –ú–∞–ø–ø–∏–Ω–≥ –Ω–∞–∑–≤–∞–Ω–∏–π –Ω–∞ Font Awesome –∏–∫–æ–Ω–∫–∏ (–∫–∞–∫ –≤ profile.js)
        const getIconClass = (name) => {
            switch (name) {
                case '–í–µ–±-—Å–∞–π—Ç':
                    return 'fas fa-globe';
                case 'Telegram':
                    return 'fab fa-telegram';
                case 'GitHub':
                    return 'fab fa-github';
                case 'LinkedIn':
                    return 'fab fa-linkedin';
                case 'Instagram':
                    return 'fab fa-instagram';
                case 'Facebook':
                    return 'fab fa-facebook';
                case 'YouTube':
                    return 'fab fa-youtube';
                default:
                    return 'fas fa-link';
            }
        };
        
        container.innerHTML = '<div class="social-links-list">' +
            userData.social_links.map(link => {
                const iconClass = getIconClass(link.name);
                return `
                    <a href="${link.url}" target="_blank" class="social-link" rel="noopener noreferrer">
                        <div class="social-icon"><i class="${iconClass}"></i></div>
                        <div class="social-info">
                            <div class="social-name">${link.name}</div>
                            <div class="social-url">${link.url.replace(/^(https?:\/\/)?(www\.)?/, '')}</div>
                        </div>
                    </a>
                `;
            }).join('') +
            '</div>';
    }
    
    /**
     * –û—Ç–∫—Ä—ã—Ç–∏–µ —á–∞—Ç–∞ –≤ Telegram
     */
    function openTelegramChat(username) {
        console.log(`üì± –û—Ç–∫—Ä—ã–≤–∞–µ–º —á–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º @${username}`);
        
        // –£–¥–∞–ª—è–µ–º @ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        const cleanUsername = username.replace('@', '');
        
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º —á–∞—Ç –≤ Telegram
        const tg = window.Telegram?.WebApp;
        if (tg) {
            try {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º Telegram WebApp API –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —á–∞—Ç–∞
                window.open(`https://t.me/${cleanUsername}`, '_blank');
            } catch (e) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —á–∞—Ç–∞:', e);
                window.open(`https://t.me/${cleanUsername}`, '_blank');
            }
        } else {
            window.open(`https://t.me/${cleanUsername}`, '_blank');
        }
    }
    
    /**
     * –í–æ–∑–≤—Ä–∞—Ç –Ω–∞–∑–∞–¥ (–∫ —Å–ø–∏—Å–∫—É —Ç–æ–ø-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
     */
    function goBack() {
        console.log('üîôüîôüîô GOBACK –í–´–ó–í–ê–ù üîôüîôüîô');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
        const savedFilters = sessionStorage.getItem('topUsersFilters');
        console.log('üîç savedFilters –∏–∑ sessionStorage:', savedFilters);
        
        const currentLang = window.currentLanguage || 'ru';
        let targetUrl = `/top_users?lang=${currentLang}`;
        
        if (savedFilters) {
            try {
                const filters = JSON.parse(savedFilters);
                console.log('üì¶ –†–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:', filters);
                
                const urlParams = new URLSearchParams();
                
                // –î–æ–±–∞–≤–ª—è–µ–º —è–∑—ã–∫
                urlParams.set('lang', currentLang);
                
                // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
                if (filters.gender) {
                    urlParams.set('gender', filters.gender);
                    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Ñ–∏–ª—å—Ç—Ä gender:', filters.gender);
                }
                if (filters.age) {
                    urlParams.set('age', filters.age);
                    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Ñ–∏–ª—å—Ç—Ä age:', filters.age);
                }
                if (filters.language) {
                    urlParams.set('language_pref', filters.language);
                    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Ñ–∏–ª—å—Ç—Ä language_pref:', filters.language);
                }
                if (filters.online) {
                    urlParams.set('online_only', filters.online);
                    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Ñ–∏–ª—å—Ç—Ä online_only:', filters.online);
                }
                
                targetUrl = `/top_users?${urlParams.toString()}`;
                console.log('üéØ –ò—Ç–æ–≥–æ–≤—ã–π URL –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞:', targetUrl);
            } catch (e) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ URL —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏:', e);
            }
        } else {
            console.log('‚ö†Ô∏è –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤, –≤–æ–∑–≤—Ä–∞—Ç –Ω–∞ —á–∏—Å—Ç—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
        }
        
        console.log('üöÄ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞:', targetUrl);
        window.location.href = targetUrl;
    }
    
    /**
     * –°–∫—Ä—ã—Ç–∏–µ –ª–æ–∞–¥–µ—Ä–∞
     */
    function hideLoader() {
        console.log('üîÑ –°–∫—Ä—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä...');
        const loader = document.getElementById('user-profile-loader');
        console.log('üîç Loader —ç–ª–µ–º–µ–Ω—Ç:', loader);
        if (loader) {
            loader.classList.add('hidden');
            console.log('‚úÖ Loader —Å–∫—Ä—ã—Ç —á–µ—Ä–µ–∑ –∫–ª–∞—Å—Å hidden');
        } else {
            console.error('‚ùå Loader —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        }
    }
    
    /**
     * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–∫–∏
     */
    function showError(message) {
        alert(message);
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥ –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏
        setTimeout(() => goBack(), 2000);
    }
    
    /**
     * –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –≥–∞–ª–µ—Ä–µ–µ–π –∞–≤–∞—Ç–∞—Ä–æ–∫
     */
    function openAvatarModal(avatars, startIndex = 0) {
        console.log('üñºÔ∏è –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –∞–≤–∞—Ç–∞—Ä–∫–∞–º–∏, startIndex:', startIndex);
        
        if (!avatars || avatars.length === 0) {
            console.log('‚ö†Ô∏è –ù–µ—Ç –∞–≤–∞—Ç–∞—Ä–æ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è');
            return;
        }
        
        const backdrop = document.getElementById('avatar-modal-backdrop');
        const modal = document.getElementById('avatar-modal');
        const swiperWrapper = document.getElementById('avatar-swiper-wrapper');
        
        if (!backdrop || !modal || !swiperWrapper) {
            console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç—ã –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            return;
        }
        
        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–ª–∞–π–¥—ã
        swiperWrapper.innerHTML = '';
        
        // –°–æ–∑–¥–∞–µ–º —Å–ª–∞–π–¥—ã –¥–ª—è –∫–∞–∂–¥–æ–π –∞–≤–∞—Ç–∞—Ä–∫–∏
        avatars.forEach((avatar, index) => {
            const slide = document.createElement('div');
            slide.className = 'swiper-slide';
            
            const img = document.createElement('img');
            img.className = 'avatar-image';
            img.src = avatar.image_url || avatar.image;
            img.alt = `Avatar ${index + 1}`;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è GIF
            if (avatar.is_gif) {
                img.classList.add('gif');
            }
            
            slide.appendChild(img);
            swiperWrapper.appendChild(slide);
        });
        
        // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª body
        const scrollY = window.pageYOffset || document.documentElement.scrollTop || 0;
        window.scrollPositionBeforeAvatarModal = scrollY;
        document.body.style.overflow = 'hidden';
        document.body.style.position = 'fixed';
        document.body.style.top = `-${scrollY}px`;
        document.body.style.left = '0';
        document.body.style.right = '0';
        document.body.style.width = '100%';
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º backdrop –∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        backdrop.classList.add('active');
        modal.classList.add('active');
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Swiper —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
        setTimeout(() => {
            if (typeof Swiper !== 'undefined') {
                console.log('üîß –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é Avatar Swiper...');
                console.log('üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–∞–π–¥–æ–≤:', swiperWrapper.children.length);
                console.log('üìç –ù–∞—á–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å:', startIndex);
                
                // –£–Ω–∏—á—Ç–æ–∂–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä Swiper –µ—Å–ª–∏ –µ—Å—Ç—å
                if (window.avatarSwiper) {
                    console.log('üóëÔ∏è –£–Ω–∏—á—Ç–æ–∂–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π Swiper');
                    window.avatarSwiper.destroy(true, true);
                    window.avatarSwiper = null;
                }
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
                const swiperEl = document.getElementById('avatar-swiper');
                if (!swiperEl) {
                    console.error('‚ùå Swiper —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!');
                    return;
                }
                
                console.log('‚úÖ Swiper —ç–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä...');
                
                window.avatarSwiper = new Swiper('#avatar-swiper', {
                    slidesPerView: 1,
                    spaceBetween: 0,
                    centeredSlides: true,
                    loop: false, // –û—Ç–∫–ª—é—á–∞–µ–º loop –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                    effect: 'slide',
                    speed: 300,
                    initialSlide: startIndex,
                    observer: true,
                    observeParents: true,
                    watchOverflow: true,
                    touchRatio: 1,
                    touchAngle: 45,
                    simulateTouch: true,
                    allowTouchMove: true,
                    navigation: {
                        nextEl: '#avatar-swiper .swiper-button-next',
                        prevEl: '#avatar-swiper .swiper-button-prev',
                    },
                    pagination: {
                        el: '#avatar-swiper .swiper-pagination',
                        clickable: true,
                        type: 'bullets',
                    },
                    on: {
                        init: function() {
                            console.log('‚úÖ Avatar Swiper –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
                            console.log('   - –ê–∫—Ç–∏–≤–Ω—ã–π —Å–ª–∞–π–¥:', this.activeIndex);
                            console.log('   - –í—Å–µ–≥–æ —Å–ª–∞–π–¥–æ–≤:', this.slides.length);
                            console.log('   - –†–∞–∑–º–µ—Ä—ã:', {
                                width: this.width,
                                height: this.height
                            });
                        },
                        slideChange: function() {
                            console.log('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–ª–∞–π–¥–∞:', this.activeIndex);
                        },
                        touchStart: function() {
                            console.log('üëÜ Touch start');
                        },
                        touchMove: function() {
                            console.log('üëÜ Touch move');
                        },
                        touchEnd: function() {
                            console.log('üëÜ Touch end');
                        }
                    }
                });
                
                // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤
                requestAnimationFrame(() => {
                    if (window.avatarSwiper) {
                        console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º Swiper...');
                        window.avatarSwiper.update();
                        window.avatarSwiper.updateSize();
                        window.avatarSwiper.updateSlides();
                        window.avatarSwiper.updateProgress();
                        
                        console.log('‚úÖ Avatar Swiper –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–±–Ω–æ–≤–ª–µ–Ω');
                        console.log('   - –§–∏–Ω–∞–ª—å–Ω—ã–π —Å–ª–∞–π–¥:', window.avatarSwiper.activeIndex);
                        console.log('   - allowTouchMove:', window.avatarSwiper.params.allowTouchMove);
                    }
                });
                
            } else {
                console.error('‚ùå Swiper library not found');
            }
        }, 200);
    }
    
    /**
     * –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –∞–≤–∞—Ç–∞—Ä–∫–∞–º–∏
     */
    function closeAvatarModal() {
        console.log('üö™ –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –∞–≤–∞—Ç–∞—Ä–∫–∞–º–∏');
        
        const backdrop = document.getElementById('avatar-modal-backdrop');
        const modal = document.getElementById('avatar-modal');
        
        if (backdrop) {
            backdrop.classList.remove('active');
        }
        
        if (modal) {
            modal.classList.remove('active');
        }
        
        // –£–Ω–∏—á—Ç–æ–∂–∞–µ–º Swiper
        if (window.avatarSwiper) {
            window.avatarSwiper.destroy(true, true);
            window.avatarSwiper = null;
        }
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª body
        document.body.style.overflow = '';
        document.body.style.position = '';
        document.body.style.top = '';
        document.body.style.left = '';
        document.body.style.right = '';
        document.body.style.width = '';
        
        if (window.scrollPositionBeforeAvatarModal !== undefined) {
            window.scrollTo(0, window.scrollPositionBeforeAvatarModal);
        }
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∫–∏
     */
    function setupAvatarHandlers(userData) {
        console.log('üñºÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∫–∏');
        
        const avatar = document.getElementById('profile-avatar');
        const privateAvatar = document.getElementById('private-avatar');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–≤–∞—Ç–∞—Ä–æ–∫
        let avatars = userData.avatars || [];
        
        // –ï—Å–ª–∏ –Ω–µ—Ç –∞–≤–∞—Ç–∞—Ä–æ–∫ –≤ –Ω–æ–≤–æ–π –º–æ–¥–µ–ª–∏, –Ω–æ –µ—Å—Ç—å —Å—Ç–∞—Ä–æ–µ –ø–æ–ª–µ avatar, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
        if (avatars.length === 0 && userData.avatar) {
            console.log('üì∏ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä–æ–µ –ø–æ–ª–µ avatar:', userData.avatar);
            avatars = [{
                id: 0,
                image_url: userData.avatar,
                image: userData.avatar,
                order: 0,
                is_gif: userData.avatar.toLowerCase().endsWith('.gif')
            }];
        }
        
        console.log('üì∏ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–≤–∞—Ç–∞—Ä–æ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:', avatars.length);
        
        if (avatars.length > 0) {
            // –î–µ–ª–∞–µ–º –∞–≤–∞—Ç–∞—Ä–∫—É –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ–π
            if (avatar) {
                avatar.style.cursor = 'pointer';
                // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
                const newAvatar = avatar.cloneNode(true);
                avatar.parentNode.replaceChild(newAvatar, avatar);
                
                newAvatar.addEventListener('click', () => {
                    console.log('üñ±Ô∏è –ö–ª–∏–∫ –ø–æ –∞–≤–∞—Ç–∞—Ä–∫–µ');
                    openAvatarModal(avatars, 0);
                });
            }
            
            if (privateAvatar) {
                privateAvatar.style.cursor = 'pointer';
                // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
                const newPrivateAvatar = privateAvatar.cloneNode(true);
                privateAvatar.parentNode.replaceChild(newPrivateAvatar, privateAvatar);
                
                newPrivateAvatar.addEventListener('click', () => {
                    console.log('üñ±Ô∏è –ö–ª–∏–∫ –ø–æ –ø—Ä–∏–≤–∞—Ç–Ω–æ–π –∞–≤–∞—Ç–∞—Ä–∫–µ');
                    openAvatarModal(avatars, 0);
                });
            }
        }
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        const closeBtn = document.getElementById('avatar-modal-close');
        const backdrop = document.getElementById('avatar-modal-backdrop');
        
        if (closeBtn) {
            closeBtn.addEventListener('click', (e) => {
                e.stopPropagation();
                closeAvatarModal();
            });
        }
        
        if (backdrop) {
            backdrop.addEventListener('click', closeAvatarModal);
        }
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    function init() {
        console.log('üé¨ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è');
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        loadUserProfile();
    }
    
    /**
     * –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ SPA –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
     */
    window.reinitializeUserProfilePage = function() {
        console.log('üîÑ –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è');
        init();
    };
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
    } else {
        init();
    }

})(window);

