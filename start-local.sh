#!/bin/bash

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
#   ./start-local-new.sh              - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∑–∞–ø—É—Å–∫ —Å –æ—á–∏—Å—Ç–∫–æ–π –∫—ç—à–∞
#   ./start-local-new.sh --clean-db   - –ø–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤–∫–ª—é—á–∞—è –ë–î
#   ./start-local-new.sh --quick      - –±—ã—Å—Ç—Ä—ã–π restart –±–µ–∑ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏

set -e

# –§–ª–∞–≥–∏
CLEAN_DB=false
QUICK=false

# –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
while [[ $# -gt 0 ]]; do
    case $1 in
        --clean-db)
            CLEAN_DB=true
            shift
            ;;
        --quick)
            QUICK=true
            shift
            ;;
        *)
            echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: $1"
            echo ""
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
            echo "  ./start-local-new.sh              - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∑–∞–ø—É—Å–∫ (–ë–î —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, –∫—ç—à –æ—á–∏—â–∞–µ—Ç—Å—è)"
            echo "  ./start-local-new.sh --clean-db   - –ø–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤–∫–ª—é—á–∞—è –ë–î"
            echo "  ./start-local-new.sh --quick      - –±—ã—Å—Ç—Ä—ã–π restart (5 —Å–µ–∫)"
            echo ""
            exit 1
            ;;
    esac
done

# –†–µ–∂–∏–º –±—ã—Å—Ç—Ä–æ–≥–æ restart
if [ "$QUICK" = true ]; then
    echo "‚ö° –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker compose restart
    
    echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã!"
    echo ""
    docker compose ps
    exit 0
fi

# –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∑–∞–ø—É—Å–∫
echo "üöÄ –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
echo ""

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üîå –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
if [ "$CLEAN_DB" = true ]; then
    echo "   ‚ö†Ô∏è  –†–µ–∂–∏–º CLEAN-DB: volumes –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã (–ë–î –æ—á–∏—Å—Ç–∏—Ç—Å—è!)"
    read -p "   –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? [y/N] " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ"
        exit 0
    fi
    docker compose down --volumes --remove-orphans
else
    echo "   üíæ –ë–î –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞"
    docker compose down --remove-orphans
fi

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
docker stop $(docker ps -q --filter "name=quiz_project") 2>/dev/null || true
docker rm $(docker ps -aq --filter "name=quiz_project") 2>/dev/null || true

echo "üßπ –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö Docker-–æ–±—Ä–∞–∑–æ–≤..."
docker image prune -f

echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker compose up --build --force-recreate -d

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

echo "üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ Redis..."
docker compose exec -T redis redis-cli FLUSHDB || echo "   ‚ÑπÔ∏è  Redis –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É"

echo "üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
docker compose exec -T quiz_backend python manage.py makemigrations
docker compose exec -T quiz_backend python manage.py migrate

echo "üìÅ –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤..."
docker compose exec -T quiz_backend python manage.py collectstatic --noinput --clear

# –ò–∫–æ–Ω–∫–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ fix_icon_mapping

echo ""
echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≥–æ—Ç–æ–≤–∞!"
echo ""
echo "üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
echo "  - Backend: http://localhost:8001"
echo "  - Mini App: http://localhost:8080"
echo "  - Telegram Bot: http://localhost:8002"
echo "  - Database: localhost:5433"
echo "  - Redis: localhost:6379"
echo ""
echo "üîç –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
docker compose ps
echo ""
echo "üìù –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: docker compose down"
echo "  - –õ–æ–≥–∏: docker compose logs -f"
echo "  - –ö—ç—à: docker compose run --rm quiz_backend python manage.py cache_monitor"
echo "  - Celery: docker compose exec celery_worker celery -A config inspect ping"
echo ""

# –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–∫–∞–∑–∞—Ç—å –ª–∏ –ª–æ–≥–∏
read -p "üìã –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏? [y/N] " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo ""
    echo "üîç –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–æ–≥–æ–≤ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)..."
    docker compose logs -f
fi

