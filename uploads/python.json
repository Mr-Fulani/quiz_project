{
  "tasks": [
    {
      "topic": "Python",
      "subtopic": "Recursive Functions",
      "description": "Analyzing a recursive function and identifying logical errors in its implementation.",
      "difficulty": "hard",
      "translations": [
        {
          "language": "en",
          "question": "The function below is intended to calculate the factorial of a number. What is the issue with its current implementation?\n\n```python\ndef factorial(n):\n    if n == 0:\n        return 1\n    return n * factorial(n - 2)\n```",
          "answers": [
            "It decreases `n` by 2 instead of 1, skipping values.",
            "It has no base case for negative numbers, leading to infinite recursion.",
            "Both of the above"
          ],
          "correct_answer": "Both of the above",
          "explanation": "The function incorrectly decrements by 2, skipping values, and also lacks handling for negative inputs, causing infinite recursion."
        },
        {
          "language": "ru",
          "question": "Функция ниже должна вычислять факториал числа. В чём ошибка её реализации?\n\n```python\ndef factorial(n):\n    if n == 0:\n        return 1\n    return n * factorial(n - 2)\n```",
          "answers": [
            "Аргумент уменьшается на 2 вместо 1, пропуская значения.",
            "Нет проверки на отрицательные числа, что ведёт к бесконечной рекурсии.",
            "Обе ошибки"
          ],
          "correct_answer": "Обе ошибки",
          "explanation": "Функция неверно уменьшает аргумент на 2 и не обрабатывает отрицательные числа, что вызывает бесконечную рекурсию."
        },
        {
          "language": "tr",
          "question": "Aşağıdaki fonksiyon bir sayının faktöriyelini hesaplamak için yazılmıştır. Hangi hata(lar) vardır?\n\n```python\ndef factorial(n):\n    if n == 0:\n        return 1\n    return n * factorial(n - 2)\n```",
          "answers": [
            "Fonksiyon `n`'i 1 yerine 2 azaltıyor.",
            "Negatif sayılar için durma koşulu yok, sonsuz döngüye girer.",
            "Her ikisi de"
          ],
          "correct_answer": "Her ikisi de",
          "explanation": "Fonksiyon `n`'i yanlışlıkla 2 azaltıyor ve negatif sayılar için durma koşulu yok, bu yüzden sonsuz döngü oluşur."
        },
        {
          "language": "ar",
          "question": "الدالة التالية مكتوبة لحساب مضروب العدد (factorial). ما الخطأ في تنفيذها؟\n\n```python\ndef factorial(n):\n    if n == 0:\n        return 1\n    return n * factorial(n - 2)\n```",
          "answers": [
            "تقوم بإنقاص `n` بمقدار 2 بدلاً من 1.",
            "لا تحتوي على شرط توقف للأعداد السالبة مما يؤدي إلى استدعاء لانهائي.",
            "كلاهما صحيح"
          ],
          "correct_answer": "كلاهما صحيح",
          "explanation": "الدالة تنقص العدد بمقدار 2 بشكل خاطئ ولا تعالج القيم السالبة، مما يؤدي إلى استدعاء لانهائي."
        }
      ]
    },
    {
      "topic": "Python",
      "subtopic": "Higher-Order Functions",
      "description": "Determining the correct use of higher-order functions and function composition.",
      "difficulty": "hard",
      "translations": [
        {
          "language": "en",
          "question": "We want to write a function `apply_twice(f, x)` that applies a function `f` to a value `x` two times. Which of the following implementations is correct?\n\nOptions:\n1.\n```python\ndef apply_twice(f, x):\n    return f(x, x)\n```\n2.\n```python\ndef apply_twice(f, x):\n    return f(f(x))\n```\n3.\n```python\ndef apply_twice(f, x):\n    return f(x) + f(x)\n```",
          "answers": [
            "Option 1",
            "Option 2",
            "Option 3"
          ],
          "correct_answer": "Option 2",
          "explanation": "Option 2 correctly applies the function to the result of itself: f(f(x))."
        },
        {
          "language": "ru",
          "question": "Нужно написать функцию `apply_twice(f, x)`, которая применяет функцию `f` к значению `x` дважды. Какой из вариантов правильный?\n\nВарианты:\n1.\n```python\ndef apply_twice(f, x):\n    return f(x, x)\n```\n2.\n```python\ndef apply_twice(f, x):\n    return f(f(x))\n```\n3.\n```python\ndef apply_twice(f, x):\n    return f(x) + f(x)\n```",
          "answers": [
            "Вариант 1",
            "Вариант 2",
            "Вариант 3"
          ],
          "correct_answer": "Вариант 2",
          "explanation": "Вариант 2 корректно вызывает функцию дважды, применяя её к результату самой себя: f(f(x))."
        },
        {
          "language": "tr",
          "question": "`apply_twice(f, x)` adında bir fonksiyon yazmak istiyoruz. Bu fonksiyon, verilen `f` fonksiyonunu `x` değerine iki kez uygulamalı. Aşağıdaki implementasyonlardan hangisi doğrudur?\n\nSeçenekler:\n1.\n```python\ndef apply_twice(f, x):\n    return f(x, x)\n```\n2.\n```python\ndef apply_twice(f, x):\n    return f(f(x))\n```\n3.\n```python\ndef apply_twice(f, x):\n    return f(x) + f(x)\n```",
          "answers": [
            "Seçenek 1",
            "Seçenek 2",
            "Seçenek 3"
          ],
          "correct_answer": "Seçenek 2",
          "explanation": "Seçenek 2 doğrudur çünkü fonksiyon kendisinin sonucuna uygulanır: f(f(x))."
        },
        {
          "language": "ar",
          "question": "نريد كتابة دالة `apply_twice(f, x)` تقوم بتطبيق الدالة `f` على القيمة `x` مرتين. أي من هذه الخيارات صحيح؟\n\nالخيارات:\n1.\n```python\ndef apply_twice(f, x):\n    return f(x, x)\n```\n2.\n```python\ndef apply_twice(f, x):\n    return f(f(x))\n```\n3.\n```python\ndef apply_twice(f, x):\n    return f(x) + f(x)\n```",
          "answers": [
            "الخيار 1",
            "الخيار 2",
            "الخيار 3"
          ],
          "correct_answer": "الخيار 2",
          "explanation": "الخيار 2 صحيح لأنه يطبق الدالة على نتيجة نفسها: f(f(x))."
        }
      ]
    }
  ]
}