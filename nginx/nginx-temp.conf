# ВРЕМЕННАЯ КОНФИГУРАЦИЯ ДЛЯ ПОЛУЧЕНИЯ SSL СЕРТИФИКАТОВ
# Используется только для получения сертификатов Let's Encrypt

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    resolver 127.0.0.11; # Важно для Docker
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Настройки логов
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Общие настройки
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Настройки для загрузки файлов
    client_max_body_size 20M;

    # --- СЕРВЕР ДЛЯ ВЕРИФИКАЦИИ LET'S ENCRYPT ---
    server {
        listen 80;
        server_name
            quiz-code.com www.quiz-code.com mini.quiz-code.com
            quiz-format.com www.quiz-format.com mini.quiz-format.com
            quiz-game.co www.quiz-game.co mini.quiz-game.co
            localhost 127.0.0.1;

        # Для верификации Let's Encrypt (должен быть до любого редиректа)
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Временно обслуживаем все запросы через HTTP
        location / {
            proxy_pass http://quiz_backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # --- СЕРВЕР ДЛЯ MINI APP ---
    server {
        listen 80;
        server_name mini.quiz-code.com mini.quiz-format.com mini.quiz-game.co;

        # Для верификации Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Временно обслуживаем mini app через HTTP
        location / {
            proxy_pass http://mini_app:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
