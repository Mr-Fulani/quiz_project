#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ mini app –≤ Telegram.
–û–±–Ω–æ–≤–ª—è–µ—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º WEBAPP_URL.
"""

import os
import asyncio
import sys
import logging
from dotenv import load_dotenv

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "quiz_backend.config.settings")

import django
django.setup()

from aiogram import Bot
from aiogram.types import MenuButtonDefault, MenuButtonWebApp, WebAppInfo

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
WEBAPP_URL = os.getenv('WEBAPP_URL')


async def update_all_bot_settings():
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ –¥–ª—è mini app.
    """
    if not TELEGRAM_BOT_TOKEN:
        logger.error("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return False
        
    if not WEBAPP_URL:
        logger.error("‚ùå WEBAPP_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return False
    
    bot = Bot(token=TELEGRAM_BOT_TOKEN)
    
    try:
        profile_url = f"{WEBAPP_URL}/profile"
        
        logger.info("=" * 60)
        logger.info("üöÄ –û–ë–ù–û–í–õ–ï–ù–ò–ï –ù–ê–°–¢–†–û–ï–ö MINI APP")
        logger.info("=" * 60)
        logger.info(f"üîó WEBAPP_URL: {WEBAPP_URL}")
        logger.info(f"üîó Profile URL: {profile_url}")
        
        # –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        me = await bot.get_me()
        logger.info(f"ü§ñ –ë–æ—Ç: @{me.username} (ID: {me.id})")
        
        # –®–∞–≥ 2: –û—á–∏—â–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
        logger.info("üßπ –û—á–∏—Å—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞...")
        await bot.set_my_commands([])
        
        # –®–∞–≥ 3: –°–±—Ä–∞—Å—ã–≤–∞–µ–º menu button –Ω–∞ default
        logger.info("üßπ –°–±—Ä–æ—Å menu button –Ω–∞ default...")
        await bot.set_chat_menu_button(menu_button=MenuButtonDefault())
        await asyncio.sleep(1)
        
        # –®–∞–≥ 4: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π menu button
        logger.info("üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ menu button...")
        await bot.set_chat_menu_button(
            menu_button=MenuButtonWebApp(
                text="–ü—Ä–æ—Ñ–∏–ª—å",
                web_app=WebAppInfo(url=profile_url)
            )
        )
        
        # –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        updated_menu = await bot.get_chat_menu_button()
        logger.info(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π menu button: {updated_menu}")
        
        # –®–∞–≥ 6: –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞
        logger.info("üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –±–æ—Ç–∞...")
        description = f"Quiz Bot with Mini App: {WEBAPP_URL}"
        await bot.set_my_description(description=description)
        
        # –®–∞–≥ 7: –û–±–Ω–æ–≤–ª—è–µ–º –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
        logger.info("üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—Ä–∞—Ç–∫–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è...")
        short_description = "Quiz Bot with Mini App"
        await bot.set_my_short_description(short_description=short_description)
        
        logger.info("\n" + "=" * 60)
        logger.info("‚úÖ –í–°–ï –ù–ê–°–¢–†–û–ô–ö–ò –û–ë–ù–û–í–õ–ï–ù–´!")
        logger.info("=" * 60)
        logger.info("\nüí° –ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:")
        logger.info("   1. –ü–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–∫—Ä–æ–π—Ç–µ Telegram –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
        logger.info("   2. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram –∑–∞–Ω–æ–≤–æ")
        logger.info("   3. –ù–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ —á–∞—Ç–æ–≤")
        logger.info("   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–Ω–æ–ø–∫—É '–û–¢–ö–†–´–¢–¨' - –æ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –Ω–æ–≤—ã–π URL")
        logger.info("   5. –ï—Å–ª–∏ –Ω–µ –ø–æ–º–æ–≥–ª–æ, –æ—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à Telegram –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        
        return True
        
    except Exception as e:
        logger.exception(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        return False
    finally:
        await bot.session.close()


async def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è.
    """
    success = await update_all_bot_settings()
    
    if not success:
        logger.error("\n" + "=" * 60)
        logger.error("‚ùå –û–®–ò–ë–ö–ê! –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –±—ã–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã.")
        logger.error("=" * 60)
        sys.exit(1)


if __name__ == "__main__":
    asyncio.run(main())
