services:
  database:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - quiz_network
    restart: unless-stopped

  telegram_bot:
    build: ./bot
    container_name: upbeat_robinson
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - ADMIN_SECRET_PASSWORD=${ADMIN_SECRET_PASSWORD}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - PYTHONPATH=/quiz_project
      - LOGO_PATH=/quiz_project/bot/assets/logo.png
    volumes:
      - .:/quiz_project
    depends_on:
      - database
    ports:
      - "8002:8000"
    networks:
      - quiz_network
    restart: unless-stopped

  django:
    build:
      context: ./django_project
      dockerfile: Dockerfile
    container_name: django-app
    env_file:
      - .env
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - SOCIAL_AUTH_GITHUB_KEY=${SOCIAL_AUTH_GITHUB_KEY}
      - SOCIAL_AUTH_GITHUB_SECRET=${SOCIAL_AUTH_GITHUB_SECRET}
      - DATABASE_ENGINE=${DATABASE_ENGINE}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./django_project:/app
    ports:
      - "8001:8000"
    depends_on:
      - database
    networks:
      - quiz_network

  mini_app:
    build:
      context: ./mini_app
      dockerfile: Dockerfile
    container_name: mini_app
    ports:
      - "8080:80"
    networks:
      - quiz_network
    restart: unless-stopped

networks:
  quiz_network:
    driver: bridge

volumes:
  postgres_data: