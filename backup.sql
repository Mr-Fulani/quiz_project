--
-- PostgreSQL database dump
--

-- Dumped from database version 15.12 (Debian 15.12-1.pgdg120+1)
-- Dumped by pg_dump version 15.12 (Debian 15.12-1.pgdg120+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: public; Type: SCHEMA; Schema: -; Owner: admin_fulani_quiz
--

-- *not* creating schema, since initdb creates it


ALTER SCHEMA public OWNER TO admin_fulani_quiz;

--
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: admin_fulani_quiz
--

COMMENT ON SCHEMA public IS '';


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: accounts_telegramuser; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.accounts_telegramuser (
    id bigint NOT NULL,
    telegram_id bigint NOT NULL,
    username character varying(255),
    first_name character varying(255),
    last_name character varying(255),
    created_at timestamp with time zone NOT NULL,
    linked_user_id bigint
);


ALTER TABLE public.accounts_telegramuser OWNER TO admin_fulani_quiz;

--
-- Name: accounts_telegramuser_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.accounts_telegramuser ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.accounts_telegramuser_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: admins; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.admins (
    id bigint NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL,
    phone_number character varying(15),
    language character varying(10) NOT NULL,
    is_telegram_admin boolean,
    is_django_admin boolean NOT NULL,
    is_super_admin boolean NOT NULL,
    telegram_id bigint NOT NULL,
    photo character varying(500)
);


ALTER TABLE public.admins OWNER TO admin_fulani_quiz;

--
-- Name: admins_groups; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.admins_groups (
    id bigint NOT NULL,
    telegramadmin_id bigint NOT NULL,
    telegramchannel_id integer NOT NULL
);


ALTER TABLE public.admins_groups OWNER TO admin_fulani_quiz;

--
-- Name: admins_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.admins_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.admins_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: admins_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.admins ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.admins_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: admins_user_permissions; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.admins_user_permissions (
    id bigint NOT NULL,
    telegramadmin_id bigint NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.admins_user_permissions OWNER TO admin_fulani_quiz;

--
-- Name: admins_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.admins_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.admins_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO admin_fulani_quiz;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO admin_fulani_quiz;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO admin_fulani_quiz;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: authtoken_token; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.authtoken_token (
    key character varying(40) NOT NULL,
    created timestamp with time zone NOT NULL,
    user_id bigint NOT NULL
);


ALTER TABLE public.authtoken_token OWNER TO admin_fulani_quiz;

--
-- Name: blog_category; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.blog_category (
    id bigint NOT NULL,
    name character varying(100) NOT NULL,
    slug character varying(50) NOT NULL,
    description text NOT NULL,
    is_portfolio boolean NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL
);


ALTER TABLE public.blog_category OWNER TO admin_fulani_quiz;

--
-- Name: blog_category_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.blog_category ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_message; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.blog_message (
    id bigint NOT NULL,
    content text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    is_read boolean NOT NULL,
    is_deleted_by_sender boolean NOT NULL,
    is_deleted_by_recipient boolean NOT NULL,
    recipient_id bigint,
    sender_id bigint,
    email character varying(254) NOT NULL,
    fullname character varying(255) NOT NULL
);


ALTER TABLE public.blog_message OWNER TO admin_fulani_quiz;

--
-- Name: blog_message_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.blog_message ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_message_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_messageattachment; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.blog_messageattachment (
    id bigint NOT NULL,
    file character varying(100) NOT NULL,
    filename character varying(255) NOT NULL,
    uploaded_at timestamp with time zone NOT NULL,
    message_id bigint NOT NULL
);


ALTER TABLE public.blog_messageattachment OWNER TO admin_fulani_quiz;

--
-- Name: blog_messageattachment_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.blog_messageattachment ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_messageattachment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_pagevideo; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.blog_pagevideo (
    id bigint NOT NULL,
    page character varying(10) NOT NULL,
    title character varying(200) NOT NULL,
    video_url character varying(200),
    video_file character varying(100),
    "order" integer NOT NULL,
    gif character varying(100),
    CONSTRAINT blog_pagevideo_order_check CHECK (("order" >= 0))
);


ALTER TABLE public.blog_pagevideo OWNER TO admin_fulani_quiz;

--
-- Name: blog_pagevideo_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.blog_pagevideo ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_pagevideo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_post; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.blog_post (
    id bigint NOT NULL,
    title character varying(200) NOT NULL,
    slug character varying(50) NOT NULL,
    content text NOT NULL,
    excerpt text NOT NULL,
    published boolean NOT NULL,
    featured boolean NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    published_at timestamp with time zone,
    views_count integer NOT NULL,
    category_id bigint NOT NULL,
    video_url character varying(200),
    CONSTRAINT blog_post_views_count_check CHECK ((views_count >= 0))
);


ALTER TABLE public.blog_post OWNER TO admin_fulani_quiz;

--
-- Name: blog_post_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.blog_post ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_post_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_postimage; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.blog_postimage (
    id bigint NOT NULL,
    post_id bigint NOT NULL,
    gif character varying(100),
    is_main boolean NOT NULL,
    photo character varying(100),
    video character varying(100)
);


ALTER TABLE public.blog_postimage OWNER TO admin_fulani_quiz;

--
-- Name: blog_postimage_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.blog_postimage ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_postimage_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_project; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.blog_project (
    id bigint NOT NULL,
    title character varying(200) NOT NULL,
    slug character varying(50) NOT NULL,
    description text NOT NULL,
    technologies character varying(200) NOT NULL,
    github_link character varying(200) NOT NULL,
    demo_link character varying(200) NOT NULL,
    featured boolean NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    category_id bigint,
    video_url character varying(200)
);


ALTER TABLE public.blog_project OWNER TO admin_fulani_quiz;

--
-- Name: blog_project_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.blog_project ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_project_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_projectimage; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.blog_projectimage (
    id bigint NOT NULL,
    project_id bigint NOT NULL,
    gif character varying(100),
    is_main boolean NOT NULL,
    photo character varying(100),
    video character varying(100)
);


ALTER TABLE public.blog_projectimage OWNER TO admin_fulani_quiz;

--
-- Name: blog_projectimage_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.blog_projectimage ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_projectimage_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_testimonial; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.blog_testimonial (
    id bigint NOT NULL,
    text text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    is_approved boolean NOT NULL,
    user_id bigint NOT NULL
);


ALTER TABLE public.blog_testimonial OWNER TO admin_fulani_quiz;

--
-- Name: blog_testimonial_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.blog_testimonial ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_testimonial_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: default_links; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.default_links (
    id integer NOT NULL,
    language character varying(10) NOT NULL,
    topic character varying(100) NOT NULL,
    link character varying(255) NOT NULL
);


ALTER TABLE public.default_links OWNER TO admin_fulani_quiz;

--
-- Name: default_links_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.default_links ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.default_links_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id bigint NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO admin_fulani_quiz;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admins; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.django_admins (
    id bigint NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL,
    phone_number character varying(15),
    language character varying(10) NOT NULL,
    is_telegram_admin boolean,
    is_django_admin boolean NOT NULL,
    is_super_admin boolean NOT NULL
);


ALTER TABLE public.django_admins OWNER TO admin_fulani_quiz;

--
-- Name: django_admins_groups; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.django_admins_groups (
    id bigint NOT NULL,
    djangoadmin_id bigint NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.django_admins_groups OWNER TO admin_fulani_quiz;

--
-- Name: django_admins_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.django_admins_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admins_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admins_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.django_admins ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admins_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admins_user_permissions; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.django_admins_user_permissions (
    id bigint NOT NULL,
    djangoadmin_id bigint NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.django_admins_user_permissions OWNER TO admin_fulani_quiz;

--
-- Name: django_admins_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.django_admins_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admins_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO admin_fulani_quiz;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO admin_fulani_quiz;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO admin_fulani_quiz;

--
-- Name: feedback_messages; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.feedback_messages (
    id integer NOT NULL,
    user_id bigint NOT NULL,
    username character varying(255),
    message text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    is_processed boolean NOT NULL
);


ALTER TABLE public.feedback_messages OWNER TO admin_fulani_quiz;

--
-- Name: feedback_messages_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.feedback_messages ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.feedback_messages_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: groups; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.groups (
    id integer NOT NULL,
    group_name character varying(255) NOT NULL,
    group_id bigint NOT NULL,
    topic_id integer NOT NULL,
    language character varying(50) NOT NULL,
    location_type character varying(50) NOT NULL,
    username character varying(255)
);


ALTER TABLE public.groups OWNER TO admin_fulani_quiz;

--
-- Name: groups_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: main_fallback_links; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.main_fallback_links (
    id integer NOT NULL,
    language character varying(10) NOT NULL,
    link character varying(255) NOT NULL
);


ALTER TABLE public.main_fallback_links OWNER TO admin_fulani_quiz;

--
-- Name: main_fallback_links_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.main_fallback_links ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.main_fallback_links_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: polls_choice; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.polls_choice (
    id bigint NOT NULL,
    text character varying(255) NOT NULL,
    is_correct boolean NOT NULL,
    votes integer NOT NULL,
    poll_id bigint NOT NULL
);


ALTER TABLE public.polls_choice OWNER TO admin_fulani_quiz;

--
-- Name: polls_choice_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.polls_choice ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.polls_choice_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: polls_poll; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.polls_poll (
    id bigint NOT NULL,
    question character varying(255) NOT NULL,
    created_at timestamp with time zone NOT NULL,
    author_id bigint
);


ALTER TABLE public.polls_poll OWNER TO admin_fulani_quiz;

--
-- Name: polls_poll_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.polls_poll ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.polls_poll_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: polls_userresponse; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.polls_userresponse (
    id bigint NOT NULL,
    responded_at timestamp with time zone NOT NULL,
    choice_id bigint NOT NULL,
    poll_id bigint NOT NULL,
    user_id bigint NOT NULL
);


ALTER TABLE public.polls_userresponse OWNER TO admin_fulani_quiz;

--
-- Name: polls_userresponse_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.polls_userresponse ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.polls_userresponse_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: subtopics; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.subtopics (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    topic_id integer NOT NULL
);


ALTER TABLE public.subtopics OWNER TO admin_fulani_quiz;

--
-- Name: subtopics_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.subtopics ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.subtopics_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: super_admins; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.super_admins (
    id bigint NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL,
    phone_number character varying(15),
    language character varying(10) NOT NULL,
    is_telegram_admin boolean,
    is_django_admin boolean NOT NULL,
    is_super_admin boolean NOT NULL
);


ALTER TABLE public.super_admins OWNER TO admin_fulani_quiz;

--
-- Name: super_admins_groups; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.super_admins_groups (
    id bigint NOT NULL,
    superadmin_id bigint NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.super_admins_groups OWNER TO admin_fulani_quiz;

--
-- Name: super_admins_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.super_admins_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.super_admins_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: super_admins_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.super_admins ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.super_admins_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: super_admins_user_permissions; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.super_admins_user_permissions (
    id bigint NOT NULL,
    superadmin_id bigint NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.super_admins_user_permissions OWNER TO admin_fulani_quiz;

--
-- Name: super_admins_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.super_admins_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.super_admins_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: task_polls; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.task_polls (
    id integer NOT NULL,
    poll_id character varying(255) NOT NULL,
    poll_question text,
    poll_options jsonb,
    is_anonymous boolean NOT NULL,
    poll_type character varying(50),
    allows_multiple_answers boolean NOT NULL,
    total_voter_count integer NOT NULL,
    poll_link character varying(255),
    task_id integer NOT NULL,
    translation_id integer NOT NULL
);


ALTER TABLE public.task_polls OWNER TO admin_fulani_quiz;

--
-- Name: task_polls_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.task_polls ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.task_polls_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: task_statistics; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.task_statistics (
    id integer NOT NULL,
    attempts integer NOT NULL,
    successful boolean NOT NULL,
    last_attempt_date timestamp with time zone NOT NULL,
    task_id integer NOT NULL,
    user_id bigint NOT NULL
);


ALTER TABLE public.task_statistics OWNER TO admin_fulani_quiz;

--
-- Name: task_statistics_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.task_statistics ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.task_statistics_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: task_translations; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.task_translations (
    id integer NOT NULL,
    language character varying(10) NOT NULL,
    question text NOT NULL,
    answers jsonb NOT NULL,
    correct_answer character varying(255) NOT NULL,
    explanation text,
    task_id integer NOT NULL,
    publish_date timestamp with time zone
);


ALTER TABLE public.task_translations OWNER TO admin_fulani_quiz;

--
-- Name: task_translations_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.task_translations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.task_translations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: tasks; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.tasks (
    id integer NOT NULL,
    difficulty character varying(50) NOT NULL,
    published boolean NOT NULL,
    create_date timestamp with time zone DEFAULT now() NOT NULL,
    publish_date timestamp with time zone,
    image_url character varying(255),
    external_link character varying(255),
    translation_group_id uuid NOT NULL,
    error boolean NOT NULL,
    message_id integer,
    group_id integer,
    subtopic_id integer,
    topic_id integer NOT NULL
);


ALTER TABLE public.tasks OWNER TO admin_fulani_quiz;

--
-- Name: tasks_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.tasks ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.tasks_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: topics; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.topics (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    description text,
    icon character varying(255) NOT NULL
);


ALTER TABLE public.topics OWNER TO admin_fulani_quiz;

--
-- Name: topics_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.topics ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.topics_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: user_channel_subscriptions; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.user_channel_subscriptions (
    id integer NOT NULL,
    subscription_status character varying(20) NOT NULL,
    subscribed_at timestamp with time zone,
    unsubscribed_at timestamp with time zone,
    channel_id bigint NOT NULL,
    user_id bigint NOT NULL
);


ALTER TABLE public.user_channel_subscriptions OWNER TO admin_fulani_quiz;

--
-- Name: user_channel_subscriptions_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.user_channel_subscriptions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.user_channel_subscriptions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: user_profiles; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.user_profiles (
    avatar character varying(100),
    bio text NOT NULL,
    location character varying(100) NOT NULL,
    birth_date date,
    website character varying(200) NOT NULL,
    total_points integer NOT NULL,
    quizzes_completed integer NOT NULL,
    average_score double precision NOT NULL,
    favorite_category character varying(100) NOT NULL,
    is_telegram_user boolean NOT NULL,
    email_notifications boolean NOT NULL,
    is_public boolean NOT NULL,
    theme_preference character varying(20) NOT NULL,
    user_id bigint NOT NULL,
    facebook character varying(200) NOT NULL,
    github character varying(200) NOT NULL,
    instagram character varying(200) NOT NULL,
    linkedin character varying(200) NOT NULL,
    telegram character varying(100) NOT NULL,
    youtube character varying(200) NOT NULL,
    last_seen timestamp with time zone NOT NULL
);


ALTER TABLE public.user_profiles OWNER TO admin_fulani_quiz;

--
-- Name: users; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.users (
    id bigint NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150),
    last_name character varying(150),
    email character varying(254),
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL,
    subscription_status character varying(20) NOT NULL,
    created_at timestamp with time zone NOT NULL,
    language character varying(10),
    deactivated_at timestamp with time zone,
    photo character varying(500),
    telegram_id bigint
);


ALTER TABLE public.users OWNER TO admin_fulani_quiz;

--
-- Name: users_groups; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.users_groups (
    id bigint NOT NULL,
    customuser_id bigint NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.users_groups OWNER TO admin_fulani_quiz;

--
-- Name: users_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.users_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.users ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users_user_permissions; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.users_user_permissions (
    id bigint NOT NULL,
    customuser_id bigint NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.users_user_permissions OWNER TO admin_fulani_quiz;

--
-- Name: users_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE public.users_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: webhooks; Type: TABLE; Schema: public; Owner: admin_fulani_quiz
--

CREATE TABLE public.webhooks (
    id uuid NOT NULL,
    url character varying(255) NOT NULL,
    service_name character varying(100),
    is_active boolean NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL
);


ALTER TABLE public.webhooks OWNER TO admin_fulani_quiz;

--
-- Data for Name: accounts_telegramuser; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.accounts_telegramuser (id, telegram_id, username, first_name, last_name, created_at, linked_user_id) FROM stdin;
\.


--
-- Data for Name: admins; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.admins (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined, phone_number, language, is_telegram_admin, is_django_admin, is_super_admin, telegram_id, photo) FROM stdin;
11	pbkdf2_sha256$870000$pIcYfZwADVlbSKK7DsfDYS$gEjXXL17J/u4iF4W+LrCK5ogRBPXb+D9Fw93dTd183k=	\N	f	Mr_Fulani	Mr	Fulani		f	t	2025-02-14 02:08:39.293315+00	\N	ru	t	f	f	975113235	\N
22	pbkdf2_sha256$870000$9MIgZIk7RtorT35JgN2Xsc$dFVekWzwF8AJlu0fERCuPIw3RyTxg3YgBqsL+RrEwnA=	\N	f	AbuInternet	Fulani	Fulan		f	t	2025-02-19 00:19:56.630383+00	\N	ru	f	f	f	7827592658	\N
\.


--
-- Data for Name: admins_groups; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.admins_groups (id, telegramadmin_id, telegramchannel_id) FROM stdin;
\.


--
-- Data for Name: admins_user_permissions; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.admins_user_permissions (id, telegramadmin_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add Пользователь	1	add_customuser
2	Can change Пользователь	1	change_customuser
3	Can delete Пользователь	1	delete_customuser
4	Can view Пользователь	1	view_customuser
5	Can add Django Администратор	2	add_djangoadmin
6	Can change Django Администратор	2	change_djangoadmin
7	Can delete Django Администратор	2	delete_djangoadmin
8	Can view Django Администратор	2	view_djangoadmin
9	Can add Профиль пользователя	3	add_profile
10	Can change Профиль пользователя	3	change_profile
11	Can delete Профиль пользователя	3	delete_profile
12	Can view Профиль пользователя	3	view_profile
13	Can add Супер Администратор	4	add_superadmin
14	Can change Супер Администратор	4	change_superadmin
15	Can delete Супер Администратор	4	delete_superadmin
16	Can view Супер Администратор	4	view_superadmin
17	Can add Telegram Администратор	5	add_telegramadmin
18	Can change Telegram Администратор	5	change_telegramadmin
19	Can delete Telegram Администратор	5	delete_telegramadmin
20	Can view Telegram Администратор	5	view_telegramadmin
21	Can add Подписка на канал	6	add_userchannelsubscription
22	Can change Подписка на канал	6	change_userchannelsubscription
23	Can delete Подписка на канал	6	delete_userchannelsubscription
24	Can view Подписка на канал	6	view_userchannelsubscription
25	Can add Token	7	add_token
26	Can change Token	7	change_token
27	Can delete Token	7	delete_token
28	Can view Token	7	view_token
29	Can add Token	8	add_tokenproxy
30	Can change Token	8	change_tokenproxy
31	Can delete Token	8	delete_tokenproxy
32	Can view Token	8	view_tokenproxy
33	Can add permission	9	add_permission
34	Can change permission	9	change_permission
35	Can delete permission	9	delete_permission
36	Can view permission	9	view_permission
37	Can add group	10	add_group
38	Can change group	10	change_group
39	Can delete group	10	delete_group
40	Can view group	10	view_group
41	Can add log entry	11	add_logentry
42	Can change log entry	11	change_logentry
43	Can delete log entry	11	delete_logentry
44	Can view log entry	11	view_logentry
45	Can add content type	12	add_contenttype
46	Can change content type	12	change_contenttype
47	Can delete content type	12	delete_contenttype
48	Can view content type	12	view_contenttype
49	Can add session	13	add_session
50	Can change session	13	change_session
51	Can delete session	13	delete_session
52	Can view session	13	view_session
53	Can add Задача	14	add_task
54	Can change Задача	14	change_task
55	Can delete Задача	14	delete_task
56	Can view Задача	14	view_task
57	Can add Статистика задачи	15	add_taskstatistics
58	Can change Статистика задачи	15	change_taskstatistics
59	Can delete Статистика задачи	15	delete_taskstatistics
60	Can view Статистика задачи	15	view_taskstatistics
61	Can add Перевод задачи	16	add_tasktranslation
62	Can change Перевод задачи	16	change_tasktranslation
63	Can delete Перевод задачи	16	delete_tasktranslation
64	Can view Перевод задачи	16	view_tasktranslation
65	Can add Опрос задачи	17	add_taskpoll
66	Can change Опрос задачи	17	change_taskpoll
67	Can delete Опрос задачи	17	delete_taskpoll
68	Can view Опрос задачи	17	view_taskpoll
69	Can add Тема	18	add_topic
70	Can change Тема	18	change_topic
71	Can delete Тема	18	delete_topic
72	Can view Тема	18	view_topic
73	Can add Подтема	19	add_subtopic
74	Can change Подтема	19	change_subtopic
75	Can delete Подтема	19	delete_subtopic
76	Can view Подтема	19	view_subtopic
77	Can add Сообщение обратной связи	20	add_feedbackmessage
78	Can change Сообщение обратной связи	20	change_feedbackmessage
79	Can delete Сообщение обратной связи	20	delete_feedbackmessage
80	Can view Сообщение обратной связи	20	view_feedbackmessage
81	Can add Ссылка по умолчанию	21	add_defaultlink
82	Can change Ссылка по умолчанию	21	change_defaultlink
83	Can delete Ссылка по умолчанию	21	delete_defaultlink
84	Can view Ссылка по умолчанию	21	view_defaultlink
85	Can add Основная резервная ссылка	22	add_mainfallbacklink
86	Can change Основная резервная ссылка	22	change_mainfallbacklink
87	Can delete Основная резервная ссылка	22	delete_mainfallbacklink
88	Can view Основная резервная ссылка	22	view_mainfallbacklink
89	Can add Вебхук	23	add_webhook
90	Can change Вебхук	23	change_webhook
91	Can delete Вебхук	23	delete_webhook
92	Can view Вебхук	23	view_webhook
93	Can add Telegram канал	24	add_telegramchannel
94	Can change Telegram канал	24	change_telegramchannel
95	Can delete Telegram канал	24	delete_telegramchannel
96	Can view Telegram канал	24	view_telegramchannel
97	Can add Category	25	add_category
98	Can change Category	25	change_category
99	Can delete Category	25	delete_category
100	Can view Category	25	view_category
101	Can add message	26	add_message
102	Can change message	26	change_message
103	Can delete message	26	delete_message
104	Can view message	26	view_message
105	Can add message attachment	27	add_messageattachment
106	Can change message attachment	27	change_messageattachment
107	Can delete message attachment	27	delete_messageattachment
108	Can view message attachment	27	view_messageattachment
109	Can add Пост	28	add_post
110	Can change Пост	28	change_post
111	Can delete Пост	28	delete_post
112	Can view Пост	28	view_post
113	Can add Проект	29	add_project
114	Can change Проект	29	change_project
115	Can delete Проект	29	delete_project
116	Can view Проект	29	view_project
117	Can add User Settings	30	add_usersettings
118	Can change User Settings	30	change_usersettings
119	Can delete User Settings	30	delete_usersettings
120	Can view User Settings	30	view_usersettings
121	Can add poll	31	add_poll
122	Can change poll	31	change_poll
123	Can delete poll	31	delete_poll
124	Can view poll	31	view_poll
125	Can add choice	32	add_choice
126	Can change choice	32	change_choice
127	Can delete choice	32	delete_choice
128	Can view choice	32	view_choice
129	Can add user response	33	add_userresponse
130	Can change user response	33	change_userresponse
131	Can delete user response	33	delete_userresponse
132	Can view user response	33	view_userresponse
133	Can add Резюме	34	add_resume
134	Can change Резюме	34	change_resume
135	Can delete Резюме	34	delete_resume
136	Can view Резюме	34	view_resume
137	Can add Опыт работы	35	add_workexperience
138	Can change Опыт работы	35	change_workexperience
139	Can delete Опыт работы	35	delete_workexperience
140	Can view Опыт работы	35	view_workexperience
141	Can add Язык	36	add_language
142	Can change Язык	36	change_language
143	Can delete Язык	36	delete_language
144	Can view Язык	36	view_language
145	Can add Образование	37	add_education
146	Can change Образование	37	change_education
147	Can delete Образование	37	delete_education
148	Can view Образование	37	view_education
149	Can add post image	38	add_postimage
150	Can change post image	38	change_postimage
151	Can delete post image	38	delete_postimage
152	Can view post image	38	view_postimage
153	Can add project image	39	add_projectimage
154	Can change project image	39	change_projectimage
155	Can delete project image	39	delete_projectimage
156	Can view project image	39	view_projectimage
157	Can add Видео для страницы	40	add_pagevideo
158	Can change Видео для страницы	40	change_pagevideo
159	Can delete Видео для страницы	40	delete_pagevideo
160	Can view Видео для страницы	40	view_pagevideo
161	Can add testimonial	41	add_testimonial
162	Can change testimonial	41	change_testimonial
163	Can delete testimonial	41	delete_testimonial
164	Can view testimonial	41	view_testimonial
165	Can add telegram user	42	add_telegramuser
166	Can change telegram user	42	change_telegramuser
167	Can delete telegram user	42	delete_telegramuser
168	Can view telegram user	42	view_telegramuser
\.


--
-- Data for Name: authtoken_token; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.authtoken_token (key, created, user_id) FROM stdin;
\.


--
-- Data for Name: blog_category; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.blog_category (id, name, slug, description, is_portfolio, created_at, updated_at) FROM stdin;
3	Python Packages	python-packages	Python Useful Packages Test Post	f	2025-02-12 05:45:26.471496+00	2025-02-12 05:45:26.471524+00
2	Django	django	Django Post Description	f	2025-02-12 05:44:45.70516+00	2025-02-12 05:53:44.106638+00
1	Python	python	Post Test short description	f	2025-02-12 05:44:04.440844+00	2025-02-12 05:53:44.111116+00
4	Python & JavaScript	python-javascript	Full Stack development	t	2025-02-12 05:57:03.926554+00	2025-02-12 05:58:11.105373+00
5	Flask & Html, CSS	flask-html-css	Full Stack development	t	2025-02-12 05:58:39.913237+00	2025-02-12 05:58:39.913247+00
6	Django (DRF)	django-drf	Django REST Framework (DRF) — это набор инструментов для создания веб-сервисов и API на основе фреймворка Django.	t	2025-03-17 09:04:21.920543+00	2025-03-17 09:04:21.920555+00
7	Fast API	fast-api	Fast API легкий, асинхронный фреймворк	f	2025-04-18 12:57:18.565233+00	2025-04-18 12:57:41.773583+00
\.


--
-- Data for Name: blog_message; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.blog_message (id, content, created_at, is_read, is_deleted_by_sender, is_deleted_by_recipient, recipient_id, sender_id, email, fullname) FROM stdin;
91	ыаыаыа	2025-04-14 10:52:06.922218+00	t	f	f	33	1	unknown@example.com	Unknown
92	ыаыа	2025-04-14 10:52:16.617038+00	t	f	f	33	1	unknown@example.com	Unknown
145	Рррр	2025-04-22 07:02:28.868956+00	f	f	f	29	33	unknown@example.com	Unknown
89	ыаыаыаы	2025-04-14 10:51:53.410091+00	t	t	f	1	33	unknown@example.com	Unknown
93	Hi fraer	2025-04-15 01:21:08.575165+00	t	f	f	1	33	unknown@example.com	Unknown
95	Good	2025-04-15 03:41:53.361878+00	f	f	f	3	1	unknown@example.com	Unknown
128	fsfsdfsfsf	2025-04-21 14:08:20.405453+00	t	f	f	1	33	unknown@example.com	Unknown
94	Ok	2025-04-15 03:41:30.565583+00	t	t	f	33	1	unknown@example.com	Unknown
96	Good luck	2025-04-15 03:42:17.289987+00	f	t	f	4	1	unknown@example.com	Unknown
101	Hdhdjd	2025-04-15 09:24:51.011808+00	f	t	f	3	1	unknown@example.com	Unknown
102	Bbdjdjd	2025-04-15 09:24:54.891464+00	f	t	f	3	1	unknown@example.com	Unknown
97	ваыа	2025-04-15 09:21:05.902035+00	t	f	f	33	1	unknown@example.com	Unknown
98	вава	2025-04-15 09:22:24.544842+00	t	f	f	33	1	unknown@example.com	Unknown
127	fsfsfsfsf	2025-04-21 14:08:08.988864+00	t	f	t	1	33	unknown@example.com	Unknown
100	ваыаа	2025-04-15 09:22:48.602888+00	t	f	f	33	1	unknown@example.com	Unknown
129	ыалоыао	2025-04-21 14:19:28.606114+00	t	f	f	33	1	unknown@example.com	Unknown
99	аыаыа	2025-04-15 09:22:35.135858+00	t	t	f	33	1	unknown@example.com	Unknown
104	вывыв	2025-04-15 19:06:56.590186+00	t	t	f	33	1	unknown@example.com	Unknown
103	пвпвпп	2025-04-15 10:09:17.931844+00	t	t	f	33	1	unknown@example.com	Unknown
105	or ser	2025-04-15 22:01:02.158679+00	t	f	f	1	33	unknown@example.com	Unknown
108	Face	2025-04-16 02:51:19.929347+00	t	f	f	1	33	unknown@example.com	Unknown
109	how about to go to the beach?	2025-04-17 09:57:04.521515+00	t	f	f	33	1	unknown@example.com	Unknown
110	Sounds good	2025-04-17 09:57:36.183953+00	t	f	f	1	33	unknown@example.com	Unknown
111	jfdjfkjdkfjkjfkdjkfjkdjfkdjkfjdkfjkdjfkdjfkjkfjk\r\nsf	2025-04-17 14:20:55.406025+00	f	f	f	38	\N	mr.fulani@icloud.com	Anvar Sharipov
112	Ffff	2025-04-18 07:55:22.930312+00	f	f	f	31	33	unknown@example.com	Unknown
113	Jdjdjdj	2025-04-18 08:56:56.873384+00	f	f	f	38	\N	ethyl_nape_5g@icloud.com	Ddddd
114	‏السلام عليكم ورحمة الله وبركاته	2025-04-18 11:28:11.483325+00	t	f	f	33	39	unknown@example.com	Unknown
115	Держал	2025-04-18 11:28:48.506712+00	t	f	f	33	39	unknown@example.com	Unknown
116	Good looking	2025-04-19 10:34:02.131991+00	f	f	f	39	33	unknown@example.com	Unknown
106	Hi	2025-04-16 02:04:59.489436+00	t	f	f	29	33	unknown@example.com	Unknown
107	Hi too🤣	2025-04-16 02:06:01.464718+00	t	f	f	29	33	unknown@example.com	Unknown
117	Che ti	2025-04-19 10:35:31.136399+00	t	f	f	29	33	unknown@example.com	Unknown
118	олололололо	2025-04-19 10:35:55.240168+00	t	f	f	33	29	unknown@example.com	Unknown
130	ыаыаыавы	2025-04-21 14:19:37.681114+00	t	f	f	33	1	unknown@example.com	Unknown
119	jhjhjhjjhjhjh	2025-04-19 13:11:01.794954+00	t	f	f	33	40	unknown@example.com	Unknown
120	Gcgjj	2025-04-19 13:11:25.780538+00	t	f	f	40	33	unknown@example.com	Unknown
121	лыоалоылаолыа	2025-04-21 07:31:43.879029+00	f	f	f	5	1	unknown@example.com	Unknown
122	аыаыаы	2025-04-21 07:31:57.00179+00	f	f	f	5	1	unknown@example.com	Unknown
123	ldgkldkglk	2025-04-21 14:06:44.298629+00	f	f	f	38	33	unknown@example.com	Unknown
124	fsfsfdsfsdf	2025-04-21 14:06:51.756989+00	f	f	f	38	33	unknown@example.com	Unknown
125	fsfsfsfsf	2025-04-21 14:06:57.451602+00	f	f	f	38	33	unknown@example.com	Unknown
126	sfsfsfsfsfsfsf	2025-04-21 14:07:14.116665+00	f	f	f	38	33	unknown@example.com	Unknown
131	gdgsgsg	2025-04-21 14:37:22.375983+00	t	f	f	1	33	unknown@example.com	Unknown
132	gdgsgsg	2025-04-21 14:37:22.376282+00	t	f	f	1	33	unknown@example.com	Unknown
133	sfsdfsfsf	2025-04-21 14:37:30.434324+00	t	f	f	1	33	unknown@example.com	Unknown
134	sfsdfsfsf	2025-04-21 14:37:30.434631+00	t	f	f	1	33	unknown@example.com	Unknown
135	вапыа	2025-04-21 15:43:58.994772+00	f	f	f	4	1	unknown@example.com	Unknown
136	вапыа	2025-04-21 15:43:58.995103+00	f	f	f	4	1	unknown@example.com	Unknown
137	Ttttt	2025-04-22 06:13:27.886595+00	t	f	f	29	33	unknown@example.com	Unknown
138	Ttttt	2025-04-22 06:13:27.886943+00	t	f	f	29	33	unknown@example.com	Unknown
139	Ffff	2025-04-22 06:13:49.435189+00	t	f	f	29	33	unknown@example.com	Unknown
140	Ffff	2025-04-22 06:13:49.436067+00	t	f	f	29	33	unknown@example.com	Unknown
141	Ddd	2025-04-22 06:14:36.233075+00	t	f	f	29	33	unknown@example.com	Unknown
142	Ddd	2025-04-22 06:14:36.233356+00	t	f	f	29	33	unknown@example.com	Unknown
143	Fff	2025-04-22 06:14:55.356614+00	t	f	f	29	33	unknown@example.com	Unknown
144	Fff	2025-04-22 06:14:55.359069+00	t	f	f	29	33	unknown@example.com	Unknown
148	Hi dude	2025-04-25 21:50:40.815963+00	f	f	f	38	\N	turk34.shop@gmail.com	Anvar Sharipov
147	аываываыа	2025-04-24 11:53:08.96021+00	t	f	f	33	32	unknown@example.com	Unknown
146	аыаыва	2025-04-24 11:52:55.788746+00	t	f	t	33	32	unknown@example.com	Unknown
149	jsfksfjkjsf	2025-04-26 13:34:09.734365+00	t	f	f	33	1	unknown@example.com	Unknown
\.


--
-- Data for Name: blog_messageattachment; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.blog_messageattachment (id, file, filename, uploaded_at, message_id) FROM stdin;
47	message_attachments/2025/04/22/fbfc6bb9-5de5-48d6-984d-25d8d841973d.jpeg	fbfc6bb9-5de5-48d6-984d-25d8d841973d.jpeg	2025-04-22 06:14:36.238788+00	142
48	message_attachments/2025/04/22/fbfc6bb9-5de5-48d6-984d-25d8d841973d_acKICnx.jpeg	fbfc6bb9-5de5-48d6-984d-25d8d841973d.jpeg	2025-04-22 06:14:36.240138+00	141
49	message_attachments/2025/04/22/e23fe601-2e65-4fca-b9b3-e48efbf4acd3.jpeg	e23fe601-2e65-4fca-b9b3-e48efbf4acd3.jpeg	2025-04-22 06:14:55.360547+00	143
50	message_attachments/2025/04/22/e23fe601-2e65-4fca-b9b3-e48efbf4acd3_RppLDFM.jpeg	e23fe601-2e65-4fca-b9b3-e48efbf4acd3.jpeg	2025-04-22 06:14:55.362427+00	144
51	message_attachments/2025/04/24/avatar1.png	avatar1.png	2025-04-24 11:53:08.965897+00	147
32	message_attachments/2025/04/14/gif_python_h4VTyCL.gif	gif_python.gif	2025-04-14 10:52:16.629585+00	92
33	message_attachments/2025/04/15/6C49256F-663D-4245-AE80-E375E883C807.jpeg	6C49256F-663D-4245-AE80-E375E883C807.jpeg	2025-04-15 01:21:08.594172+00	93
34	message_attachments/2025/04/15/Anvar_Sharipov_Resume_en.pdf	Anvar_Sharipov_Resume_en.pdf	2025-04-15 09:22:35.140629+00	99
35	message_attachments/2025/04/15/_01cf9bab-a11b-4001-88b6-b725dd4ad3eb.jpeg	_01cf9bab-a11b-4001-88b6-b725dd4ad3eb.jpeg	2025-04-15 09:22:48.6069+00	100
36	message_attachments/2025/04/15/ocfD06DWFI0NeL4VUjuiACdIbswQIogfAPCZ8E_1.mp4	ocfD06DWFI0NeL4VUjuiACdIbswQIogfAPCZ8E (1).mp4	2025-04-15 10:09:17.956415+00	103
37	message_attachments/2025/04/15/ocfD06DWFI0NeL4VUjuiACdIbswQIogfAPCZ8E_1_u8fYeNq.mp4	ocfD06DWFI0NeL4VUjuiACdIbswQIogfAPCZ8E (1).mp4	2025-04-15 19:06:56.643502+00	104
38	message_attachments/2025/04/16/IMG_5304.jpeg	IMG_5304.jpeg	2025-04-16 02:51:19.940205+00	108
39	message_attachments/2025/04/16/IMG_5298.jpeg	IMG_5298.jpeg	2025-04-16 02:51:19.947772+00	108
40	message_attachments/2025/04/18/IMG_5304.jpeg	IMG_5304.jpeg	2025-04-18 11:28:48.517669+00	115
41	message_attachments/2025/04/21/default_копия.png	default— копия.png	2025-04-21 07:31:57.00862+00	122
42	message_attachments/2025/04/21/1.png	1.png	2025-04-21 14:07:14.131392+00	126
43	message_attachments/2025/04/21/1_xFXBo9d.png	1.png	2025-04-21 14:08:20.409655+00	128
44	message_attachments/2025/04/21/default_копия_RsHOGDQ.png	default— копия.png	2025-04-21 14:19:37.686306+00	130
45	message_attachments/2025/04/21/avatar1.png	avatar1.png	2025-04-21 14:37:30.440264+00	133
46	message_attachments/2025/04/21/avatar1_C10Mqqi.png	avatar1.png	2025-04-21 14:37:30.440994+00	134
\.


--
-- Data for Name: blog_pagevideo; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.blog_pagevideo (id, page, title, video_url, video_file, "order", gif) FROM stdin;
4	index	Видео Био	\N		0	gifs/page_videos/gif_python_rwTqicK.gif
\.


--
-- Data for Name: blog_post; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.blog_post (id, title, slug, content, excerpt, published, featured, created_at, updated_at, published_at, views_count, category_id, video_url) FROM stdin;
2	Helium	helium	🔥 Полезные библиотеки Python: Helium\r\n\r\nЧто такое Helium?\r\n\r\nHelium — это удобная библиотека для автоматизации работы с браузерами, такими как Chrome и Firefox. Построенная на основе Selenium, она предлагает более понятный и лаконичный API, что позволяет:\r\n • Сократить код в 2 раза.\r\n • Удобно взаимодействовать с элементами страницы.\r\n • Автоматически работать с iFrames, окнами и ожиданиями.\r\n\r\n💡 Почему стоит попробовать Helium?\r\n • Простота: Понятный синтаксис, даже если вы новичок.\r\n • Стабильность: Справляется с загрузкой элементов, капчами и проверкой на ботов.\r\n • Интеграция: Позволяет комбинировать Helium и Selenium в одном проекте.\r\n\r\n🚀 Установка:\r\npython -m pip install helium\r\n🔧 Пример использования:\r\nfrom helium import start_chrome\r\n\r\n# Запускаем браузер\r\ndriver = start_chrome()\r\n\r\n# Используем Selenium API\r\ndriver.execute_script("alert('Привет!');")\r\n📌 Полезные ссылки:\r\n\r\nПодробнее о библиотеке: Helium на GitHub\r\n\r\n☄️ Практикуй навыки на: @pythonchik_ru	📌 Хэштеги:\r\n\r\n#Python #Helium #WebAutomation #GitHub #Soft #DevTools	t	f	2025-02-12 05:50:19.050777+00	2025-04-14 04:27:38.884618+00	\N	0	3	https://www.youtube.com/shorts/vVvGGnoQvas?feature=share
3	Django аутентификация	django-autentifikaciya	Упрощаем Django-аутентификацию: быстро и понятно!\r\n\r\nПривет, друзья! 👋 Сегодня мы разберем аутентификацию в Django — важный аспект для создания безопасных веб-приложений. Настройка аутентификации не так сложна, как может показаться:\r\n\r\n1. Установите Django: pip install django.\r\n2. Создайте проект: django-admin startproject myproject.\r\n3. Настройте аутентификацию: Добавьте 'django.contrib.auth' в settings.py.\r\n4. Модели: Используйте встроенные или создайте свои.\r\n5. Формы: Настройте формы для входа и регистрации.\r\n6. Представления и шаблоны: Создайте функции и шаблоны для обработки запросов.\r\n\r\nТеперь у вас есть всё, чтобы сделать ваше приложение безопасным и функциональным! Не забывайте писать вопросы в комментариях! 💬 \r\n\r\nПодписывайтесь на наш https://t.me/pythonchik_ru с опросами, чтобы закреплять материал играючи и получать примеры кода с объяснениями! 📅✨		t	f	2025-02-12 05:52:30.771202+00	2025-04-14 04:27:45.032928+00	\N	0	2	https://www.youtube.com/shorts/vVvGGnoQvas?feature=share
5	Скачиваем аудио с YouTube	skachivaem-audio-s-youtube	Хватит искать конвертеры, Python сделает всё сам. С помощью pytube и moviepy можно вытянуть аудиодорожку из любого YouTube-видео и сохранить её в формате MP3.	*Установка необходимых библиотек:*	t	f	2025-03-22 13:00:34.123688+00	2025-04-14 04:29:05.059965+00	\N	0	1	https://youtu.be/x1pD4qnPRDQ
4	Wild Politics	wild-politics	# Создадим команду Wild Politics: вместе к успеху!\r\n\r\nПривет, друзья! 🎉\r\n\r\nСегодня мы поговорим о силе объединения и важности командной работы для достижения наших общих целей. Команда Wild Politics приветствует вас на борту захватывающего путешествия! 🚀\r\n\r\n✅ Почему стоит стать частью Wild Politics?  \r\n- Мы верим в единство и разнообразие. 🤝  \r\n- У нас есть общая цель – сделать мир лучше! 🌍  \r\n- Вместе мы можем добиться большего, чем поодиночке. 💪  \r\n\r\n💬 Что вас ждет в нашей команде?  \r\n- Участие в захватывающих проектах. 🎯  \r\n- Возможность развивать навыки и таланты. 🎓  \r\n- Поддержка и дружба единомышленников. 💖  \r\n\r\nПрисоединяйтесь к Wild Politics и давайте вместе творить перемены! Напишите в комментариях, почему вы хотите стать частью нашей команды! 👇✨\r\n\r\nНе забудьте подписаться на наш канал и группу https://t.me/pythonchik_ru, где мы закрепляем материал в игровой форме, используя примеры кода с объяснениями!		t	f	2025-02-12 05:55:09.814716+00	2025-04-14 04:30:09.713375+00	\N	0	3	https://youtube.com/shorts/wSClub_l5fM?si=mq0SpPcba1W1Uf4t
\.


--
-- Data for Name: blog_postimage; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.blog_postimage (id, post_id, gif, is_main, photo, video) FROM stdin;
13	5		t	blog/posts/photos/photo_2025-02-12_08.54.13.jpeg	
16	3	blog/posts/gifs/gif_python_TE2baHX.gif	t		
14	4		f	blog/posts/photos/BA6lAULI4faLnchzxKkA-p10x_AhgLqjIgu-FmOl3fYyDISwdkk9YeIUpPQz6vmvpzB6j0_rF7TBNg.jpg	
\.


--
-- Data for Name: blog_project; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.blog_project (id, title, slug, description, technologies, github_link, demo_link, featured, created_at, updated_at, category_id, video_url) FROM stdin;
2	MMA Sport Club 2	mma-sport-club-2	Test Portfolio Project 2	Django	http://www.test2.com		f	2025-03-17 09:05:30.809895+00	2025-03-30 18:17:28.890379+00	6	https://youtu.be/btoGNb5sSTQ?si=VebRzxmTLhC2tmlT
1	MMA Sport Club	mma-sport-club	MMA or Mixed Martial Arts is the latest trend in the fitness world across the globe. From its initial days when its practice was limited to a select group, MMA has today become a widely accepted and respected sport that is taught at several extreme sports fitness centres in Byron Bay.\r\n\r\nMMA is a form of extreme sports that prepares you for any situation in life and teaches you how to confront such inimical conditions with confidence and emerge a winner.\r\n\r\nWhen you want to be both physically and mentally fit to take on life’s challenges, it is a must that you undergo regular MMA sessions at an extreme sports academy in Byron Bay.\r\n\r\nAll About MMA\r\n\r\nAs mentioned above, MMA is a style of extreme sports that combines different martial arts into each session. A typical MMA session at an extreme sports fitness centre in Byron Bay comprises both traditional martial art styles and combative sports.\r\n\r\nYou will learn karate, Muay Thai, jiu-jitsu, judo, taekwondo and so on along with boxing, wrestling, kick-boxing and similar physically demanding sports.\r\n\r\nMMA rounds are five-minute long with amateur contests comprising three rounds each. However, professional fights have five rounds in each contest.\r\n\r\nMMA Rules\r\n\r\nMost people wrongly think that since MMA is a combination of several styles, it does not stick to any particular rules and regulations. Nothing can be further from the truth as MMA has several rules that regulate the combats and ensure the safety of participants.\r\n\r\nYou will learn all about such rules during your extreme sports training sessions in Byron Bay such as area of the fighting arena, guidelines on hand wrapping, how to detect fouls and so on.\r\n\r\nThe rules are extremely thorough and absolutely essential for you to know if you really want to understand and appreciate this unique sport.\r\n\r\nMMA has Weight Categories\r\n\r\nJust like boxing or wrestling, MMA has its own weight categories. Your trainer at an extreme sports academy in Byron Bay will tell you all about the weight categories to help you understand where you fit in.\r\n\r\nTypical MMA weight categories are flyweight for up to 125 lbs, bantamweight for between 125 lbs and 135 lbs, featherweight for those between 135 lbs to 145 lbs and lightweight for between 145 lbs to 155 lbs.\r\n\r\nThere are also welterweight for people weighing between 155 lbs to 170 lbs, middleweight for between 170 lbs and 185 lbs and light heavyweight for those between 185 lbs and 205 lbs. Participants who are very bulky and weigh between 205 lbs and 265 lbs fall into the heavyweight category.\r\n\r\nMMA\r\n\r\nhttps://www.ufc.com	Flask			f	2025-03-12 08:43:35.772529+00	2025-03-22 15:21:04.076081+00	5	https://www.youtube.com/shorts/pwhfGgx9AXY?feature=share
\.


--
-- Data for Name: blog_projectimage; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.blog_projectimage (id, project_id, gif, is_main, photo, video) FROM stdin;
8	1	blog/projects/gifs/gif_test_3iVUrFh.gif	f	blog/projects/photos/Снимок_экрана_2025-03-12_в_11_mWGA59h.41.14.png	blog/projects/videos/2025-03-14_09_DPM0TLq.30.48.mp4
9	1		f	blog/projects/photos/photo_2025-03-13_09_gAPO1lg.30.05.jpeg	
10	1		t		blog/projects/videos/bmw_m5_in_color_of_military_vehicle.mp4
11	2	blog/projects/gifs/gif_test_QBm95tb.gif	t	blog/projects/photos/photo_2025-03-13_09_r0YuIfr.30.05.jpeg	blog/projects/videos/mario_nawfal_cyberpunk_2077_on_pc_running_on_a_4090_with_path_.mp4
\.


--
-- Data for Name: blog_testimonial; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.blog_testimonial (id, text, created_at, is_approved, user_id) FROM stdin;
4	Насколько важны отзывы на сайте?\r\nМало просто написать хвалебный отклик. Чтобы он действительно работал и приносил пользу проекту, его структура должна учитывать пользовательский опыт. \r\n\r\nРазмещение положительных отзывов в интернете не означает, что тебе обязательно поверят и сразу купят то, что ты предлагаешь. Почему так? Потому что в шаблонных фразах сразу ощущается обман, а это отталкивает. На это накладывается неправильная подача и отсутствие смысла. Хороший отзыв помогает бизнесу бороться с возражениями и сомнениями потенциальных клиентов, а также может усилить их желание сделать покупку, поскольку в ней люди увидят решение их проблемы или возможность получить желаемое. \r\n\r\nОбрати внимание! Сначала прорабатывается идея, а уже после смысл, содержание и формат подачи.	2025-04-15 21:51:33.210356+00	t	1
5	Главное правило, как написать хорошие отзывы клиентов на сайте\r\nДавай проведем аналогию между откликом и человеком. Какому человеку ты можешь доверять? Искреннему, проявляющему сочувствие и понимание, не путающемуся в деталях, надежному. Что будет, если ты заметишь ноты фальша? Правильно, перестанешь доверять и захочешь прервать контакт с этим человеком. \r\n\r\nС отзывами все происходит аналогично. Почувствовав обман или подвох, потенциальные клиенты будут уходить. Из этого можно сформировать первое и главное правило, по которому должны строиться отзывы клиентов на сайте:\r\n\r\nОтзыв должен быть убедительным, реалистичным, отражающим понимание болей, потребностей и желаний клиентов. 	2025-04-15 21:53:02.347313+00	t	33
6	Почему люди пишут отзывы?\r\nСовершенно понятно, какую выгоду размещение отзывов в интернете приносит бизнесу: подтверждение качества, популярности, репутации. Но вот в чем же польза для тех, кто сам их пишет? На это есть пять причин:\r\n\r\nЗа положительный опыт клиенты таким образом благодарят компанию и помогают ей в развитии.\r\nВозможность повлиять на качество товара, услуги или обслуживания без последствий для себя.\r\nВ случае негативного отзыва покупатели могут выразить свое недовольство качеством или поделиться историей неудачного сотрудничества. \r\nВозможность заработка. Некоторые площадки оплачивают размещение откликов, независимо от их тональности (положительный или негативный). Есть и бизнес, готовый купить отзывы для сайта. \r\nНекоторые компании предлагают за размещение отзывов скидку или подарок. Особенно часто такие предложения есть в интернет-магазинах косметики и одежды. 	2025-04-15 21:53:26.184391+00	t	1
8	Используй числа\r\nУкажи в отзыве значимые для пользователя параметры, которые можно измерить и выразить числом. Например, опиши мощность устройства, сколько времени товар служит без поломок, например, сколько камер в стеклопакете и как быстро его установили. Конкретика избавляет читателей от сомнений, а заодно и служит аккуратной нативной рекламой. Она ценнее, чем субъективное “нравится/не нравится”. \r\n\r\nОбрати внимание! Очень часто упоминание параметров товара, сроков или других численных величин помогают потенциальным клиентам принять решение о покупке. Особенно высоко ценятся пользователями отклики, в которых есть технические параметры, размеры и указывается, что все соответствует заявленным свойствам. \r\n\r\nДобавь подробности и нюансы\r\nЭто мелочи, которые указывают на достоверность отзыва и делают его информативнее. Используй их, описывая не товары, а услуги. Это поможет другим людям оценить качество обслуживания и самих услуг, понять, насколько они им подходят и есть ли в сервисе те аспекты, которые важны для конкретного потребителя. \r\n\r\nХочешь пример? Когда ты подбираешь себе отель или базу отдыха, ты читаешь отклики и на что обращаешь внимание? На такие нюансы, как бронь, возможность заезда без нее, время заселения, скорость обслуживания и пр. \r\n\r\nУкажи плюсы и минусы\r\nМногие маркетплейсы, например, Prom, и сайты-отзовики используют мини-опросники в формах для отзывов. В них пользователи могут указать плюсы и минусы покупки, услуги или же магазина. Когда есть такой опросник, заполняй его обязательно, а если его нет — вручную уточни, что тебе понравилось или не понравилось. \r\n\r\nУ большинства товаров есть и преимущества, и недостатки. Указывая их, ты подводишь читателя к тому, чтобы он принял окончательное решение: либо купить, желая получить преимущества, либо нет. Во втором случае ты предотвращаешь негативный опыт для потенциального покупателя и его будущий плохой отзыв. 	2025-04-15 22:47:52.356914+00	t	1
14	Rrrrdrr	2025-04-18 07:56:19.807794+00	f	33
\.


--
-- Data for Name: default_links; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.default_links (id, language, topic, link) FROM stdin;
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2025-02-03 05:40:27.280228+00	3	Test1	1	[{"added": {}}, {"added": {"name": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f", "object": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f Test1"}}]	1	1
2	2025-02-03 05:42:04.906408+00	4	Test3	1	[{"added": {}}, {"added": {"name": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f", "object": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f Test3"}}]	1	1
3	2025-02-03 06:08:16.919288+00	1	zloy	2	[{"changed": {"name": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f", "object": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f zloy", "fields": ["Website", "Telegram", "GitHub Profile", "Instagram Profile"]}}]	1	1
4	2025-02-03 20:31:29.864419+00	3	Test1	2	[{"changed": {"fields": ["password"]}}]	1	1
5	2025-02-04 05:40:26.916243+00	5	Профиль пользователя test_user1	2	[]	3	1
6	2025-02-04 05:40:58.23496+00	1	Профиль пользователя zloy	2	[{"changed": {"fields": ["Theme preference"]}}]	3	1
7	2025-02-04 05:41:22.619391+00	1	Профиль пользователя zloy	2	[{"changed": {"fields": ["Theme preference"]}}]	3	1
8	2025-02-04 06:46:47.232409+00	4	Test3	2	[{"changed": {"fields": ["password"]}}]	1	1
9	2025-02-04 07:00:01.088366+00	4	Test3	2	[{"changed": {"fields": ["password"]}}]	1	1
10	2025-02-06 20:40:17.946207+00	6	test_user2	2	[{"changed": {"fields": ["password"]}}]	1	1
11	2025-02-06 20:41:53.604482+00	2	Статистика: Задача 1, Пользователь 6	2	[{"changed": {"fields": ["Successful"]}}]	15	1
12	2025-02-07 20:33:13.141554+00	3	Test1	2	[{"changed": {"fields": ["password"]}}]	1	1
13	2025-02-12 05:44:04.449056+00	1	Python (Portfolio)	1	[{"added": {}}]	25	1
14	2025-02-12 05:44:45.706284+00	2	Django (Portfolio)	1	[{"added": {}}]	25	1
15	2025-02-12 05:45:26.472842+00	3	Python Packages (Blog)	1	[{"added": {}}]	25	1
16	2025-02-12 05:47:27.642034+00	1	💡 🔥 Что такое EagleEye?	1	[{"added": {}}]	28	1
17	2025-02-12 05:50:19.052463+00	2	Helium	1	[{"added": {}}]	28	1
18	2025-02-12 05:52:30.77267+00	3	Django аутентификация	1	[{"added": {}}]	28	1
19	2025-02-12 05:53:44.109258+00	2	Django (Blog)	2	[{"changed": {"fields": ["Portfolio Category"]}}]	25	1
20	2025-02-12 05:53:44.111772+00	1	Python (Blog)	2	[{"changed": {"fields": ["Portfolio Category"]}}]	25	1
21	2025-02-12 05:55:09.816135+00	4	Wild Politics	1	[{"added": {}}]	28	1
22	2025-02-12 05:57:03.927579+00	4	Python & JavaScript (Portfolio)	1	[{"added": {}}]	25	1
23	2025-02-12 05:58:11.10672+00	4	Python & JavaScript (Portfolio)	2	[{"changed": {"fields": ["Description"]}}]	25	1
24	2025-02-12 05:58:39.916669+00	5	Flask & Html, CSS (Portfolio)	1	[{"added": {}}]	25	1
25	2025-02-14 02:12:11.50223+00	11	Mr_Fulani (Telegram ID: 975113235)	2	[{"changed": {"fields": ["Username", "Telegram Admin"]}}]	5	1
26	2025-02-17 20:51:40.5166+00	1	zloy	2	[{"changed": {"name": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f", "object": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f zloy", "fields": ["Avatar"]}}]	1	1
27	2025-02-18 04:45:39.013683+00	12	fulani_admin (Telegram ID: 7595062566)	3		5	1
28	2025-02-18 08:45:47.323978+00	17	AbuInternet (Telegram ID: 7827592658)	1	[{"added": {}}]	5	1
29	2025-02-18 22:02:55.080676+00	17	AbuInternet (Telegram ID: 7827592658)	3		5	1
30	2025-02-18 22:09:43.097282+00	19	AbuInternet (Telegram ID: 7827592658)	1	[{"added": {}}]	5	1
31	2025-02-18 23:58:16.380915+00	19	AbuInternet (Telegram ID: 7827592658)	3		5	1
32	2025-02-19 00:13:46.852484+00	21	AbuInternet	3		1	1
33	2025-02-19 01:02:34.921257+00	28	AbuInternet	3		1	1
34	2025-02-19 13:29:34.504064+00	7	Сообщение от Mr_Fulani (2025-02-19 13:28)	2	[{"changed": {"fields": ["Is processed"]}}]	20	1
35	2025-02-19 13:31:03.345885+00	3	Сообщение от AbuInternet (2025-02-19 01:24)	3		20	1
36	2025-02-20 20:50:27.996552+00	1	test question 1	1	[{"added": {}}]	31	1
37	2025-02-20 20:51:04.370848+00	1	answer 1	1	[{"added": {}}]	32	1
38	2025-02-20 20:51:22.462848+00	2	answer 2	1	[{"added": {}}]	32	1
39	2025-02-20 20:51:33.852323+00	3	answer 1	1	[{"added": {}}]	32	1
40	2025-02-20 20:51:45.388908+00	1	answer 3	2	[{"changed": {"fields": ["\\u0422\\u0435\\u043a\\u0441\\u0442 \\u0432\\u0430\\u0440\\u0438\\u0430\\u043d\\u0442\\u0430"]}}]	32	1
41	2025-02-20 20:52:24.528138+00	4	I dont know, but I wont to learn	1	[{"added": {}}]	32	1
42	2025-02-20 21:33:45.903964+00	2	test question 2	1	[{"added": {}}]	31	1
43	2025-02-20 21:34:00.45199+00	3	test question 3	1	[{"added": {}}]	31	1
44	2025-02-20 21:34:55.937143+00	3	answer 1	2	[{"changed": {"fields": ["\\u041e\\u043f\\u0440\\u043e\\u0441"]}}]	32	1
45	2025-02-20 21:35:05.100696+00	2	answer 2	2	[{"changed": {"fields": ["\\u041e\\u043f\\u0440\\u043e\\u0441", "\\u041f\\u0440\\u0430\\u0432\\u0438\\u043b\\u044c\\u043d\\u044b\\u0439 \\u043e\\u0442\\u0432\\u0435\\u0442"]}}]	32	1
46	2025-02-20 21:35:12.434675+00	1	answer 3	2	[{"changed": {"fields": ["\\u041e\\u043f\\u0440\\u043e\\u0441", "\\u041f\\u0440\\u0430\\u0432\\u0438\\u043b\\u044c\\u043d\\u044b\\u0439 \\u043e\\u0442\\u0432\\u0435\\u0442"]}}]	32	1
47	2025-02-22 07:34:21.881781+00	2	Задача 2 (Средний)	3		14	1
48	2025-03-12 06:01:28.358902+00	33	test55	1	[{"added": {}}, {"added": {"name": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f", "object": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f test55"}}]	1	1
49	2025-03-12 06:05:06.680083+00	33	test55	2	[{"changed": {"name": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f", "object": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f test55", "fields": ["Avatar"]}}]	1	1
50	2025-03-12 06:07:51.612588+00	33	test55	2	[{"changed": {"name": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f", "object": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f test55", "fields": ["Total points", "Quizzes completed", "Average score"]}}]	1	1
51	2025-03-12 08:43:35.780815+00	1	MMA Sport Club	1	[{"added": {}}]	29	1
52	2025-03-17 09:04:21.927446+00	6	Django (DRF) (Portfolio)	1	[{"added": {}}]	25	1
53	2025-03-17 09:05:30.812424+00	2	MMA Sport Club 2	1	[{"added": {}}]	29	1
54	2025-03-18 06:14:14.691951+00	1	MMA Sport Club	2	[{"changed": {"fields": ["Description"]}}]	29	1
55	2025-03-18 09:42:05.194258+00	1	MMA Sport Club	2	[{"changed": {"fields": ["Description"]}}]	29	1
56	2025-03-18 09:42:44.028356+00	1	MMA Sport Club	2	[{"changed": {"fields": ["Description"]}}]	29	1
57	2025-03-18 09:43:31.821491+00	1	MMA Sport Club	2	[{"changed": {"fields": ["Description"]}}]	29	1
58	2025-03-19 13:31:12.801024+00	1	MMA Sport Club	2	[{"changed": {"fields": ["Video url"]}}]	29	1
59	2025-03-19 13:33:06.803245+00	2	MMA Sport Club 2	2	[{"changed": {"fields": ["Video url"]}}]	29	1
60	2025-03-19 13:33:42.567924+00	2	MMA Sport Club 2	2	[{"changed": {"fields": ["Video url"]}}]	29	1
61	2025-03-19 13:51:58.636198+00	4	Wild Politics	2	[{"added": {"name": "post image", "object": "PostImage object (1)"}}, {"added": {"name": "post image", "object": "PostImage object (2)"}}]	28	1
62	2025-03-19 13:54:06.247297+00	2	MMA Sport Club 2	2	[{"added": {"name": "project image", "object": "ProjectImage object (1)"}}, {"added": {"name": "project image", "object": "ProjectImage object (2)"}}]	29	1
63	2025-03-19 13:59:10.235648+00	2	MMA Sport Club 2	2	[{"changed": {"fields": ["Video url"]}}]	29	1
64	2025-03-19 14:19:40.01275+00	1	MMA Sport Club	2	[{"changed": {"fields": ["Video url"]}}]	29	1
65	2025-03-19 14:20:29.285979+00	1	MMA Sport Club	2	[{"changed": {"fields": ["Video url"]}}, {"added": {"name": "project image", "object": "ProjectImage object (3)"}}]	29	1
66	2025-03-19 14:21:56.701484+00	1	MMA Sport Club	2	[{"changed": {"fields": ["Video url"]}}]	29	1
67	2025-03-19 14:24:02.577981+00	1	MMA Sport Club	2	[{"changed": {"fields": ["Video url"]}}]	29	1
68	2025-03-21 14:08:29.421321+00	1	MMA Sport Club	2	[{"changed": {"fields": ["Video url"]}}]	29	1
69	2025-03-21 14:50:06.847449+00	3	Django аутентификация	2	[{"added": {"name": "post image", "object": "PostImage object (3)"}}]	28	1
70	2025-03-21 14:50:40.095874+00	3	Django аутентификация	2	[{"added": {"name": "post image", "object": "PostImage object (4)"}}]	28	1
71	2025-03-21 14:51:20.22357+00	3	Django аутентификация	2	[{"changed": {"fields": ["Video url"]}}]	28	1
72	2025-03-21 14:52:18.430489+00	2	Helium	2	[{"changed": {"fields": ["Video url"]}}, {"added": {"name": "post image", "object": "PostImage object (5)"}}, {"added": {"name": "post image", "object": "PostImage object (6)"}}]	28	1
73	2025-03-21 15:06:01.369881+00	3	Django аутентификация	2	[{"changed": {"fields": ["Video url"]}}]	28	1
74	2025-03-21 15:08:10.844287+00	1	💡 🔥 Что такое EagleEye?	2	[{"changed": {"fields": ["Video url"]}}, {"added": {"name": "post image", "object": "PostImage object (7)"}}, {"added": {"name": "post image", "object": "PostImage object (8)"}}]	28	1
75	2025-03-22 09:12:19.117275+00	1	💡 🔥 Что такое EagleEye?	2	[{"changed": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Image for \\ud83d\\udca1 \\ud83d\\udd25 \\u0427\\u0442\\u043e \\u0442\\u0430\\u043a\\u043e\\u0435 EagleEye?", "fields": ["Video"]}}, {"changed": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Image for \\ud83d\\udca1 \\ud83d\\udd25 \\u0427\\u0442\\u043e \\u0442\\u0430\\u043a\\u043e\\u0435 EagleEye?", "fields": ["Video"]}}]	28	1
76	2025-03-22 09:16:34.282618+00	1	💡 🔥 Что такое EagleEye?	2	[{"changed": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Image for \\ud83d\\udca1 \\ud83d\\udd25 \\u0427\\u0442\\u043e \\u0442\\u0430\\u043a\\u043e\\u0435 EagleEye?", "fields": ["Image"]}}]	28	1
77	2025-03-22 09:17:16.753338+00	1	💡 🔥 Что такое EagleEye?	2	[{"changed": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Video/GIF for \\ud83d\\udca1 \\ud83d\\udd25 \\u0427\\u0442\\u043e \\u0442\\u0430\\u043a\\u043e\\u0435 EagleEye?", "fields": ["Image"]}}]	28	1
78	2025-03-22 09:18:15.195961+00	1	💡 🔥 Что такое EagleEye?	2	[]	28	1
79	2025-03-22 09:19:09.042865+00	1	💡 🔥 Что такое EagleEye?	2	[{"changed": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Media for \\ud83d\\udca1 \\ud83d\\udd25 \\u0427\\u0442\\u043e \\u0442\\u0430\\u043a\\u043e\\u0435 EagleEye?", "fields": ["Video"]}}]	28	1
80	2025-03-22 09:19:43.025928+00	1	💡 🔥 Что такое EagleEye?	2	[]	28	1
81	2025-03-22 09:20:43.391472+00	1	💡 🔥 Что такое EagleEye?	2	[]	28	1
82	2025-03-22 09:21:22.048207+00	1	💡 🔥 Что такое EagleEye?	2	[{"changed": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Image for \\ud83d\\udca1 \\ud83d\\udd25 \\u0427\\u0442\\u043e \\u0442\\u0430\\u043a\\u043e\\u0435 EagleEye?", "fields": ["Image"]}}]	28	1
83	2025-03-22 09:22:54.094234+00	1	💡 🔥 Что такое EagleEye?	3		28	1
84	2025-03-22 09:24:52.333501+00	2	MMA Sport Club 2	2	[{"added": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Image for MMA Sport Club 2"}}]	29	1
85	2025-03-22 09:25:24.577598+00	2	MMA Sport Club 2	2	[{"changed": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Image for MMA Sport Club 2", "fields": ["Video"]}}]	29	1
86	2025-03-22 09:25:59.02689+00	2	MMA Sport Club 2	2	[{"changed": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Image for MMA Sport Club 2", "fields": ["Video"]}}]	29	1
87	2025-03-22 09:26:26.499064+00	2	MMA Sport Club 2	2	[{"changed": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Image for MMA Sport Club 2", "fields": ["Video"]}}]	29	1
88	2025-03-22 13:00:34.153797+00	5	Скачиваем аудио с YouTube	1	[{"added": {}}, {"added": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Image for \\u0421\\u043a\\u0430\\u0447\\u0438\\u0432\\u0430\\u0435\\u043c \\u0430\\u0443\\u0434\\u0438\\u043e \\u0441 YouTube"}}, {"added": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Image for \\u0421\\u043a\\u0430\\u0447\\u0438\\u0432\\u0430\\u0435\\u043c \\u0430\\u0443\\u0434\\u0438\\u043e \\u0441 YouTube"}}]	28	1
89	2025-03-22 13:01:17.116413+00	5	Скачиваем аудио с YouTube	2	[]	28	1
90	2025-03-22 13:09:28.555197+00	5	Скачиваем аудио с YouTube	2	[]	28	1
91	2025-03-22 13:41:02.283386+00	5	Скачиваем аудио с YouTube	2	[{"changed": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Video/GIF for \\u0421\\u043a\\u0430\\u0447\\u0438\\u0432\\u0430\\u0435\\u043c \\u0430\\u0443\\u0434\\u0438\\u043e \\u0441 YouTube", "fields": ["\\u041c\\u0435\\u0434\\u0438\\u0430 \\u0434\\u043b\\u044f \\u0441\\u0442\\u0440\\u0430\\u043d\\u0438\\u0446\\u044b \\u043f\\u043e\\u0434\\u0440\\u043e\\u0431\\u043d\\u043e\\u0441\\u0442\\u0435\\u0439"]}}]	28	1
119	2025-03-22 15:30:03.410591+00	5	Скачиваем аудио с YouTube	2	[{"added": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Photo for \\u0421\\u043a\\u0430\\u0447\\u0438\\u0432\\u0430\\u0435\\u043c \\u0430\\u0443\\u0434\\u0438\\u043e \\u0441 YouTube"}}]	28	1
92	2025-03-22 13:42:33.388148+00	2	MMA Sport Club 2	2	[{"changed": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Image for MMA Sport Club 2", "fields": ["\\u0418\\u0437\\u043e\\u0431\\u0440\\u0430\\u0436\\u0435\\u043d\\u0438\\u0435 \\u0434\\u043b\\u044f \\u0433\\u043b\\u0430\\u0432\\u043d\\u043e\\u0439 \\u0441\\u0442\\u0440\\u0430\\u043d\\u0438\\u0446\\u044b"]}}]	29	1
93	2025-03-22 13:43:19.157099+00	2	MMA Sport Club 2	2	[{"changed": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Image for MMA Sport Club 2", "fields": ["\\u0418\\u0437\\u043e\\u0431\\u0440\\u0430\\u0436\\u0435\\u043d\\u0438\\u0435 \\u0434\\u043b\\u044f \\u0433\\u043b\\u0430\\u0432\\u043d\\u043e\\u0439 \\u0441\\u0442\\u0440\\u0430\\u043d\\u0438\\u0446\\u044b"]}}]	29	1
94	2025-03-22 14:14:25.284441+00	2	MMA Sport Club 2	2	[{"deleted": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Image for MMA Sport Club 2"}}, {"deleted": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Image for MMA Sport Club 2"}}, {"deleted": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Media for MMA Sport Club 2"}}]	29	1
95	2025-03-22 14:34:59.863531+00	2	MMA Sport Club 2	2	[{"added": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Photo for MMA Sport Club 2"}}]	29	1
96	2025-03-22 14:37:22.648424+00	2	MMA Sport Club 2	2	[{"added": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Photo for MMA Sport Club 2"}}, {"added": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Photo for MMA Sport Club 2"}}]	29	1
97	2025-03-22 14:38:26.292198+00	2	MMA Sport Club 2	2	[{"deleted": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Photo for MMA Sport Club 2"}}]	29	1
98	2025-03-22 15:00:28.456705+00	2	MMA Sport Club 2	2	[]	29	1
99	2025-03-22 15:01:23.67653+00	2	MMA Sport Club 2	2	[{"deleted": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Photo for MMA Sport Club 2"}}, {"deleted": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Photo for MMA Sport Club 2"}}]	29	1
100	2025-03-22 15:01:40.242153+00	1	MMA Sport Club	2	[]	29	1
101	2025-03-22 15:02:34.797567+00	2	MMA Sport Club 2	2	[]	29	1
102	2025-03-22 15:02:51.765881+00	1	MMA Sport Club	2	[{"deleted": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Media for MMA Sport Club"}}]	29	1
103	2025-03-22 15:03:48.712672+00	1	MMA Sport Club	2	[{"added": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Photo for MMA Sport Club"}}]	29	1
104	2025-03-22 15:04:17.846484+00	1	MMA Sport Club	2	[{"changed": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Photo for MMA Sport Club", "fields": ["GIF (\\u0430\\u043d\\u0438\\u043c\\u0430\\u0446\\u0438\\u044f)"]}}]	29	1
105	2025-03-22 15:05:06.187898+00	1	MMA Sport Club	2	[{"changed": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Photo for MMA Sport Club", "fields": ["GIF (\\u0430\\u043d\\u0438\\u043c\\u0430\\u0446\\u0438\\u044f)"]}}]	29	1
106	2025-03-22 15:18:15.493367+00	1	MMA Sport Club	2	[{"changed": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Photo for MMA Sport Club", "fields": ["\\u0413\\u043b\\u0430\\u0432\\u043d\\u043e\\u0435 \\u0438\\u0437\\u043e\\u0431\\u0440\\u0430\\u0436\\u0435\\u043d\\u0438\\u0435"]}}]	29	1
107	2025-03-22 15:18:52.386799+00	1	MMA Sport Club	2	[{"added": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Photo for MMA Sport Club"}}]	29	1
108	2025-03-22 15:19:57.300835+00	1	MMA Sport Club	2	[{"added": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "GIF for MMA Sport Club"}}, {"changed": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Photo for MMA Sport Club", "fields": ["\\u0413\\u043b\\u0430\\u0432\\u043d\\u043e\\u0435 \\u0438\\u0437\\u043e\\u0431\\u0440\\u0430\\u0436\\u0435\\u043d\\u0438\\u0435"]}}]	29	1
109	2025-03-22 15:20:39.801588+00	1	MMA Sport Club	2	[{"changed": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Media for MMA Sport Club", "fields": ["GIF (\\u0430\\u043d\\u0438\\u043c\\u0430\\u0446\\u0438\\u044f)"]}}]	29	1
110	2025-03-22 15:21:04.081762+00	1	MMA Sport Club	2	[{"changed": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Video for MMA Sport Club", "fields": ["\\u0412\\u0438\\u0434\\u0435\\u043e (MP4)"]}}]	29	1
111	2025-03-22 15:21:57.036652+00	5	Скачиваем аудио с YouTube	2	[{"deleted": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Media for \\u0421\\u043a\\u0430\\u0447\\u0438\\u0432\\u0430\\u0435\\u043c \\u0430\\u0443\\u0434\\u0438\\u043e \\u0441 YouTube"}}]	28	1
112	2025-03-22 15:22:08.87109+00	5	Скачиваем аудио с YouTube	2	[{"deleted": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Media for \\u0421\\u043a\\u0430\\u0447\\u0438\\u0432\\u0430\\u0435\\u043c \\u0430\\u0443\\u0434\\u0438\\u043e \\u0441 YouTube"}}]	28	1
113	2025-03-22 15:22:34.401825+00	4	Wild Politics	2	[{"deleted": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Media for Wild Politics"}}, {"deleted": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Media for Wild Politics"}}]	28	1
114	2025-03-22 15:22:40.290498+00	4	Wild Politics	2	[]	28	1
115	2025-03-22 15:22:48.543305+00	3	Django аутентификация	2	[{"deleted": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Media for Django \\u0430\\u0443\\u0442\\u0435\\u043d\\u0442\\u0438\\u0444\\u0438\\u043a\\u0430\\u0446\\u0438\\u044f"}}, {"deleted": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Media for Django \\u0430\\u0443\\u0442\\u0435\\u043d\\u0442\\u0438\\u0444\\u0438\\u043a\\u0430\\u0446\\u0438\\u044f"}}]	28	1
116	2025-03-22 15:22:57.36966+00	2	Helium	2	[{"deleted": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Media for Helium"}}, {"deleted": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Media for Helium"}}]	28	1
117	2025-03-22 15:24:33.07092+00	5	Скачиваем аудио с YouTube	2	[{"added": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Photo for \\u0421\\u043a\\u0430\\u0447\\u0438\\u0432\\u0430\\u0435\\u043c \\u0430\\u0443\\u0434\\u0438\\u043e \\u0441 YouTube"}}]	28	1
118	2025-03-22 15:26:04.947154+00	5	Скачиваем аудио с YouTube	2	[{"added": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Photo for \\u0421\\u043a\\u0430\\u0447\\u0438\\u0432\\u0430\\u0435\\u043c \\u0430\\u0443\\u0434\\u0438\\u043e \\u0441 YouTube"}}]	28	1
154	2025-04-09 00:08:05.406536+00	6	Профиль пользователя test_user2	2	[{"changed": {"fields": ["Location"]}}]	3	1
120	2025-03-22 15:35:43.782953+00	2	MMA Sport Club 2	2	[{"added": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430", "object": "Photo for MMA Sport Club 2"}}]	29	1
121	2025-03-22 15:43:06.42202+00	5	Скачиваем аудио с YouTube	2	[{"changed": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Photo for \\u0421\\u043a\\u0430\\u0447\\u0438\\u0432\\u0430\\u0435\\u043c \\u0430\\u0443\\u0434\\u0438\\u043e \\u0441 YouTube", "fields": ["\\u0412\\u0438\\u0434\\u0435\\u043e (MP4)"]}}]	28	1
122	2025-03-22 15:43:37.530641+00	5	Скачиваем аудио с YouTube	2	[{"changed": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Photo for \\u0421\\u043a\\u0430\\u0447\\u0438\\u0432\\u0430\\u0435\\u043c \\u0430\\u0443\\u0434\\u0438\\u043e \\u0441 YouTube", "fields": ["\\u0412\\u0438\\u0434\\u0435\\u043e (MP4)"]}}]	28	1
123	2025-03-30 18:17:28.891758+00	2	MMA Sport Club 2	2	[{"changed": {"fields": ["\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430 \\u043d\\u0430 \\u0432\\u0438\\u0434\\u0435\\u043e"]}}]	29	1
124	2025-03-30 18:32:35.574008+00	4	Wild Politics	2	[{"changed": {"fields": ["\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430 \\u043d\\u0430 \\u0432\\u0438\\u0434\\u0435\\u043e"]}}, {"added": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Photo for Wild Politics"}}]	28	1
125	2025-04-04 01:33:45.53019+00	1	Тестовое название (Главная страница)	1	[{"added": {}}]	40	1
126	2025-04-04 01:35:14.369821+00	2	Тестовое название видео (Страница "Обо мне")	1	[{"added": {}}]	40	1
127	2025-04-04 01:38:09.779384+00	1	Тестовое название (Главная страница)	2	[{"changed": {"fields": ["\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430 \\u043d\\u0430 YouTube"]}}]	40	1
128	2025-04-04 03:34:47.340702+00	5	Подписка fulani_admin на Golang EN (-1002301205149) (inactive)	2	[{"changed": {"fields": ["Subscription status", "Unsubscribed at"]}}]	6	1
129	2025-04-04 03:35:54.493016+00	5	Подписка fulani_admin на Golang EN (-1002301205149) (active)	2	[{"changed": {"fields": ["Subscription status"]}}]	6	1
130	2025-04-04 03:55:39.68255+00	1	Тестовое название (Главная страница)	2	[{"changed": {"fields": ["\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430 \\u043d\\u0430 YouTube"]}}]	40	1
131	2025-04-04 04:21:27.133091+00	2	Тестовое название видео (Страница "Обо мне")	2	[{"changed": {"fields": ["\\u041b\\u043e\\u043a\\u0430\\u043b\\u044c\\u043d\\u044b\\u0439 \\u0432\\u0438\\u0434\\u0435\\u043e\\u0444\\u0430\\u0439\\u043b"]}}]	40	1
132	2025-04-04 04:22:23.909683+00	1	Тестовое название (Главная страница)	2	[{"changed": {"fields": ["\\u041b\\u043e\\u043a\\u0430\\u043b\\u044c\\u043d\\u044b\\u0439 \\u0432\\u0438\\u0434\\u0435\\u043e\\u0444\\u0430\\u0439\\u043b"]}}]	40	1
133	2025-04-04 04:22:41.85702+00	1	Тестовое название (Главная страница)	2	[{"changed": {"fields": ["\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430 \\u043d\\u0430 YouTube"]}}]	40	1
134	2025-04-04 04:35:43.863358+00	1	Тестовое название (Главная страница)	2	[{"changed": {"fields": ["\\u041b\\u043e\\u043a\\u0430\\u043b\\u044c\\u043d\\u044b\\u0439 \\u0432\\u0438\\u0434\\u0435\\u043e\\u0444\\u0430\\u0439\\u043b"]}}]	40	1
135	2025-04-04 04:44:13.119881+00	1	Тестовое название (Главная страница)	2	[{"changed": {"fields": ["GIF-\\u0444\\u0430\\u0439\\u043b"]}}]	40	1
136	2025-04-04 04:44:33.219595+00	1	Тестовое название (Главная страница)	2	[{"changed": {"fields": ["\\u041b\\u043e\\u043a\\u0430\\u043b\\u044c\\u043d\\u044b\\u0439 \\u0432\\u0438\\u0434\\u0435\\u043e\\u0444\\u0430\\u0439\\u043b"]}}]	40	1
137	2025-04-04 04:53:09.315023+00	1	Тестовое название (Главная страница)	2	[{"changed": {"fields": ["\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430 \\u043d\\u0430 YouTube", "GIF-\\u0444\\u0430\\u0439\\u043b"]}}]	40	1
138	2025-04-04 05:03:29.283531+00	2	Тестовое название видео (Страница "Обо мне")	2	[{"changed": {"fields": ["\\u041b\\u043e\\u043a\\u0430\\u043b\\u044c\\u043d\\u044b\\u0439 \\u0432\\u0438\\u0434\\u0435\\u043e\\u0444\\u0430\\u0439\\u043b"]}}]	40	1
139	2025-04-04 05:04:09.548772+00	2	Тестовое название видео (Страница "Обо мне")	3		40	1
140	2025-04-05 22:16:12.892595+00	32	Профиль пользователя Test11	2	[]	3	1
141	2025-04-05 22:18:46.141636+00	32	Test11	2	[{"changed": {"fields": ["password"]}}]	1	1
142	2025-04-05 23:21:04.312927+00	3	Видео Био (Страница "Обо мне")	1	[{"added": {}}]	40	1
143	2025-04-06 01:59:48.349145+00	3	Видео Био (Страница "Обо мне")	3		40	1
144	2025-04-06 01:59:48.349214+00	1	Тестовое название (Главная страница)	3		40	1
145	2025-04-06 23:10:16.594563+00	29	AbuInternet	2	[{"changed": {"name": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f", "object": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f AbuInternet", "fields": ["Instagram Profile"]}}]	1	1
146	2025-04-06 23:13:55.683837+00	1	zloy	2	[{"changed": {"name": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f", "object": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f zloy", "fields": ["Instagram Profile"]}}]	1	1
147	2025-04-07 02:38:38.710942+00	4	Видео Био (Главная страница)	1	[{"added": {}}]	40	1
148	2025-04-07 02:40:15.989613+00	4	Видео Био (Главная страница)	2	[{"changed": {"fields": ["GIF-\\u0444\\u0430\\u0439\\u043b"]}}]	40	1
149	2025-04-07 02:40:32.23237+00	4	Видео Био (Главная страница)	2	[{"changed": {"fields": ["\\u041f\\u043e\\u0440\\u044f\\u0434\\u043e\\u043a \\u043e\\u0442\\u043e\\u0431\\u0440\\u0430\\u0436\\u0435\\u043d\\u0438\\u044f"]}}]	40	1
150	2025-04-07 02:40:56.635914+00	4	Видео Био (Главная страница)	2	[{"changed": {"fields": ["\\u041f\\u043e\\u0440\\u044f\\u0434\\u043e\\u043a \\u043e\\u0442\\u043e\\u0431\\u0440\\u0430\\u0436\\u0435\\u043d\\u0438\\u044f"]}}]	40	1
151	2025-04-07 02:41:33.620318+00	4	Видео Био (Главная страница)	2	[{"changed": {"fields": ["\\u041b\\u043e\\u043a\\u0430\\u043b\\u044c\\u043d\\u044b\\u0439 \\u0432\\u0438\\u0434\\u0435\\u043e\\u0444\\u0430\\u0439\\u043b", "\\u041f\\u043e\\u0440\\u044f\\u0434\\u043e\\u043a \\u043e\\u0442\\u043e\\u0431\\u0440\\u0430\\u0436\\u0435\\u043d\\u0438\\u044f"]}}]	40	1
152	2025-04-07 23:24:53.70794+00	34	fulani_admin	2	[{"added": {"name": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f", "object": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f fulani_admin"}}]	1	1
153	2025-04-07 23:25:46.843059+00	31	Mr_Fulani	2	[{"added": {"name": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f", "object": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f Mr_Fulani"}}]	1	1
155	2025-04-09 00:09:10.321555+00	1	Профиль пользователя zloy	2	[{"changed": {"fields": ["Location", "Telegram"]}}]	3	1
156	2025-04-09 03:18:03.663219+00	7	Статистика: Задача 12, Пользователь 1	2	[{"changed": {"fields": ["Successful"]}}]	15	1
157	2025-04-09 07:59:31.187889+00	36	test44	2	[{"changed": {"fields": ["Last login"]}}, {"changed": {"name": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f", "object": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f test44", "fields": ["Location", "Birth date", "Telegram", "Instagram Profile", "Total points", "Quizzes completed", "Average score", "Favorite category"]}}]	1	1
190	2025-04-09 14:39:10.157338+00	3	Iqro (-1001943185084)	1	[{"added": {}}]	24	1
191	2025-04-09 14:40:16.329846+00	3	Java (-1001943185084)	2	[{"changed": {"fields": ["Group name"]}}]	24	1
192	2025-04-09 14:40:29.529394+00	3	Java RU (-1001943185084)	2	[{"changed": {"fields": ["Group name"]}}]	24	1
193	2025-04-09 14:50:20.792479+00	3	Java RU (-1001943185084)	2	[{"changed": {"fields": ["Username"]}}]	24	1
194	2025-04-11 03:33:50.173354+00	1	Задача 1 (Средний)	3		14	1
195	2025-04-11 05:51:52.849577+00	3	Java RU (-1001943185084)	2	[{"changed": {"fields": ["Topic id"]}}]	24	1
196	2025-04-11 05:53:25.298529+00	3	Java RU (-1001943185084)	2	[]	24	1
197	2025-04-11 06:55:20.464806+00	4	Задача 4 (Средний)	3		14	1
198	2025-04-11 17:58:01.459962+00	4	Easy English (-1001973453218)	3		24	1
199	2025-04-13 00:40:17.133271+00	33	Профиль пользователя test55	2	[]	3	1
200	2025-04-13 23:46:42.196498+00	2	Helium	2	[{"added": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Video for Helium"}}]	28	1
201	2025-04-13 23:47:05.752978+00	3	Django аутентификация	2	[{"added": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "GIF for Django \\u0430\\u0443\\u0442\\u0435\\u043d\\u0442\\u0438\\u0444\\u0438\\u043a\\u0430\\u0446\\u0438\\u044f"}}]	28	1
202	2025-04-14 04:27:38.886923+00	2	Helium	2	[{"deleted": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Video for Helium"}}]	28	1
203	2025-04-14 04:27:45.034351+00	3	Django аутентификация	2	[]	28	1
204	2025-04-14 04:29:05.062868+00	5	Скачиваем аудио с YouTube	2	[{"deleted": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Photo for \\u0421\\u043a\\u0430\\u0447\\u0438\\u0432\\u0430\\u0435\\u043c \\u0430\\u0443\\u0434\\u0438\\u043e \\u0441 YouTube"}}, {"deleted": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Photo for \\u0421\\u043a\\u0430\\u0447\\u0438\\u0432\\u0430\\u0435\\u043c \\u0430\\u0443\\u0434\\u0438\\u043e \\u0441 YouTube"}}]	28	1
205	2025-04-14 04:29:21.921432+00	4	Wild Politics	2	[]	28	1
206	2025-04-14 04:30:09.719218+00	4	Wild Politics	2	[{"changed": {"name": "\\u041c\\u0435\\u0434\\u0438\\u0430 \\u043f\\u043e\\u0441\\u0442\\u0430", "object": "Photo for Wild Politics", "fields": ["GIF (\\u0430\\u043d\\u0438\\u043c\\u0430\\u0446\\u0438\\u044f)", "\\u0412\\u0438\\u0434\\u0435\\u043e (MP4)", "\\u0413\\u043b\\u0430\\u0432\\u043d\\u043e\\u0435 \\u0438\\u0437\\u043e\\u0431\\u0440\\u0430\\u0436\\u0435\\u043d\\u0438\\u0435"]}}]	28	1
207	2025-04-14 06:46:11.960597+00	37	Message from zloy to Test3	3		26	1
208	2025-04-14 06:46:11.960634+00	36	Message from zloy to Test3	3		26	1
209	2025-04-14 06:46:11.960645+00	35	Message from zloy to test55	3		26	1
210	2025-04-14 06:46:11.960653+00	34	Message from zloy to test55	3		26	1
211	2025-04-14 06:46:11.96066+00	32	Message from zloy to test55	3		26	1
212	2025-04-14 06:46:11.960668+00	33	Message from zloy to test55	3		26	1
213	2025-04-14 06:46:11.960676+00	31	Message from test55 to zloy	3		26	1
214	2025-04-14 06:46:11.960686+00	30	Message from test55 to zloy	3		26	1
215	2025-04-14 06:46:11.960694+00	29	Message from zloy to test55	3		26	1
216	2025-04-14 06:46:11.960702+00	28	Message from zloy to test55	3		26	1
217	2025-04-14 06:46:11.96071+00	27	Message from zloy to test55	3		26	1
218	2025-04-14 06:46:11.960717+00	26	Message from zloy to test55	3		26	1
219	2025-04-14 06:46:11.960725+00	24	Message from zloy to test55	3		26	1
220	2025-04-14 06:46:11.960731+00	25	Message from zloy to test55	3		26	1
221	2025-04-14 06:46:11.960738+00	23	Message from zloy to test55	3		26	1
222	2025-04-14 06:46:11.960745+00	22	Message from test55 to zloy	3		26	1
223	2025-04-14 06:46:11.960752+00	21	Message from test55 to zloy	3		26	1
224	2025-04-14 06:46:11.960759+00	20	Message from zloy to test55	3		26	1
225	2025-04-14 06:46:11.960766+00	19	Message from zloy to test55	3		26	1
226	2025-04-14 06:46:11.960773+00	18	Message from zloy to test55	3		26	1
227	2025-04-14 06:46:11.960781+00	16	Message from zloy to test55	3		26	1
228	2025-04-14 06:46:11.960787+00	15	Message from zloy to Test1	3		26	1
229	2025-04-14 06:46:11.960794+00	14	Message from zloy to test_user2	3		26	1
230	2025-04-14 06:46:11.9608+00	13	Message from Test1 to zloy	3		26	1
231	2025-04-14 06:46:11.960807+00	12	Message from Test1 to test_user1	3		26	1
232	2025-04-14 06:46:11.960814+00	11	Message from test_user2 to Test1	3		26	1
233	2025-04-14 06:46:11.96082+00	10	Message from test_user2 to zloy	3		26	1
234	2025-04-14 06:46:24.08874+00	39	Message from zloy to test55	3		26	1
235	2025-04-14 06:46:24.088813+00	38	Message from zloy to test55	3		26	1
236	2025-04-14 07:07:43.019725+00	47	Message from zloy to test55	3		26	1
237	2025-04-14 07:07:43.019757+00	46	Message from zloy to test55	3		26	1
238	2025-04-14 07:07:43.019767+00	45	Message from test55 to zloy	3		26	1
239	2025-04-14 07:07:43.019774+00	44	Message from test55 to zloy	3		26	1
240	2025-04-14 07:07:43.019782+00	43	Message from zloy to test55	3		26	1
241	2025-04-14 07:07:43.019789+00	42	Message from zloy to test55	3		26	1
242	2025-04-14 07:07:43.019797+00	41	Message from test55 to zloy	3		26	1
243	2025-04-14 07:07:43.019807+00	40	Message from test55 to Test1	3		26	1
244	2025-04-14 08:11:58.219494+00	60	Message from zloy to test55	3		26	1
245	2025-04-14 08:11:58.219556+00	59	Message from zloy to test55	3		26	1
246	2025-04-14 08:11:58.219582+00	58	Message from zloy to test55	3		26	1
247	2025-04-14 08:11:58.219608+00	57	Message from zloy to Test1	3		26	1
248	2025-04-14 08:11:58.219638+00	56	Message from zloy to test55	3		26	1
249	2025-04-14 08:11:58.219666+00	55	Message from test55 to zloy	3		26	1
250	2025-04-14 08:11:58.219693+00	54	Message from test55 to zloy	3		26	1
251	2025-04-14 08:11:58.219733+00	53	Message from zloy to test55	3		26	1
252	2025-04-14 08:11:58.219748+00	52	Message from test55 to zloy	3		26	1
253	2025-04-14 08:11:58.219759+00	51	Message from zloy to test55	3		26	1
254	2025-04-14 08:11:58.219771+00	50	Message from zloy to test55	3		26	1
255	2025-04-14 08:11:58.219783+00	49	Message from test55 to zloy	3		26	1
256	2025-04-14 08:11:58.219795+00	48	Message from zloy to test55	3		26	1
257	2025-04-14 10:27:07.613923+00	81	Message from zloy to test_user1	3		26	1
258	2025-04-14 10:27:07.613952+00	80	Message from test55 to zloy	3		26	1
259	2025-04-14 10:27:07.613965+00	79	Message from zloy to test55	3		26	1
260	2025-04-14 10:27:07.613977+00	78	Message from zloy to test55	3		26	1
261	2025-04-14 10:27:07.613988+00	70	Message from zloy to test55	3		26	1
262	2025-04-14 10:27:07.613999+00	68	Message from zloy to test55	3		26	1
263	2025-04-14 10:27:07.61401+00	67	Message from zloy to test55	3		26	1
264	2025-04-14 10:27:07.614026+00	66	Message from zloy to test55	3		26	1
265	2025-04-14 10:27:07.614038+00	65	Message from test55 to zloy	3		26	1
266	2025-04-14 10:27:07.614049+00	64	Message from zloy to test55	3		26	1
267	2025-04-14 10:27:07.61406+00	63	Message from zloy to test55	3		26	1
268	2025-04-14 10:27:07.61407+00	62	Message from test55 to zloy	3		26	1
269	2025-04-14 10:27:07.614081+00	61	Message from zloy to test55	3		26	1
270	2025-04-14 10:46:29.353737+00	88	Message from zloy to test55	3		26	1
271	2025-04-14 10:46:29.353856+00	87	Message from zloy to Mr_Fulani	3		26	1
272	2025-04-14 10:46:29.353872+00	86	Message from test55 to Test3	3		26	1
273	2025-04-14 10:46:29.353884+00	83	Message from zloy to Mr_Fulani	3		26	1
274	2025-04-15 09:28:04.241002+00	5	Test about (Страница "Обо мне")	1	[{"added": {}}]	40	1
275	2025-04-15 09:36:54.019207+00	5	Test about (Страница "Обо мне")	3		40	1
276	2025-04-15 09:38:43.628982+00	6	test about me video (Страница "Обо мне")	1	[{"added": {}}]	40	1
277	2025-04-15 19:15:25.688591+00	6	test about me video (Страница "Обо мне")	3		40	1
278	2025-04-15 20:23:07.718402+00	2	Отзыв от test55	2	[{"changed": {"fields": ["Is approved"]}}]	41	1
279	2025-04-15 20:23:19.844081+00	1	Отзыв от test55	2	[{"changed": {"fields": ["Is approved"]}}]	41	1
280	2025-04-15 20:31:46.689406+00	3	Отзыв от zloy	2	[{"changed": {"fields": ["Is approved"]}}]	41	1
281	2025-04-15 21:51:43.553463+00	4	Отзыв от zloy	2	[{"changed": {"fields": ["Text", "Is approved"]}}]	41	1
282	2025-04-15 21:52:35.527158+00	3	Отзыв от zloy	3		41	1
283	2025-04-15 21:52:35.527189+00	2	Отзыв от test55	3		41	1
284	2025-04-15 21:52:35.527203+00	1	Отзыв от test55	3		41	1
285	2025-04-16 04:55:21.602387+00	13	Отзыв от zloy	2	[{"changed": {"fields": ["\\u0422\\u0435\\u043a\\u0441\\u0442 \\u043e\\u0442\\u0437\\u044b\\u0432\\u0430"]}}]	41	1
286	2025-04-16 05:46:30.765534+00	13	Отзыв от zloy	3		41	1
287	2025-04-16 05:46:30.765566+00	10	Отзыв от zloy	3		41	1
288	2025-04-16 05:46:30.765579+00	9	Отзыв от zloy	3		41	1
289	2025-04-16 05:46:30.765591+00	11	Отзыв от AbuInternet	3		41	1
290	2025-04-16 05:46:30.765602+00	12	Отзыв от test55	3		41	1
291	2025-04-16 05:50:58.169427+00	7	Отзыв от zloy	3		41	1
292	2025-04-18 12:57:18.571403+00	7	Fast API (Portfolio)	1	[{"added": {}}]	25	1
293	2025-04-18 12:57:41.774762+00	7	Fast API (Blog)	2	[{"changed": {"fields": ["\\u041a\\u0430\\u0442\\u0435\\u0433\\u043e\\u0440\\u0438\\u044f \\u043f\\u043e\\u0440\\u0442\\u0444\\u043e\\u043b\\u0438\\u043e"]}}]	25	1
294	2025-04-19 12:59:42.137239+00	38	Zloy	2	[{"changed": {"fields": ["password"]}}]	1	1
295	2025-04-19 14:50:03.199182+00	6	test_user2	2	[{"changed": {"name": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f", "object": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f test_user2", "fields": ["Website"]}}]	1	1
296	2025-04-19 15:01:35.430308+00	6	test_user2	2	[{"changed": {"name": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f", "object": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f test_user2", "fields": ["Facebook Profile"]}}]	1	1
297	2025-04-19 15:34:21.66478+00	6	test_user2	2	[{"changed": {"fields": ["Email"]}}, {"changed": {"name": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f", "object": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f test_user2", "fields": ["Facebook Profile"]}}]	1	1
298	2025-04-21 03:24:16.726619+00	5	Easy English (-1001973453218)	2	[{"changed": {"fields": ["Username"]}}]	24	1
299	2025-04-21 03:28:34.691536+00	5	Easy English (-1001973453218)	2	[{"changed": {"fields": ["Username"]}}]	24	1
300	2025-04-21 14:48:22.440873+00	38	Профиль пользователя Zloy	2	[]	3	1
301	2025-04-22 07:13:09.145382+00	33	Профиль пользователя test55	2	[{"changed": {"fields": ["Bio"]}}]	3	1
302	2025-04-22 07:14:53.577235+00	33	Профиль пользователя test55	2	[{"changed": {"fields": ["Location", "Birth date"]}}]	3	1
303	2025-04-24 08:08:51.591418+00	29	AbuInternet	2	[{"changed": {"fields": ["password"]}}]	1	1
304	2025-04-24 08:09:49.276799+00	29	AbuInternet	2	[{"changed": {"fields": ["password"]}}]	1	1
305	2025-04-24 08:12:32.937579+00	33	Профиль пользователя test55	2	[{"changed": {"fields": ["GitHub Profile"]}}]	3	1
306	2025-04-24 08:14:21.308256+00	33	Профиль пользователя test55	2	[{"changed": {"fields": ["Bio"]}}]	3	1
307	2025-04-24 08:21:59.357629+00	33	Профиль пользователя test55	2	[{"changed": {"fields": ["Bio"]}}]	3	1
308	2025-04-24 08:52:13.86262+00	32	Test11	2	[{"changed": {"fields": ["password"]}}]	1	1
309	2025-04-24 12:06:40.70297+00	32	Test11	2	[{"changed": {"name": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f", "object": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f Test11", "fields": ["Birth date"]}}]	1	1
310	2025-04-24 12:07:09.007837+00	32	Test11	2	[{"changed": {"fields": ["First name", "Last name"]}}]	1	1
311	2025-04-24 13:59:15.531599+00	42	zloy_root	2	[{"changed": {"name": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f", "object": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f zloy_root", "fields": ["Theme preference"]}}]	1	1
312	2025-04-24 13:59:38.88637+00	42	zloy_root	2	[{"changed": {"name": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f", "object": "\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f zloy_root", "fields": ["Theme preference"]}}]	1	1
313	2025-04-26 11:39:16.562917+00	24	Java - Collections - List	3		19	1
314	2025-04-26 12:17:48.684427+00	36	Java - Коллекции	3		19	1
315	2025-04-26 13:17:06.744813+00	20	Golang - JSON Encoding-Decoding	2	[{"changed": {"fields": ["Name"]}}]	19	1
316	2025-04-26 13:43:41.954791+00	11	Задача 11 (Средний)	3		14	1
317	2025-04-26 13:45:10.26089+00	32	Задача 32 (Легкий)	3		14	1
\.


--
-- Data for Name: django_admins; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.django_admins (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined, phone_number, language, is_telegram_admin, is_django_admin, is_super_admin) FROM stdin;
\.


--
-- Data for Name: django_admins_groups; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.django_admins_groups (id, djangoadmin_id, group_id) FROM stdin;
\.


--
-- Data for Name: django_admins_user_permissions; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.django_admins_user_permissions (id, djangoadmin_id, permission_id) FROM stdin;
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	accounts	customuser
2	accounts	djangoadmin
3	accounts	profile
4	accounts	superadmin
5	accounts	telegramadmin
6	accounts	userchannelsubscription
7	authtoken	token
8	authtoken	tokenproxy
9	auth	permission
10	auth	group
11	admin	logentry
12	contenttypes	contenttype
13	sessions	session
14	tasks	task
15	tasks	taskstatistics
16	tasks	tasktranslation
17	tasks	taskpoll
18	topics	topic
19	topics	subtopic
20	feedback	feedbackmessage
21	webhooks	defaultlink
22	webhooks	mainfallbacklink
23	webhooks	webhook
24	platforms	telegramchannel
25	blog	category
26	blog	message
27	blog	messageattachment
28	blog	post
29	blog	project
30	accounts	usersettings
31	polls	poll
32	polls	choice
33	polls	userresponse
34	accounts	resume
35	accounts	workexperience
36	accounts	language
37	accounts	education
38	blog	postimage
39	blog	projectimage
40	blog	pagevideo
41	blog	testimonial
42	accounts	telegramuser
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	platforms	0001_initial	2025-02-02 17:52:28.284931+00
2	contenttypes	0001_initial	2025-02-02 17:52:28.28949+00
3	contenttypes	0002_remove_content_type_name	2025-02-02 17:52:28.290121+00
4	auth	0001_initial	2025-02-02 17:52:28.290669+00
5	auth	0002_alter_permission_name_max_length	2025-02-02 17:52:28.291229+00
6	auth	0003_alter_user_email_max_length	2025-02-02 17:52:28.291822+00
7	auth	0004_alter_user_username_opts	2025-02-02 17:52:28.292275+00
8	auth	0005_alter_user_last_login_null	2025-02-02 17:52:28.292779+00
9	auth	0006_require_contenttypes_0002	2025-02-02 17:52:28.293253+00
10	auth	0007_alter_validators_add_error_messages	2025-02-02 17:52:28.293746+00
11	auth	0008_alter_user_username_max_length	2025-02-02 17:52:28.294215+00
12	auth	0009_alter_user_last_name_max_length	2025-02-02 17:52:28.294669+00
13	auth	0010_alter_group_name_max_length	2025-02-02 17:52:28.295159+00
14	auth	0011_update_proxy_permissions	2025-02-02 17:52:28.295594+00
15	auth	0012_alter_user_first_name_max_length	2025-02-02 17:52:28.29611+00
25	feedback	0001_initial	2025-02-02 17:52:28.301512+00
26	sessions	0001_initial	2025-02-02 17:52:28.302538+00
27	topics	0001_initial	2025-02-02 17:52:28.30324+00
29	webhooks	0001_initial	2025-02-02 17:52:28.304161+00
31	platforms	0002_alter_telegramchannel_location_type	2025-02-02 22:42:03.066448+00
34	accounts	0001_initial	2025-02-03 05:33:55.729606+00
35	accounts	0002_alter_profile_avatar	2025-02-03 05:33:55.740585+00
36	accounts	0003_profile_facebook_profile_github_profile_instagram_and_more	2025-02-03 05:33:55.772652+00
37	accounts	0004_remove_profile_telegram_username_and_more	2025-02-03 05:33:55.781884+00
38	admin	0001_initial	2025-02-03 05:33:55.805236+00
39	admin	0002_logentry_remove_auto_add	2025-02-03 05:33:55.811911+00
40	admin	0003_logentry_add_action_flag_choices	2025-02-03 05:33:55.817632+00
41	authtoken	0001_initial	2025-02-03 05:33:55.834782+00
42	authtoken	0002_auto_20160226_1747	2025-02-03 05:33:55.861119+00
43	authtoken	0003_tokenproxy	2025-02-03 05:33:55.863332+00
44	authtoken	0004_alter_tokenproxy_options	2025-02-03 05:33:55.866433+00
45	blog	0001_initial	2025-02-03 05:33:55.956938+00
46	tasks	0001_initial	2025-02-03 05:33:56.085693+00
47	accounts	0005_remove_profile_id_alter_profile_user	2025-02-03 05:39:46.989315+00
48	accounts	0006_profile_last_seen	2025-02-03 20:15:43.915068+00
51	accounts	0007_usersettings	2025-02-04 05:47:20.914063+00
52	accounts	0008_remove_usersettings_dark_mode	2025-02-04 05:47:20.940854+00
53	accounts	0009_delete_usersettings	2025-02-07 11:09:27.34501+00
54	blog	0002_alter_category_options	2025-02-07 22:01:16.181972+00
55	accounts	0010_alter_djangoadmin_is_super_admin_and_more	2025-02-13 23:45:40.310158+00
56	blog	0003_alter_category_options	2025-02-13 23:45:40.316259+00
57	accounts	0011_alter_djangoadmin_is_super_admin_and_more	2025-02-16 17:59:54.586096+00
58	accounts	0012_alter_customuser_telegram_id	2025-02-16 23:06:48.086805+00
59	accounts	0013_alter_customuser_email_alter_customuser_first_name_and_more	2025-02-17 21:08:20.944664+00
61	blog	0004_alter_category_options	2025-02-20 19:39:44.746618+00
62	polls	0001_initial	2025-02-20 19:39:44.845512+00
64	accounts	0014_alter_djangoadmin_is_telegram_admin_and_more	2025-03-14 09:22:47.800108+00
65	blog	0005_remove_post_image_remove_project_image_and_more	2025-03-19 13:09:29.619942+00
66	blog	0006_alter_postimage_options_alter_projectimage_options_and_more	2025-03-22 08:57:05.176233+00
67	blog	0007_remove_postimage_video_remove_projectimage_video_and_more	2025-03-22 12:17:06.434787+00
68	blog	0008_remove_postimage_image_remove_postimage_media_file_and_more	2025-03-22 13:29:07.485515+00
69	blog	0009_remove_postimage_detail_page_media_and_more	2025-03-22 14:22:04.109209+00
70	blog	0010_alter_category_created_at_alter_category_description_and_more	2025-04-03 23:26:18.225493+00
71	blog	0011_pagevideo	2025-04-04 01:27:41.010334+00
72	blog	0012_pagevideo_gif	2025-04-04 04:29:54.657066+00
73	tasks	0002_tasktranslation_publish_date	2025-04-10 23:11:07.862936+00
74	tasks	0003_alter_task_create_date	2025-04-11 05:43:40.732164+00
75	blog	0013_testimonial	2025-04-15 20:01:57.703021+00
76	blog	0014_alter_testimonial_options_and_more	2025-04-15 22:24:42.166332+00
77	blog	0015_alter_message_recipient	2025-04-17 12:23:15.628137+00
78	blog	0016_message_email_message_fullname_alter_message_sender	2025-04-17 14:18:24.204469+00
79	topics	0002_topic_icon	2025-04-18 05:46:59.179388+00
80	topics	0003_alter_topic_icon	2025-04-18 06:50:42.063913+00
81	topics	0004_alter_topic_icon	2025-04-18 08:43:22.525606+00
82	accounts	0015_telegramuser	2025-04-26 15:33:49.420299+00
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
lca137t4k2l7j7dijjd4ng54tdcpn052	.eJxVjEELgjAYhv_LziFuc-q6FUheDDoUepJ927c0w4VTMKL_noKXru_zPO-H1NoPdnQd9mRPZPTKi_dcMnZNh9NNHnJfVWcwc1Z2WXURZEdqNY1NPXkc6tYsSfS_gdLL1QrMQ_V3F2jXj0MLwaoEG_VB4Qw-j5v7d9Ao3yw16ISxOLTGIGhEy0OgseZpwikqhSlAKKjSYLhIqZCa2TgSlicKQyk5A_L9AfkJSCk:1teehC:v5BukooZxEZ1xGgo30poEf0zPgpOCkw64zyxRjX3b_M	2025-02-16 18:27:50.269003+00
ocor9lqo8nz9a30jps3um32rgbin5a3x	.eJxVjL0OgjAURt-lsyFtKW1xRJ0MC4kJG7m3LQIaaij4E-O7CwkL63fO-b6kMmGoR39zPdmTzMS-fHWqf1NZ5GI4PEJxfLJz-ilP3l0ysiMVTGNTTcENVWvnhG03BDNfLcB20F99ZHw_Di1GixKtNES5t-6ere7moIHQzLWRTtKYcdSgJVCtakggxpQpp53kiDJhOrFoTYpIkWrkXFFUwnERKxDk9wcIPkeO:1teeih:0ZLdPJ0fnVHnpsmf1Vwu4ZQvA1vxdptX4UWjD95A-hM	2025-02-16 18:29:23.210662+00
3r1n9cbiwv1in5oe05lirnw4fjj5zk1k	eyJfY3NyZnRva2VuIjoiTm5rWXBLUXZaM05mOWIxeEVLS25ISVBmTkFjU0YxWWQifQ:1u4ZTd:uOiSPlao_-Xh0i2I1k2i5z1AvjiUh1DvbkmIJix54jc	2025-04-29 06:08:57.878615+00
qwlscq0azjpy52egtspcvmm3rl353dib	.eJxVjtEKgjAYhd9l1zG0pXPdFRR0IRFEXsr275-atolOIqJ3b4I33p7znY_zJSWMg_GuRUv2xHRt4avTS_SHT36-3iFD_bhUxcG-J9fderIhpZx8XU4jDmWjw4StMyUhqOZCP6WtHAVn_dAoOiN0aUeaO43dcWFXglqOdVjHW1CJAWGS2CCmmKSa60xLyEKSSYY85kqICCIBDHeY6nDVSK4MizDcJr8_9eBKPg:1teelZ:3l5ld67QX3dsIlUg6kz2HArhJCUYlDbrY0ot7T59Ico	2025-02-16 18:32:21.662978+00
85zw4rd4szbddcsy954db7cymeiob5jo	.eJxVjLEOgjAURf-lsyFtKW1xk8WJOKiRjbzXFooaaigMavx3IWFhveec-yW1iUMzhofryZ68T4F_Kt8qUYlD2flKtNchv7yOvfLFubyRHalhGn09RTfUnZ0Ttt0QzHy1AHuHvg2JCf04dJgsSrLSmJTBumexupsDD9HPtZFO0pRx1KAlUK0ayCDFnCmnneSIMmM6s2hNjkiRauRcUVTCcZEqEOT3BwIUR4I:1teewg:9bsEc4lUoaqfCPq50HNZcPI7JeKuVP6JKI28KaWiCAE	2025-02-16 18:43:50.615468+00
ipksd724c5g5wrglsqeg9u8gik0bqeky	eyJfY3NyZnRva2VuIjoiY1oxdzVHemlKQTgxTnZzUjhlSkNOam9wRmtVZ0hpckgifQ:1tePqJ:rV4fV7OVHUL_4mOH33NSaXZBZjjwMw7n-RuuJO_a37I	2025-02-16 02:36:15.493027+00
s4vj9339y5xzeggdmk1owlyn3juyb5ch	.eJxVjL0OgjAURt-lsyGlLW1xZDCiMhATEydyb1t-1IBQWDS-u5CwsH7nnO9LCuOHcuyeriV7UuXHdyou5yg_DFnSp4lPdImf-Ar8drrznuxIAdNYF5N3Q9HYOQm3G4KZrxZgH9BWXWC6dhwaDBYlWKkPss66V7K6m4MafD3XRjpJechQg5ZAtSohAo5xqJx2kiHKKNSRRWtiRIpUI2OKohKOCa5AkN8fr6lHFw:1tef2n:5J5unaPYG57mC1fpRqlO94E74vdm1FiRH3Nek6pMsTk	2025-02-16 18:50:09.714579+00
sqyapqo1v0en1pfysk2djtm9u60ygcdy	.eJxVjL0OgjAURt-lsyFUftq6aQyLGmMkDi5Ne3sLCIKhMKjx3S0JC-t3zvm-RILr7dDV2JINSZ9Nno2X-p1nx_145occivyK8Hlt7-JGY7IiUo1DKUeHvayMT6LlphX4qwmYh2qLLoCuHfpKB5MSzNQFp85gs5vdxUGpXOlrugadWBA2oRYxxSQ1zHCjgPuFqwgZZVqIEEIBEcaYGo7GKqZtFCJwJL8_UdZJVg:1tefG7:TNdpIZZjaXiKZbl-NupgOO_RRgpwq8S3greipUGyVOo	2025-02-16 19:03:55.141875+00
zxuw3vjh7bnfkzczksn30cnmrjmd3zm4	eyJfY3NyZnRva2VuIjoic0VkVzFINUE2WFJzbHdRak1LWTBncG5VeVdUeFhnangifQ:1teQCE:g5vVx4uZxoUWAz_Pum6QvTXQ95L8v3yjojJoeGWKntI	2025-02-16 02:58:54.507656+00
l3o69l2qvvibzvtt2v8rsmxmactjip6l	eyJfY3NyZnRva2VuIjoiUER2V2o5ME9KOTJMc1JYT1k4MGxjaEFjcGpvajdVT2wifQ:1teQU7:xTTfkG8nXsi2WOGe5n9QBkoIpDvKF0Y-kpKlO34VUZ0	2025-02-16 03:17:23.102661+00
1i56pl7s9gx842bi5pu29q903d11mfaz	eyJfY3NyZnRva2VuIjoidVI0ZktId00za2NWbzF0cTE0Z1hMMnlOUW5yNlV6dE8ifQ:1tu70D:O_i4aHtl7TCxFOe_OU6QibSvKRn2rHTQX5GKP_9ZwN0	2025-03-31 09:43:21.306649+00
z1tbx0y9ibx8h6tmy053hrd3lypge9bq	eyJfY3NyZnRva2VuIjoiNkNoc0FNN0dhbGxWazVIbzc3ZVZrUUFFZ3lvdTMzUW8ifQ:1tn21l:LJwLNA_uTh9CNM1o9NQAnZ3ZAznXft4yCG8c8mRXKuc	2025-03-11 20:59:41.027429+00
xu75ksqzovgg4h1zerb3cujz656kxfy9	.eJxVjV0LgjAYhf_LrkPUbW7rLi8qsCCDPuhG3nc6tUJj0wqi_55CF3V3OB_PeZEM-q7KelfYrM7JlARk8ush6EvRjEF-hqZsPd02na3RGyveN3Xeus2La_zt_gEqcNWwplTJADHkTCjfKCUhpBEyqRky448SKaDWSDUDLXMDIATHiEugEfPNCNXOmq4dLgZemuwWs5VNDo_THbelwGXqbLw58jmLn2J_I-8P1TpHvA:1tnFhp:ZcXg8R1JhlbtzAZrYPnHy3y4_SKW0_6Q6rM9XSrSvUQ	2025-03-12 11:36:01.577427+00
15bjf9yslxylvrl0cmjenbcn1q6gmmjh	eyJfY3NyZnRva2VuIjoidmZlY0ZCSVE1aFFNaDM3dzZwc2pzc2FnWWZ3OENTMXEifQ:1tu7Ko:OJoFC-yKT3kRdvTfCJ5TIHUcXNwbz7uyaEdDAI4jMtM	2025-03-31 10:04:38.600077+00
k46zlbvszfygc708rtqrk9zv5la9pdks	eyJfY3NyZnRva2VuIjoiY2VvT0dlUzNEa0ZMalhkZU9JNHI5aDM2bXhIa0dVdHYifQ:1tuAaA:f8Wot8eWXOd0OiJTFVdwqzwnjq0lHE06ZFSkwP1QI98	2025-03-31 13:32:42.910785+00
rydgrwqqg5jtdtzao25d94tgqzamc2fa	.eJxVjMsKwjAUBf8lawl9pG3iTsGFSBWkdhuSmxtblaY2KYLiv9tCN27PzJwPkeAHG9wdO7Im9aF-HdlGJJAl_n1qdiyp4Bzcvuqf5YX1ZEWkGkMjR4-DbM2UpP-bVjBdzcDcVHd1FFwXhlbTWaEL9bR0Bh_bxf07aJRvpjpOQGcWhM1ii5hjlpvCcKOATwtXKRZxoYWIIBKQIsPccDRWFdqmEQJH8v0B_J1I8Q:1tefRT:l7HHh3uyjf_uPzNchWwuBvcgKoREgO2l4x8tskbcBqQ	2025-02-16 19:15:39.769258+00
5958d74nv9nd6jgy7t9a3v2bmbxcdedt	eyJfY3NyZnRva2VuIjoiZ01LaXo5djNmbUZKcFFVbVFYUHI4UmxRbGh2RldMWjEifQ:1trmA1:2aYP6ZW1Fce0q9sZdoh-WQkNtYGSE-8k_jI3H4wtkHQ	2025-03-24 23:03:49.227821+00
c8523knopikhocz2dccd45cnmcvkow79	eyJfY3NyZnRva2VuIjoiWU9iYlVxTURaZzFET3JpeVdSazJEekxJcmZ4alBMaEIifQ:1trmge:2PdYuk2BzxeynsyN9BeN6tmnHRCJJU6kUMfctthLaKc	2025-03-24 23:37:32.891583+00
o0e9ao41i4q8ommx1188owcq33us5u4c	eyJfY3NyZnRva2VuIjoiNHRCdzRvajNOY2ZYWkFRTDdYdE9LVDRtbW9keFJycjkifQ:1trrFA:Apobz5p1YYAPmzGnNHBszVzw1rtGcW4MKUtsCwkAHUk	2025-03-25 04:29:28.221899+00
s0mmrp6bl5dqjq5hb021otcxdcnjwqr3	eyJfY3NyZnRva2VuIjoiQ2hHemwybkw5VkFIYk8xTnRsUW1UYk1qdmRJQ2dKUk4ifQ:1trrls:Y-OMsaHTy-n7hN-fMxsm60ekY7pYxelbFmLYEbUeQmU	2025-03-25 05:03:16.285257+00
s3vnpxvhizmfyxpor227904j0zxx20ef	eyJfY3NyZnRva2VuIjoiOVA3VnpBaUgyekNLQ25nV294MmxIdUdLc1R3ZnBkb3IifQ:1trsnS:6pn0Qr1EIqY01H-4H4jfB1o_5Xdtgb0v-WrAMEwrX5s	2025-03-25 06:08:58.846754+00
asurf402463xmbwvl8btovozo69cdbm7	eyJfY3NyZnRva2VuIjoid3ZPR05Ya1BOR216VHhkM3pVQ0RmSHg0U1VXM2FFdG0ifQ:1trsor:goFczFeCqRrDK4NsNbdBp_Jkq7HpkOv37tWbLNtUZ_E	2025-03-25 06:10:25.715274+00
lk4t3ctki2ki77tta6df5eubme8fp4bb	eyJfY3NyZnRva2VuIjoiZzFqT0w5bE1oamRkbFVOUkN5YjRIN1lxNVJtNFB2eXUifQ:1trt9m:wCVgITK-oj3apqfnKJ0I1WikCle45H0qaP18dbmT2yE	2025-03-25 06:32:02.087388+00
dlv89f286zg3ke4gpo7lls1az59htik1	eyJfY3NyZnRva2VuIjoiRmlOY3R1Zng1VW9aRTBKUURqTGtFaU4zcEVrYmNRMnEifQ:1trtMG:Cxkm1OCySWPzfuFaCwo0BWlcLhgbMiScAIz8TmMqW4E	2025-03-25 06:44:56.418602+00
efyn6t1dqwtmclch7nhicxuebn81bb6k	eyJfY3NyZnRva2VuIjoiMjA5QVlESm93MTd0YlZZR0NYQVlZS1E0ckdBYzhBRFQifQ:1tsASG:6x269-4QW8XQDBJWz1g_kOwayeXNpPvW-5s-HRmGjaU	2025-03-26 01:00:16.176797+00
oaoa40386z6svrgkng6y9c5s3w8nu7e5	.eJxVjMsOgjAURP-la9MUWtri0mjQhTEx7sm9LeWhgtKCC-O_CwkbdpM5c-ZLcuN7F7p70ZItOQZdsmGvbuPzWvr6dTjJS_MeM8_GDD5sIBuSwxCqfPBFn9d2UqJ1h2CmqxnYBtqyo6ZrQ18jnSd0oZ6eO1s8dst2dVCBryab81RHiHEiVMpcmmqIuUShjUDh2ByRAxqD3Agw2joApRKUiQYuBXPk9wdfTUhZ:1tsAdr:T1ul9as-q3Ha5og7-9deH7bth0PR0r8BKGXm6djfl0g	2025-03-26 01:12:15.675453+00
t88vf0qme980d8qyy3tyhc3k0246jujh	eyJfY3NyZnRva2VuIjoicUpiQk1WSzVkOWU2SmhKSW91U3pYNmRMSWkyY1RrNlIifQ:1tejpt:oD6IQeFSeIwYwO_km5tadJnYMN_Ta4BeeW4xB6cxYL4	2025-02-16 23:57:09.43567+00
ijcx90o9to6mrab91sybftmd51wdy0e2	eyJfY3NyZnRva2VuIjoiTkNiZXZhWjZmbzRlME1EY2wzd2txanV5cnlKSDNzODUifQ:1tsApu:r1EV1eV4sDQ-aMX1WTR-LxE-1kgwIlVyABzw5-2j6ZA	2025-03-26 01:24:42.999572+00
5lj71gv4symf1qcnfu28mmrjtqu9mnc6	eyJfY3NyZnRva2VuIjoiampMdmVQTDRCQ3h1cGM5b2hYVGRpd2xPZ2hqQUpjN0QifQ:1tsAyy:ZjjrJzDybyQPP1yTH4p4f1nRn027Q2zPcJb-cn--h-A	2025-03-26 01:34:04.173982+00
9d3majf6zcnwwpcwiv80xf9xivl9jvdw	eyJfY3NyZnRva2VuIjoiTEFxWllxb2lEOEdZczE2Y0p2SG1vWmdoTVc2eHM0MTUifQ:1tsBCc:VxQQmCFu3GxK_LrrcuKesI276fmO8Bmgtm9T_mOsmRU	2025-03-26 01:48:10.02129+00
9j2qc5rntumsqzmtg0ozayn293geqzau	eyJfY3NyZnRva2VuIjoiRW1GaHJ4dUIwbzZGWnp1ZWpYR29LdFRleUhoOG9idloifQ:1tsDa0:z9b0-dGaXgsw44k73uhrIei1jlsfJgf48M6mEo8vI6M	2025-03-26 04:20:28.434106+00
u8br5yqjgjz5je48yv2fkpt91e9y8p1z	eyJfY3NyZnRva2VuIjoiUllJdHNZVVlQYUpidnMzZVlXU3JmQmVEOFcyUHZIcEcifQ:1tsE5J:xzblyVSpjYnEwK0O83tzXGy4_5nlGh99l6780towUBg	2025-03-26 04:52:49.220206+00
7c4ze3cky6khob8sxjfyymbel9wzaoq8	.eJxVjMsOgjAURP-la9MALVBc-orGR-ICF26ae1sqiFJtIS6M_y4kbNhN5syZL5HKO9PaumjInGyfm-V1ZT6XNTszZ3leutZXp30dvard-5CTGZHQtaXsfOFkpXslnHYIqr8agL5Dc7NU2aZ1FdJhQkfq6dHq4rEYt5ODEnzZ24xlIkSMYp5mgckyARFLkAvFkZtgiMgAlUKmOCihDUCaxpjEAljCA0N-fzZ-SCM:1tuTP5:elNe4SG9-pzboj0kOtgQ-9jGGBW40_6hguelFS8tIWM	2025-04-01 09:38:31.3522+00
auhgbrjrmlw3huwy5dbgnb3kl68sgq9i	.eJxVjLsKwjAYRt8ls5Rc28ZNJ0GKTq7hz820SgJJiqD47rbQxfU753wfpEzJvqaHi2iP5BhOV5YPOl9ioEGSTvPzFG-1l-95cC-0QwrmGtRcXFajXRLG_kcNZvlaiZ0g3lNjUqx51M2qNBstzZCsex439-8gQAlL3RopuKTe-q4DCRhTz4gXjHoQWPTcONYbTsFyBrSlhElDjMAaY_AaW4q-Pzw5R5s:1u4ZIR:iuBaRmpAmZtqDr4ynGF8V5UbhuC-zoDE6ZpliCSD6M8	2025-04-29 05:57:23.468781+00
5vyrn59tfkcc8et3jib0fmnnjmp1hdm8	.eJxVjssKwjAURP8laylpHm3jUq2goKIgLsPNTdOHtYU0xYX477bQjds5M4f5EI2Dd6F_Fh1Zk6Rr8NCe78edL0Fivt-m7wvzr5yKR7C3K1kRDWOo9DgUXtd2mnD-HxrAyTUT20BX9hH2XfC1ieZKtNAhOvW2aDdL909QwVDNV1BJoZizLk1BAaXM8dhJzhxIKjOBBc9QMLCCA0tYzBXGKKmhFJyhlpHvDw4WR1M:1tzK14:ZC0Knfws2WAq3FwVcTLysOUDufs0T5RM9xcikuPByNg	2025-04-14 18:37:46.993219+00
hmeoahfs3wea5dkwumdlyxtndi7rmp5i	eyJfY3NyZnRva2VuIjoiU3lEMjFraGZUUURnclp0dDlib1k4N0tTd3FYcGptbUwifQ:1tzKTl:P-pRdjI6iQt-Zr9k3W6YiX4aN4XfvIcNRyq3ja3WP3Y	2025-04-14 19:07:25.093674+00
zcp9v7hufmm0g1e0eo5bvao76e7hgtkk	.eJxVjEsOwjAMBe-SNYpcO2kbluw5Q-U4MS2gROpnhbg7VOoCtm9m3ssMvK3jsC15HqZkzobInH7HyPLIZSfpzuVWrdSyzlO0u2IPuthrTfl5Ody_g5GX8Vu3ErwLqEm7jgMDoFKjnlDZg--dZOrFISdHjC02FKQRDxGANUJC8_4A-nU3tw:1u6lfn:bUFW6PuR9frt9S7cfU2BQOzhBViOXjmCSzTAX_fA_PQ	2025-05-05 07:34:35.223772+00
8hkwl3mgbfvvi1codwh48ji0z8or5dba	.eJxVjD0LgzAURf9L5iJqYowdBYdCW6jg0kXeezHVfhiJ0aX0v1fBxe1yzz33y2oanfH21fTsyCLTd5Uc8pOuBlGec1-UZOaPmJvi5q7tnR1YDZNv62lsXN3pVdl3CLRcrUA_oX_YgGzvXYfBOgk2OgYXq5t3vm13By2M7WJznqkIMU5EmoUmyxTEXKJQJFCYcI3IAYmQkwBS2gCkaYIyUcClCA37_QE7K0gp:1u4a5Z:4hlWU6y7b_hNQGEcCNJBPTpJ_hLQBi59Bv8dGtqlo18	2025-04-29 06:48:09.639688+00
z7oazi11j2iqo440jvhpmptdekl2abyi	eyJfY3NyZnRva2VuIjoiQlI1Z2hJYXV6NFB1RHNwUzZNNTdLU3Y3bnhGTVZndjkifQ:1tzxvL:Vd7txqKla4GAQUmPTXletcV7NdN4HT7cc16qCaHVj-M	2025-04-16 13:14:31.387339+00
rra1vstikat4gs0qyjfomk10lcdvnh9r	eyJfY3NyZnRva2VuIjoiWEpKajdRNzQ2RVUzOUpQTlN3c1RnVURHNmxNMWxOM0cifQ:1u29Bb:s56sqoYo-dMYC3x3h7Sk0n0rAUYyK8vYLDDPu3p1opQ	2025-04-22 13:40:19.507392+00
iwukyefav3f8i1bbi5hix2zcqxuleg6k	.eJxVjD0PgjAURf9LZ9MAbaE4ygADTiZ-TM17r1QQQxMKLMb_LiQsbjf3nns-zFAY3eT7ZmBHVl5IzaFpa7nIK6mqfxQp-uK-JGV9g6ZiB2ZgnlqzQqPp7HqJ_zsEWlXbYF8wPD0nP0xjh3xD-L4Gfva2eZ929k_QQmjXtxC5jhETJbM8cnmuIREpSk0SpYu2iAKQCAVJIG0dQJYpTJUGkcrIse8P4xBHqg:1u4cYV:zDP3BoOdm2BQaEduWeKPP0hcGvzZq8KTjFavIAJahkQ	2025-04-29 09:26:11.695048+00
owrhsn6jy6qasm3u7mmkflwb9o15lgq7	.eJxVjEsOwjAMBe-SNYpcO2kbluw5Q-U4MS2gROpnhbg7VOoCtm9m3ssMvK3jsC15HqZkzobInH7HyPLIZSfpzuVWrdSyzlO0u2IPuthrTfl5Ody_g5GX8Vu3ErwLqEm7jgMDoFKjnlDZg--dZOrFISdHjC02FKQRDxGANUJC8_4A-nU3tw:1u8ff2:FBba5hYUFXOC3ML5Se6nLz7kvSe5_5UBwRkjAHvxzW8	2025-05-10 13:33:40.312999+00
1qyu7f4xk3hexfu2sh2klxh3ts8dyhv9	.eJxVjMsOgjAURP-la0OAFijuJCAbUdZsyL23LaBCEx4x0fjvQsLG3WTOnPmwmqbRzPahB3Zk7-J8hRvlaVpYnb26IhlOl7Jq-lL1ZZVn7MBqWOa2XiY91p1aFe-_Q6D1agPqDkNjHbLDPHbobBNnp5NTWKWfyb79O2hhaleb81h6iH4gotg1cSzB5yEKSQKFcbeIHJAIOQkgqQxAFAUYBhJ4KFzDvj8d2Ef8:1u4m3w:fwatKXtFbNf0Y68o7KzOihEzi5oM1ZpQT3HLrkuVfC8	2025-04-29 19:35:16.231381+00
jyzdjm54n4vgl0d30vljp843iljiyl1r	eyJfY3NyZnRva2VuIjoiUmVSN3IxQkRlaXNnbDJzSHpJMW5uTG01Rzg2ZGNSTGgifQ:1u2J6I:ZpEOJ5PsXNSyJUCEj5I-nacZ4W_lvnw77lw3StZLF-A	2025-04-23 00:15:30.420913+00
680g5s3o36any9cm51wk4jt1seq8zidw	eyJfY3NyZnRva2VuIjoiYlpOY1pwZERuVjNmVlBQcEhwemZJSGlvaUQ2VlVWWGgifQ:1u2Nrx:e3uQZNZdlgDt6Wxh6bTrmv901WEpj5E-HVQl-lC_2fw	2025-04-23 05:21:01.921182+00
h4ifaswqmreonfud191fqt9yh51ho3q3	.eJxVjL0OgjAURt-lsyG0UOS66eBgNHFAoxPpzy2gpMQWNGh8d0vC4vqdc74PKZV3pu_uaMmKvI52feVDfVHJrirO46M_-XdbpH4v4_HptmRBSjH0dTl4dGWjQ5Jk_6MUKnxNRN-ErbpIdbZ3jYwmJZqpjw6dxnYzu38HtfB1qGOhORM85kA5Mr4EAGZoatIszxmViQQGYCgCBZaqMHOKLBcUUSONmSbfH88qR_g:1u2QJB:bQe-Py0XMqclQ4ue8lgzGvXD0-lmao0zXCy20cvjMDU	2025-04-23 07:57:17.676083+00
uborri7ugk8y5p7s3u6tymp6dxne1zip	.eJxVjL0OgjAYRd-lsyG0pdC6KcHFOGrCRPrzlYJahIIxMb67kLCw3nPO_aJKh8GO3R082qP-Vhf5-WOxeubldO1L5V3rT5QX7F26wwvtUCWn0VVTgKFqzJwQsR2V1PPXQkwrfd1FuvPj0KhoUaKVhujSGXgcV3dz4GRwcx3bhHFuuYxZaiQGo5OYCwrWCs1VRmiqaAYCUrCYcqApBSIIIxnDsbIY0O8Ppk1IQg:1u4qvT:hAtTPaOr6Iyh0hlgv7XKQLUcroKfAO0MAtR5y92WZ-I	2025-04-30 00:46:51.626108+00
5lwtszaxecenac14g44gs9c9mk1dmqs1	.eJxVjLEOgjAURf-lsyHtKwXqaJyMumg0TuTRR2nFACmQGI3_LiQsrPecc78sN32wQ1uXDduyUF8o0K27n2vw4DTfv7vHtfJH4cXnQAnbsBzHweVjX4bc05RIuR4LNNPXTOiJTdVGpm2G4ItoVqKF9tGppfK1W9zVgcPeTXVitIo1WLJpiho5ByuFVRIsKq6y2JQyMzEgxRIhASG1EUbxgnO0BSdgvz9ud0fP:1u4rb3:Cup7fGV-jrISYICjgHsL9g2N8t823y9ibtCb8Y3LaUo	2025-04-30 01:29:49.76511+00
8us91bzxuq9m6dq5c7pg4d56jycj7zfc	.eJxVjL0OgjAYRd-lsyGlX8uPmw5sJkJijC7k659FDQ0tsBjfXUhYXO85535Iq2Kwo3-ZnuzJ1NyrcK0lxAZmE7zjbp6G86Wvbwc2VI7sSIvT6NopmtB2ekkA_keJavlaiX5i__CJ8v0YOpmsSrLRmJy8Nu_j5v4dOIxuqTNVCl4yq22eY4mUMgupFcAsCioKrgwUijPUHJBlLIVSpUpQSSlaSTUj3x_FjUhM:1u5IBA:izHQbVijd1A-11qEzBlDWcQetns0YDDa81r4tk5JJ7o	2025-05-01 05:52:52.23914+00
ioualbgq0yk3p68k324u7481yfwhhoef	.eJxVjDsPgjAURv9LZ0MufQB1UwZdiA4uTuT2thVQi_KIicb_LiQsrt855_uwkvrOD-3VBbZm4RySjXvGRzK6eB807O95U2dj3jwgvE47tmIljkNVjr3rytpOiRD_o0GavmZiGwyXNqI2DF1tolmJFtpHRWvdbbu4fwcV9tVUJ6SV1Nxbn6aoEYB7EXsluEcFKpPkREaSo5UCecJjoSkmBQYAvQHL2fcHPaxHmA:1u3lM2:7w9Y1hegSymWbyqXtTKwudQzjkGqZACha5sxfQlpwwQ	2025-04-27 00:37:46.356485+00
pbprlrp64m2uzuh4akuz00rkuazlcb09	.eJxVjE8LgjAchr_LziFzc-o6VocgKiJM6CI_9yensYGbJUTfPQUvXd_ned4PqoTvdXCdsmiN5NUcwqlrR3u-uJcu-Ja-7025H29FuWtNhlaogiE01eBVXxk5JZT-jzWI6WsmsgX7cJFwNvSmjmYlWqiPjk6q52Zx_w4a8M1Up4KzhBMtdZYBB4yJprFmlGhgmOWJUDQXCQGZUCApiSkXsWC4xhh0jSVB3x_H50hK:1u5dSj:6aoPsstCZI2B_loqkUZPM46KrrsfVv_v9zEX4VJANS4	2025-05-02 04:36:25.36508+00
4ccs2e0ldzitztmi78v8j1qe8g5estal	.eJxVjLkOgkAURf9lakNmZbHTmFhZSIJGG_JmA2TTGTBR478LCY3tPefcD8qVd3boa9OhNWrO6eaVjZc65afMykd7P7Z77guyez_Dq3ZohXIYhzIfvXF5paeEsf9Rgpq-ZqJv0BV9oPpucJUMZiVYqA8OvTbNdnH_Dkrw5VSHKhE8oVbbKIIEMKaWESsYtSCwiLkyLFacguYMaEgJSxRRAkuMwUqsKfr-AMr5SFU:1u4CIm:ObjP0X_dOAynRIeekH1bX6M9IHs5wrIPwnIQ_On6mYA	2025-04-28 05:24:12.270906+00
smu2omaawtk7cnxbezz6jw8ifnekuvv8	.eJxVjMkOgjAURf-la0NKHwXq0iFR0MTElSvyeG0FNUUZ4hT_XUjYsL3nnPtlGTW1baurcWzOXuCeqUkP6vhO7kBLt0h0Zx4nu13tPmKzZjOWYdcWWdeYOit1nwBMxxyp_xqIvqA7Vx5Vrq3L3BsUb6SNt6-0uS1Gd3JQYFP0dUhKBkpYbaMIFXIuLPhWgrAouYwDMhBTIFAHgCIUPijySfKcc7Q514L9_mAlR8A:1u4FNT:4qtYPiKttJTeFzZWo_Fj_vfTQwMjiwEb0fKeiEDJyik	2025-04-28 08:41:15.14356+00
9g0afog3ga11mj921ek3k8zfbtld5n68	.eJxVjMsKgkAYRt9l1jGMc1GnZVRQFoLUps3wzy1NccgLQdG7p-Cm7XfO-T5Imb7zQ6hdi9aoOGzzm8vy8qKTvT_W71C84mezOxWZvkbtgFZIwTiUauxdpyo7JYz9jxrM9DUT-4D2HrAJ7dBVGs8KXmiPz8G6ZrO4fwcl9OVUx0YKLqm3PklAAiHUs8gLRj0IIlJuHEsNp2A5AxrTiEkTGUE0IeA1sRR9f2KrR80:1u5gBB:sCQRfYATPxEyyCfjCCSqL9DTzeSTS-fCmWPNQHHsJ0U	2025-05-02 07:30:29.430984+00
aom1h466pfy3kczv76rrukra3b8t0jbt	.eJxVjMkOgjAURf-la0NKBwaXGHUjCTGGbfP62gIOrWGIC-O_Cwkbtvecc79E4dC7MTysJ3uCdXWr6vfheBGd88X15ZuE1uX5BB9dWBnIjiiYxlZNg-1VZ-aE8-2oAeevhZg7-CZEGPzYdzpalGilQ1QGY5_F6m4OWhjauU4wlyJnzrg0hRwoZY7HTnLmQFKZCbQ8Q8HACA4sYTHPMUZJNaXgNDWM_P4qB0d8:1u4HPY:V4NfhNconQpiZbdgQbs2prYqF6S3-8iOXB1xZ24PU20	2025-04-28 10:51:32.977745+00
atfmpicmjfzwa5tudti35ibrhdbptgiq	eyJfY3NyZnRva2VuIjoib0JxckI2b01QOWl3ZWhMY2RoSDA3Ulh0T0FiZUxXYnIifQ:1u5iPi:a0pRlDPbI_T3ziWXAoTqR22MjSLjPdglavxxi1CSfgo	2025-05-02 09:53:38.636551+00
ntdjqygl6yxj4zlaqzr3mw38iipvrxwy	.eJxVjMsOgjAUBf-la0NKHzzcaViixhhduCG3t62ABCItQWP8dyFhw_bMzPmSAl1vffc0LdmSfqSf82k3ZkrnL1VdeJPfrnWWv4_3kKH0ZEMKGHxZDM70RaWnhPP1qACnr5noGtpHF2DX-r5SwawEC3XBodOm2S_u6qAEV051hKkUKbPaxjGkQCmzPLSSMwuSykSg4QkKBlpwYBELeYohSqooBauoZuT3B2MHR8E:1u4Uy5:VdkzrznqZDJCUCkaBKTwxNsJuGBggD_sGR4fh3ipSns	2025-04-29 01:20:05.368679+00
m2pq00r0dphyi2ab17lqboybkchv9ohp	eyJfY3NyZnRva2VuIjoiZGV2QVV0dTYycVVxOGhhS0Y5OUY1ZExuN1ozOWV0UHMifQ:1u5iPj:IMjA68JB1xXRjbHnIp9je9iBMqcvYKBWG-HHNRGUx9s	2025-05-02 09:53:39.009072+00
6f69a55ov3n0iz9u1e0kk3zzeikwes3y	.eJxVjLsOgjAYRt-lsyGlpUDdJFE0hMno4NL8bamACAnl4iW-u5CwsH7nnO-LhLKt6ZpHVqMtGpPqal_JKY6GUee3_bCTkD4v54Nfxp_37og2SEDf5aK3WSsKPSWUrkcJavqaiS6hvjeOauquLaQzK85CrZM2OquixV0d5GDzqfYVZx4nRpsgAA4YE0NdwygxwDALPZXRUHkEtEeB-MSlXLmKYYkxGIk1Qb8_vP1IPA:1u5gZ5:pPJLhFP3E1zm9yW9viO1UcQ6dXTi3Z4yq6izyDTek9s	2025-05-02 07:55:11.033525+00
mrwvflid82y19zfkb7291mxyr0ri90n1	.eJxVjEEOwiAQRe_C2hCgMwgu3fcMZGagUjVtUtqV8e7apAvd_vfef6lE21rT1sqSxqwuyqvT78YkjzLtIN9pus1a5mldRta7og_adD_n8rwe7t9BpVa_NRjrIphgBzI-IGYM2IGAILEfXAkdZIzBOm-FoYNwjugwMhnhwlLU-wOsQjcX:1u69jE:CYx0Ltrferl70Hp0_WOQ4bkF0TxBmmLqHIH6DxlFi8o	2025-05-03 15:03:36.012052+00
aub7iaizclgl9czdml275rd94rqcpqxu	.eJxVjEsOwjAMBe-SNYpcO2kbluw5Q-U4MS2gROpnhbg7VOoCtm9m3ssMvK3jsC15HqZkzobInH7HyPLIZSfpzuVWrdSyzlO0u2IPuthrTfl5Ody_g5GX8Vu3ErwLqEm7jgMDoFKjnlDZg--dZOrFISdHjC02FKQRDxGANUJC8_4A-nU3tw:1u6npe:QHRsLRFHdxWlHnSHn6CHYoDB17k4ISK94CWoZ01GN_w	2025-05-05 09:52:54.681766+00
q6aj48on406o36oob7trgs4fjtbehyll	.eJxVjMsOwiAURP-FtSG0vF269xvIvReQqoGktCvjvytJF7qbzDkzLxZg30rYe1rDEtmZTez02yHQI9UB4h3qrXFqdVsX5EPhB-382mJ6Xg7376BAL9-1lN5NiLNW1ovsvYNZGlSOFKosRkQJSISSFJCLGcBajUY7kEaJzN4f1AU3_g:1u8bGr:EwQgJnTl5tb57CpdIB3DRLzM5-pg85uEiDnrpszQ6Jw	2025-05-10 08:52:25.857443+00
qyen7fl4p5m25rycnxzlla66op3ttic0	.eJxVjEsOwjAMBe-SNYpcO2kbluw5Q-U4MS2gROpnhbg7VOoCtm9m3ssMvK3jsC15HqZkzobInH7HyPLIZSfpzuVWrdSyzlO0u2IPuthrTfl5Ody_g5GX8Vu3ErwLqEm7jgMDoFKjnlDZg--dZOrFISdHjC02FKQRDxGANUJC8_4A-nU3tw:1u77ms:Lg-31rDz8Z0hQd16Lj7CxBcI8A0UoBDgEykOS9HgItQ	2025-05-06 07:11:22.651111+00
1xc6ea3igdgz9o39elc03ntmm2j3uect	.eJxVjMsOwiAURP-FtSG0vF269xvIvReQqoGktCvjvytJF7qbzDkzLxZg30rYe1rDEtmZTez02yHQI9UB4h3qrXFqdVsX5EPhB-382mJ6Xg7376BAL9-1lN5NiLNW1ovsvYNZGlSOFKosRkQJSISSFJCLGcBajUY7kEaJzN4f1AU3_g:1u77qp:-gvS2OdyNuSygO4OMEfDCxiU7eRB9ToZuOrCVk21FnA	2025-05-06 07:15:27.78235+00
shuhskwt9txi7iuxdf4bnu1nglif0rr4	.eJxVjMkOgjAURf-la0MeLYXWpcGJiHFnXDWvk6CmJAxGY_x3IWHj9p5z7oco07W-b-4ukCXJ1-XuDZvhfBQW2HPriiBPIi9eqTxcyn1PFkTh0Fdq6FyrajsmjP2PGs34NRF7w3BtItOEvq11NCnRTLuobKx7rGb376DCrhrr1EieSOqtzzKUCEA9iz1n1CMHLhLjmDAJRZswpCmNmTSx4aAB0GuwlHx_l75GuA:1u66Uq:kDLH9xBb15MGiypkgSTSr3BPv9b6wYwfUjcujQli7Os	2025-05-03 11:36:32.451407+00
pi51herbubml8x10u0rhsk1s4vks5gba	.eJxVjMsOgjAUBf-la0NKS3m41GiMQYKvGFfN5ZYKSGiksFDjvwsJG7ZnZs6XSLSt7swzb8iS2HOfJkV8rWJM17vNK6jq_f39uW1dc0lO_pEsiIS-K2Rv81aWakg4n48Z4PA1ElVB8zAOmqZry8wZFWei1jkYlderyZ0dFGCLofYxEl7EtNJBABFQyjR3teBMg6Ai9DDnIXoMlMeB-czlEbooaEYp6IwqRn5_XOhHug:1u66yB:lTu4kZJy5HgYAw_66py6YHbonLSUBxtpt1izM9H1v08	2025-05-03 12:06:51.886859+00
wqtarlr8asfo36pq9z9jde8sp1qzkva8	.eJxVjMsOwiAURP-FtSG0vF269xvIvReQqoGktCvjvytJF7qbzDkzLxZg30rYe1rDEtmZTez02yHQI9UB4h3qrXFqdVsX5EPhB-382mJ6Xg7376BAL9-1lN5NiLNW1ovsvYNZGlSOFKosRkQJSISSFJCLGcBajUY7kEaJzN4f1AU3_g:1u7rfJ:GGVEeWl-VED_3cKJ991BYwaMxJXNjbwk2yWhZQZzTEc	2025-05-08 08:10:37.013074+00
8l6lnj15ak70ee9y1tm0f5bvbeqm2a0r	.eJxVjL0OgjAYRd-lsyGlP0DdZMJEBmJ0YGk-vrYCEqr8xETjuwsJi-s959wP0TgObvJ325M9eUS2K4_nNCugfRl24VmORfQ8mHd5usZ-JjuiYZ5qPY920I1ZEs7_xwpw-VqJaaG_-QB9Pw1NFaxKsNExyL2xXbq5fwc1jPVSR6ikUMwZF8eggFLmeOgkZw4klYlAyxMUDIzgwCIWcoUhSlpRCq6ihpHvD0QfR6E:1u67hF:j1vb6npZ9VOxo7JRPgkJbh6YiUfBGBSxwFqKjhwOWi4	2025-05-03 12:53:25.543623+00
j5bacwm6mi0969769exh87jtnn9fffw3	eyJfY3NyZnRva2VuIjoiTU54dU9RdXNlUHpaR2IzdGZJRlNzaGtJajVXMEJISUkifQ:1u5j6F:6Hbz1mrmW9yJE7MvTw3EkTh8pMLx_xD53wAANL-O9aA	2025-05-02 10:37:35.808965+00
5pc2i92hd449jjt7yrxawxmeujiid0a7	.eJxVjFELgjAURv_LnkM2c27rMSIkiOihgl7k7t6ZWmhMRSL6703wxdfvnPN9WY6dL_r26Rq2YdebfNefbH8ZPdK4IzOq0x2EOpxtZTAb2IrlMPRlPnTO5xWFJDbL0QKGr4lQDc2jjbBtel_ZaFKimXbRsSX32s7u4qCErgy1sVzFIBKTIgfNuSzWzqKWQnClQRhKECxHcKQgdUJrJ2RYY10okiiB_f5zMkhJ:1u64o5:qvhTS73mU0u4K2OgL8Er5USXKlXmeqI3o6SS0oHjTPM	2025-05-03 09:48:17.708014+00
d2l7njbgqeojuvm6d3ubsncenl3upj9b	.eJxVjL0OgjAURt-lsyFY-oebRh1MVBITw0bae1vAElAKgzG-u5CwuH7nnO9DCgi9GzpvW7IhtzfL5akpX9maWn_Y-2yLuXre4XoMme8vZEUKPQ5VMQbbFzVOSZL-j0bD9DUTfOi27CLo2qGvTTQr0UJDdO7QNrvF_TuodKjmmsdWC1BUgKM0TZQRMVeKSqEkFZYhcK1YahKQXCNFFBy0US6mQjppGfn-AD68R9c:1u5jrB:LLk2h2Z-zUXhON_g6huSeDkKAiJLCcKLa5GFWGDKRHw	2025-05-02 11:26:05.083626+00
w50ffg3vzrnerr65kw973at4sk47eheb	eyJfY3NyZnRva2VuIjoiVm5TYkkyN21CTUFqNEZwQTdIV3o5U0FyajR1TjIwbWwifQ:1u5kgc:w5Z-SHIo3PYdockgLM3QAYp8RSXeXpF4vD9IgNDnBoQ	2025-05-02 12:19:14.212364+00
9f00inur00bx8b3ucnav7ddwwsgcuks6	eyJfY3NyZnRva2VuIjoieEgwaWRvQ0xJeHZIMVRLTjExalIxUzRta011UmQ5SEMifQ:1u5kiU:4XkVTqQRz045gonrDPsT1ITjJfHUN83mQBqEh_Z8aEU	2025-05-02 12:21:10.536517+00
f3hc6e2t3pv7fsixuoebcf08evfknxd5	.eJxVjL0OgjAURt-ls2lKS4E6SjQaQ-Lgggu5vaX8SCChoEHjuwsJC-t3zvm-JEPX26F75i3Zkwpv94-q00kGj_h0aerifOXHxMWvRKUTvsmOZDAOZTa6vM8qMydCbEcNOH8txNTQFh3Frh36StNFoSt1NOlM3hxWd3NQgivnOkAlfcWtsWEIChjjVnhWCm5BMhn5mIsIfQ7GF8AD7gmFHkqmGQOrmeHk9wdXoUe7:1u5xFo:Qe5xIlG1Z872n89_KdTzprnBOYjh-Z5n81VQYRX8FQo	2025-05-03 01:44:24.513115+00
5p129mfq7qylfll2dloxjz58f4y7v2bu	eyJfY3NyZnRva2VuIjoiRVc0YkxnUGNmQzBpcEkwWENlUVV6NmlkNGZ6MUFHQlYifQ:1u5z3T:VbI5bz3mRoRc6fVtGfNoj2fXbdFqf71yjlhjQDa7r7E	2025-05-03 03:39:47.982736+00
6dc55h3ex1a21siqdb2edsocy0tdvdk2	.eJxVjEsOwjAMBe-SNYpcO2kbluw5Q-U4MS2gROpnhbg7VOoCtm9m3ssMvK3jsC15HqZkzobInH7HyPLIZSfpzuVWrdSyzlO0u2IPuthrTfl5Ody_g5GX8Vu3ErwLqEm7jgMDoFKjnlDZg--dZOrFISdHjC02FKQRDxGANUJC8_4A-nU3tw:1u6rPi:MyWyEqbvRhYA7yc4zFA_yYGyQaU3vcJ4pukYJwlQWtA	2025-05-05 13:42:22.434027+00
og9h9v8ck2rr7afwfm8r70lw66w6228s	.eJxVjEsOwjAMBe-SNYpcO2kbluw5Q-U4MS2gROpnhbg7VOoCtm9m3ssMvK3jsC15HqZkzobInH7HyPLIZSfpzuVWrdSyzlO0u2IPuthrTfl5Ody_g5GX8Vu3ErwLqEm7jgMDoFKjnlDZg--dZOrFISdHjC02FKQRDxGANUJC8_4A-nU3tw:1u8B2J:OOTcqWj2mL8bPeuYMweMB1Bj6ePBbPcl0jbMLzJKTBM	2025-05-09 04:51:39.233141+00
mlrvaxdbbrut21mf4bs8g5o1bc5lfw73	.eJxVjM0KgkAYRd9l1iGf86NOyyBIywKXbeSbvzRDwVGhondPwY3be865X1Jq37uha2xL9sRn7gQqZxBl19u7uEyf5i7PecyntEjDoyI7UuI4VOXobV_WZk4Y244K9fy1EPPE9tEFumuHvlbBogQr9UHeGfs6rO7moEJfzXWkpeCSOuPiGCUCUMdCJxh1KEAkXFuWaE7RcIY0oiGTOtQCFAA6BYaS3x-xQEbX:1u60Lc:qnzXAZotiZVVNWxG5Xs34NsYys8QU3d_GICwsQ7xI9w	2025-05-03 05:02:36.660936+00
axz9bfrel47co45ue627x20z50lhlund	eyJfY3NyZnRva2VuIjoiRzdYdlFkaEJMemZ1QUZnZFUzcDBIMXFCNklkTjBYTTUifQ:1u60iz:POk70dbFJM0-XxXQktcUWkhjnhYJbx8u2LgflGjPSUI	2025-05-03 05:26:45.093092+00
xfi4avc5475gji2itz8qtqipujjb502p	.eJxVjEsOwjAMBe-SNYpcO2kbluw5Q-U4MS2gROpnhbg7VOoCtm9m3ssMvK3jsC15HqZkzobInH7HyPLIZSfpzuVWrdSyzlO0u2IPuthrTfl5Ody_g5GX8Vu3ErwLqEm7jgMDoFKjnlDZg--dZOrFISdHjC02FKQRDxGANUJC8_4A-nU3tw:1u6rVp:K8wafXWm7FmOZBYXwKJUOaLaOGHpHegSfLu1VRhArDk	2025-05-05 13:48:41.768666+00
ybbepmxkgasa3e9ys808n34gqllx71s4	.eJxVjEsOwjAMBe-SNYpcO2kbluw5Q-U4MS2gROpnhbg7VOoCtm9m3ssMvK3jsC15HqZkzobInH7HyPLIZSfpzuVWrdSyzlO0u2IPuthrTfl5Ody_g5GX8Vu3ErwLqEm7jgMDoFKjnlDZg--dZOrFISdHjC02FKQRDxGANUJC8_4A-nU3tw:1u6u1a:VmLXcARC8Ue1BQ_hitwS8PZiEg17sG-zQTCoUOuHAUM	2025-05-05 16:29:38.750218+00
ch40asomt8j1t6qprltujoxazze2q5qe	.eJxVjDsPgjAURv9LZ0NKL-Xh6GJCBB-TupBL2yuIaaXAZPzvQsLi-p1zvg-r1OBpdJ2xbMuKY0cEri9t3x3yEq9tfn7T_uJP7q5voNmGVTiNTTUNxletnhOA_7FGNX8tRD_RPlygnB19WweLEqx0CAqnzWu3un8HDQ7NXMcqk1EmSFOSYIacC4KQJAhCyWUaKQOpigTqCFDEIoRMhUrymnOkmmvBvj-8jUhA:1u65VH:aNQSNPaPLar2ihPkoiXQQaUQwRqccOLCUWsQSTaAz1s	2025-05-03 10:32:55.981105+00
uy86g5p77hcm2oygba0x62xtfxwp0mnm	.eJxVjMsOgjAURP-la0OAtrR16cqYmPhauCP3tpQCBpRSSTT-u5CwYTeZM2e-JNe-t0PXFC3ZkkyO10a8a7G_tYczN6EcL_fPM-xqyU_uRcmG5BAGlwdf9HllJiVZdwh6upqBqaEtu0h37dBXGM2TaKE-OnameOyW7erAgXeTTamSCWLKmVCxVUpCSjNkUjNkNp4jUkCtkWoGWhoLIATHjEugGYst-f0BMg1IGg:1u63nB:3TjD8jwV75TgJtzLJf-_4NpIezCzapOcyed_0Xf6dZw	2025-05-03 08:43:17.478668+00
33fp2qvisb8otc0axc6f6gsi7l846ftr	.eJxVjLsOgjAYRt-lsyG9Aa2bzCrGROPW9PJXEFOU0kXjuwsJC-t3zvm-SNk4-LHvIKAt2gXBX8fTh19oVZPY7bqatam21Xn_lul2RRukdBoblSIMqnVTQuV6NNpOXzNxDx3ufWb7MA6tyWYlW2jMDr2DZ7W4q4NGx2aqsee5EF5onBdOE3CWYyEZeC-tMCVlhWElSCjAEyaAFQyopDktc4KNJ4B-fwqwR3k:1u63qd:vq3o6b88vpn_NSSWmk34IzzWDWyC3LfQ5MOXmyhJ3W0	2025-05-03 08:46:51.961672+00
y4l2wa1el1rzht9rfxevctt6rsv307ir	.eJxVjEsOwjAMBe-SNYpcO2kbluw5Q-U4MS2gROpnhbg7VOoCtm9m3ssMvK3jsC15HqZkzobInH7HyPLIZSfpzuVWrdSyzlO0u2IPuthrTfl5Ody_g5GX8Vu3ErwLqEm7jgMDoFKjnlDZg--dZOrFISdHjC02FKQRDxGANUJC8_4A-nU3tw:1u76qj:Jv_jgx9CQqD4qIGOzpRdum-wsTLmWLSF7ClcvnaoD5Y	2025-05-06 06:11:17.752904+00
\.


--
-- Data for Name: feedback_messages; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.feedback_messages (id, user_id, username, message, created_at, is_processed) FROM stdin;
2	975113235	Mr_Fulani	975113235	2025-02-16 18:24:50.003387+00	t
\.


--
-- Data for Name: groups; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.groups (id, group_name, group_id, topic_id, language, location_type, username) FROM stdin;
1	Website Platform	0	0	ru	web	http://localhost:8001/quizes/
2	Golang EN	-1002301205149	14	en	channel	golang_eng
3	Java RU	-1001943185084	15	ru	channel	fulan_iqro
5	Easy English	-1001973453218	37	ru	group	https://t.me/+0lXESjnT4_Y0ZmJk
\.


--
-- Data for Name: main_fallback_links; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.main_fallback_links (id, language, link) FROM stdin;
\.


--
-- Data for Name: polls_choice; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.polls_choice (id, text, is_correct, votes, poll_id) FROM stdin;
4	I dont know, but I wont to learn	f	1	1
2	answer 2	f	0	2
1	answer 3	t	0	2
3	answer 1	f	1	2
\.


--
-- Data for Name: polls_poll; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.polls_poll (id, question, created_at, author_id) FROM stdin;
1	test question 1	2025-02-20 20:50:27.990656+00	1
2	test question 2	2025-02-20 21:33:45.902718+00	1
3	test question 3	2025-02-20 21:34:00.450848+00	1
\.


--
-- Data for Name: polls_userresponse; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.polls_userresponse (id, responded_at, choice_id, poll_id, user_id) FROM stdin;
1	2025-02-20 20:52:53.986204+00	2	1	1
2	2025-02-20 20:54:34.963083+00	4	1	29
3	2025-02-20 21:35:26.926707+00	3	2	1
\.


--
-- Data for Name: subtopics; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.subtopics (id, name, topic_id) FROM stdin;
16	Error Handling	14
17	Interfaces	14
18	Structs and Methods	14
19	Slices and Maps	14
21	HTTP Server	14
22	Goroutines and Channels	14
23	Testing	14
25	Exception Handling	15
26	Concurrency	14
27	Pointers and Structs	14
28	Streams	15
29	Multithreading	15
30	Generics and Wildcards	15
31	Immutable Objects	15
32	Collections	15
33	Inheritance	15
34	Exceptions	15
35	Slices	14
37	Lambda	15
20	JSON Encoding-Decoding	14
\.


--
-- Data for Name: super_admins; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.super_admins (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined, phone_number, language, is_telegram_admin, is_django_admin, is_super_admin) FROM stdin;
\.


--
-- Data for Name: super_admins_groups; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.super_admins_groups (id, superadmin_id, group_id) FROM stdin;
\.


--
-- Data for Name: super_admins_user_permissions; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.super_admins_user_permissions (id, superadmin_id, permission_id) FROM stdin;
\.


--
-- Data for Name: task_polls; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.task_polls (id, poll_id, poll_question, poll_options, is_anonymous, poll_type, allows_multiple_answers, total_voter_count, poll_link, task_id, translation_id) FROM stdin;
1	6035243492643439190	package main\n\nimport (\n    "errors"\n    "fmt"\n)\n\nfunc divide(a, b float64) (float64, error) {\n    if b == 0 {\n        return 0, errors.New("division by zero")\n    }\n    return a / b, nil\n}\n\nfunc main() {\n    _, err := divide(10, 0)\n    if err != nil {\n        fmt.Println(err)\n    }\n}	"[\\"10\\", \\"nil\\", \\"division by zero\\"]"	t	quiz	f	0	https://t.me/golang_eng/231	14	13
2	6035243492643439196	package main\n\nimport "fmt"\n\ntype Rectangle struct {\n    Width, Height int\n}\n\nfunc (r Rectangle) Area() int {\n    return r.Width * r.Height\n}\n\nfunc main() {\n    rect := Rectangle{Width: 5, Height: 4}\n    fmt.Println(rect.Area())\n}	"[\\"9\\", \\"5\\", \\"20\\"]"	t	quiz	f	0	https://t.me/golang_eng/235	7	6
3	6037495292457124548	package main\n\nimport "fmt"\n\nfunc main() {\n    numbers := []int{1, 2, 3, 4, 5}\n    sum := 0\n    for _, n := range numbers {\n        sum += n\n    }\n    fmt.Println(sum)\n}	"[\\"10\\", \\"5\\", \\"15\\"]"	t	quiz	f	0	https://t.me/golang_eng/243	8	7
5	6037424292352754263	Что произойдет при выполнении следующего кода?\n\n```java\nclass Counter {\n    private int count = 0;\n\n    public synchronized void increment() {\n        count++;\n    }\n\n    public int getCount() {\n        return count;\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) throws InterruptedException {\n        Counter counter = new Counter();\n\n        Thread t1 = new Thread(() -> {\n            for (int i = 0; i < 1000; i++) {\n                counter.increment();\n            }\n        });\n\n        Thread t2 = new Thread(() -> {\n            for (int i = 0; i < 1000; i++) {\n                counter.increment();\n            }\n        });\n\n        t1.start();\n        t2.start();\n\n        t1.join();\n        t2.join();\n\n        System.out.println(counter.getCount());\n    }\n}\n```\n\nВыберите правильный ответ:	"[\\"\\\\u041c\\\\u0435\\\\u043d\\\\u044c\\\\u0448\\\\u0435 2000\\", \\"\\\\u041e\\\\u0448\\\\u0438\\\\u0431\\\\u043a\\\\u0430 \\\\u043a\\\\u043e\\\\u043c\\\\u043f\\\\u0438\\\\u043b\\\\u044f\\\\u0446\\\\u0438\\\\u0438\\", \\"2000\\"]"	t	quiz	f	0	https://t.me/fulan_iqro/13	24	17
6	6037495292457124578	package main\n\nimport (\n    "fmt"\n    "os"\n)\n\nfunc main() {\n    _, err := os.Open("nonexistent.txt")\n    if err != nil {\n        fmt.Println("Error opening file")\n    }\n}	"[\\"nil\\", \\"Success\\", \\"Error opening file\\"]"	t	quiz	f	0	https://t.me/golang_eng/303	13	12
7	5792039874290779245	Какая техника в основном используется в Java для обработки коллизий в HashMap \nи как это влияет на производительность при большом количестве коллизий?	"[\\"\\\\u041d\\\\u0435\\\\u043c\\\\u0435\\\\u0434\\\\u043b\\\\u0435\\\\u043d\\\\u043d\\\\u043e\\\\u0435 \\\\u043f\\\\u043e\\\\u0432\\\\u0442\\\\u043e\\\\u0440\\\\u043d\\\\u043e\\\\u0435 \\\\u0445\\\\u0435\\\\u0448\\\\u0438\\\\u0440\\\\u043e\\\\u0432\\\\u0430\\\\u043d\\\\u0438\\\\u0435; \\\\u043f\\\\u0440\\\\u043e\\\\u0438\\\\u0437\\\\u0432\\\\u043e\\\\u0434\\\\u0438\\\\u0442\\\\u0435\\\\u043b\\\\u044c\\\\u043d\\\\u043e\\\\u0441\\\\u0442\\\\u044c \\\\u043e\\\\u0441\\\\u0442\\\\u0430\\\\u0451\\\\u0442\\\\u0441\\\\u044f \\\\u043f\\\\u043e\\\\u0441\\\\u0442\\\\u043e\\\\u044f\\\\u043d\\\\u043d\\\\u043e\\\\u0439\\", \\"\\\\u0418\\\\u0441\\\\u043f\\\\u043e\\\\u043b\\\\u044c\\\\u0437\\\\u043e\\\\u0432\\\\u0430\\\\u043d\\\\u0438\\\\u0435 \\\\u0441\\\\u0442\\\\u0440\\\\u0443\\\\u043a\\\\u0442\\\\u0443\\\\u0440\\\\u044b \\\\u043d\\\\u0430 \\\\u043e\\\\u0441\\\\u043d\\\\u043e\\\\u0432\\\\u0435 \\\\u0441\\\\u0442\\\\u0435\\\\u043a\\\\u0430; \\\\u043f\\\\u0440\\\\u043e\\\\u0438\\\\u0437\\\\u0432\\\\u043e\\\\u0434\\\\u0438\\\\u0442\\\\u0435\\\\u043b\\\\u044c\\\\u043d\\\\u043e\\\\u0441\\\\u0442\\\\u044c \\\\u0443\\\\u043b\\\\u0443\\\\u0447\\\\u0448\\\\u0430\\\\u0435\\\\u0442\\\\u0441\\\\u044f\\", \\"\\\\u0426\\\\u0435\\\\u043f\\\\u043e\\\\u0447\\\\u043a\\\\u0438 \\\\u0441\\\\u043e \\\\u0441\\\\u0432\\\\u044f\\\\u0437\\\\u0430\\\\u043d\\\\u043d\\\\u044b\\\\u043c\\\\u0438 \\\\u0441\\\\u043f\\\\u0438\\\\u0441\\\\u043a\\\\u0430\\\\u043c\\\\u0438; \\\\u043f\\\\u0440\\\\u043e\\\\u0438\\\\u0437\\\\u0432\\\\u043e\\\\u0434\\\\u0438\\\\u0442\\\\u0435\\\\u043b\\\\u044c\\\\u043d\\\\u043e\\\\u0441\\\\u0442\\\\u044c \\\\u043f\\\\u0430\\\\u0434\\\\u0430\\\\u0435\\\\u0442 \\\\u0434\\\\u043e O(n)\\"]"	t	quiz	f	0	https://t.me/fulan_iqro/53	35	25
8	5791986041170690790	What will the following Go program print?\n\n```go\npackage main\nimport "fmt"\n\ntype Speaker interface {\n    Speak() string\n}\n\ntype Dog struct{}\n\nfunc (d Dog) Speak() string {\n    return "Woof!"\n}\n\nfunc main() {\n    var s Speaker = Dog{}\n    fmt.Println(s.Speak())\n}\n```\n\nChoose the correct output:	"[\\"Error: Dog does not implement Speaker\\", \\"nil\\", \\"Woof!\\"]"	t	quiz	f	0	https://t.me/golang_eng/323	31	24
9	5794135302935152524	В чём основная особенность CopyOnWriteArrayList в Java \nи почему она эффективна при определённых сценариях многопоточности?	"[\\"\\\\u0418\\\\u0437\\\\u043c\\\\u0435\\\\u043d\\\\u0435\\\\u043d\\\\u0438\\\\u044f \\\\u0431\\\\u043b\\\\u043e\\\\u043a\\\\u0438\\\\u0440\\\\u0443\\\\u044e\\\\u0442\\\\u0441\\\\u044f \\\\u0441 \\\\u043f\\\\u043e\\\\u043c\\\\u043e\\\\u0449\\\\u044c\\\\u044e \\\\u0433\\\\u043b\\\\u043e\\\\u0431\\\\u0430\\\\u043b\\\\u044c\\\\u043d\\\\u043e\\\\u0439 \\\\u0431\\\\u043b\\\\u043e\\\\u043a\\\\u0438\\\\u0440\\\\u043e\\\\u0432\\\\u043a\\\\u0438\\", \\"\\\\u042d\\\\u043b\\\\u0435\\\\u043c\\\\u0435\\\\u043d\\\\u0442\\\\u044b \\\\u0430\\\\u0432\\\\u0442\\\\u043e\\\\u043c\\\\u0430\\\\u0442\\\\u0438\\\\u0447\\\\u0435\\\\u0441\\\\u043a\\\\u0438 \\\\u0441\\\\u043e\\\\u0440\\\\u0442\\\\u0438\\\\u0440\\\\u0443\\\\u044e\\\\u0442\\\\u0441\\\\u044f \\\\u043f\\\\u0440\\\\u0438 \\\\u0434\\\\u043e\\\\u0431\\\\u0430\\\\u0432\\\\u043b\\\\u0435\\\\u043d\\\\u0438\\\\u0438\\", \\"\\\\u0412\\\\u0441\\\\u0435 \\\\u0438\\\\u0437\\\\u043c\\\\u0435\\\\u043d\\\\u0435\\\\u043d\\\\u0438\\\\u044f \\\\u043f\\\\u0440\\\\u0438\\\\u0432\\\\u043e\\\\u0434\\\\u044f\\\\u0442 \\\\u043a \\\\u0441\\\\u043e\\\\u0437\\\\u0434\\\\u0430\\\\u043d\\\\u0438\\\\u044e \\\\u043d\\\\u043e\\\\u0432\\\\u043e\\\\u0439 \\\\u043a\\\\u043e\\\\u043f\\\\u0438\\\\u0438 \\\\u0441\\\\u043f\\\\u0438\\\\u0441\\\\u043a\\\\u0430, \\\\u0447\\\\u0442\\\\u043e \\\\u0434\\\\u0435\\\\u043b\\\\u0430\\\\u0435\\\\u0442 \\\\u0447\\\\u0442\\\\u0435\\\\u043d\\\\u0438\\\\u0435 \\\\u043f\\\\u043e\\\\u0442\\\\u043e\\\\u043a\\\\u043e\\\\u0431\\\\u0435\\\\u0437\\\\u043e\\\\u043f\\\\u0430\\\\u0441\\\\u043d\\\\u044b\\\\u043c\\"]"	t	quiz	f	0	https://t.me/fulan_iqro/65	40	30
11	5794135302935152592	List<String> list = new ArrayList<>();\nlist.add("one");\nlist.add("two");\nIterator<String> iterator = list.iterator();\nwhile (iterator.hasNext()) {\n    list.add("three");\n    System.out.println(iterator.next());\n}	"[\\"\\\\u041f\\\\u0440\\\\u043e\\\\u0433\\\\u0440\\\\u0430\\\\u043c\\\\u043c\\\\u0430 \\\\u043d\\\\u0430\\\\u043f\\\\u0435\\\\u0447\\\\u0430\\\\u0442\\\\u0430\\\\u0435\\\\u0442 \\\\u0432\\\\u0441\\\\u0435 \\\\u044d\\\\u043b\\\\u0435\\\\u043c\\\\u0435\\\\u043d\\\\u0442\\\\u044b \\\\u0431\\\\u0435\\\\u0437 \\\\u043e\\\\u0448\\\\u0438\\\\u0431\\\\u043e\\\\u043a\\", \\"\\\\u041f\\\\u0440\\\\u043e\\\\u0433\\\\u0440\\\\u0430\\\\u043c\\\\u043c\\\\u0430 \\\\u0437\\\\u0430\\\\u0446\\\\u0438\\\\u043a\\\\u043b\\\\u0438\\\\u0442\\\\u0441\\\\u044f \\\\u0431\\\\u0435\\\\u0441\\\\u043a\\\\u043e\\\\u043d\\\\u0435\\\\u0447\\\\u043d\\\\u043e\\", \\"\\\\u0411\\\\u0443\\\\u0434\\\\u0435\\\\u0442 \\\\u0432\\\\u044b\\\\u0431\\\\u0440\\\\u043e\\\\u0448\\\\u0435\\\\u043d\\\\u043e ConcurrentModificationException\\"]"	t	quiz	f	0	https://t.me/fulan_iqro/73	45	35
12	5794135302935152618	Queue<Integer> queue = new PriorityQueue<>();\nqueue.add(30);\nqueue.add(20);\nqueue.add(10);\nSystem.out.println(queue.poll());	"[\\"20\\", \\"30\\", \\"10\\"]"	t	quiz	f	0	https://t.me/fulan_iqro/77	49	39
13	5794135302935152626	Queue<Integer> queue = new PriorityQueue<>();\nqueue.add(30);\nqueue.add(20);\nqueue.add(10);\nSystem.out.println(queue.poll());	"[\\"20\\", \\"30\\", \\"10\\"]"	t	quiz	f	0	https://t.me/fulan_iqro/81	52	42
14	5794135302935152642	Map<String, Integer> map = new HashMap<>();\nmap.put("a", 1);\nmap.put("b", 2);\nmap.put("c", 3);\nint sum = 0;\nfor (Integer value : map.values()) {\n    sum += value;\n}\nSystem.out.println(sum);	"[\\"5\\", \\"3\\", \\"6\\"]"	t	quiz	f	0	https://t.me/fulan_iqro/85	55	45
15	5794135302935152678	List<Integer> numbers = Arrays.asList(1, 2, 3);\nList<Integer> result = numbers.stream()\n    .map(n -> n * n)\n    .collect(Collectors.toList());\nSystem.out.println(result);	"[\\"[2, 3, 4]\\", \\"[1, 2, 3]\\", \\"[1, 4, 9]\\"]"	t	quiz	f	0	https://t.me/fulan_iqro/89	57	47
\.


--
-- Data for Name: task_statistics; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.task_statistics (id, attempts, successful, last_attempt_date, task_id, user_id) FROM stdin;
6	4	t	2025-02-22 18:22:19.077784+00	9	1
10	3	t	2025-02-22 18:37:39.686399+00	8	1
11	2	t	2025-02-22 18:45:37.636636+00	5	1
7	5	t	2025-04-09 03:18:03.66087+00	12	1
18	12	t	2025-04-22 06:36:11.08666+00	33	29
19	20	f	2025-04-22 06:36:11.088994+00	34	29
\.


--
-- Data for Name: task_translations; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.task_translations (id, language, question, answers, correct_answer, explanation, task_id, publish_date) FROM stdin;
13	en	package main\n\nimport (\n    "errors"\n    "fmt"\n)\n\nfunc divide(a, b float64) (float64, error) {\n    if b == 0 {\n        return 0, errors.New("division by zero")\n    }\n    return a / b, nil\n}\n\nfunc main() {\n    _, err := divide(10, 0)\n    if err != nil {\n        fmt.Println(err)\n    }\n}	"[\\"10\\", \\"nil\\", \\"division by zero\\"]"	division by zero	Since b is 0, the function returns an error, which is printed.	14	2025-04-25 08:22:31.307565+00
14	en	What will be printed by the following Go code?\n\n```go\npackage main\nimport (\n    "fmt"\n    "time"\n)\n\nfunc main() {\n    ch := make(chan int)\n    go func() {\n        for i := 1; i <= 3; i++ {\n            ch <- i\n        }\n        close(ch)\n    }()\n\n    time.Sleep(1 * time.Second)\n    for v := range ch {\n        fmt.Print(v)\n    }\n}\n```\n\nChoose the correct output:	"[\\"321\\", \\"Runtime panic\\", \\"123\\"]"	123	The goroutine sends values 1 to 3 into the channel, which is then read in order using range.	17	2025-04-25 08:23:00.718039+00
6	en	package main\n\nimport "fmt"\n\ntype Rectangle struct {\n    Width, Height int\n}\n\nfunc (r Rectangle) Area() int {\n    return r.Width * r.Height\n}\n\nfunc main() {\n    rect := Rectangle{Width: 5, Height: 4}\n    fmt.Println(rect.Area())\n}	"[\\"9\\", \\"5\\", \\"20\\"]"	20	The Area method calculates the area as Width * Height, which is 20 for dimensions 5 and 4.	7	2025-04-11 09:03:46.050542+00
4	en	package main\n\nimport (\n    "errors"\n    "fmt"\n)\n\nfunc divide(a, b float64) (float64, error) {\n    if b == 0 {\n        return 0, errors.New("division by zero")\n    }\n    return a / b, nil\n}\n\nfunc main() {\n    _, err := divide(10, 0)\n    if err != nil {\n        fmt.Println(err)\n    }\n}	"[\\"10\\", \\"nil\\", \\"division by zero\\"]"	division by zero	Since b is 0, the function returns an error, which is printed.	5	2025-04-11 09:00:30.28379+00
7	en	package main\n\nimport "fmt"\n\nfunc main() {\n    numbers := []int{1, 2, 3, 4, 5}\n    sum := 0\n    for _, n := range numbers {\n        sum += n\n    }\n    fmt.Println(sum)\n}	"[\\"10\\", \\"5\\", \\"15\\"]"	15	The program sums the numbers in the slice, resulting in 15.	8	2025-04-11 09:04:41.72791+00
8	en	package main\n\nimport (\n    "encoding/json"\n    "fmt"\n)\n\ntype Person struct {\n    Name string `json:"name"`\n    Age  int    `json:"age"`\n}\n\nfunc main() {\n    data := `{"name": "Alice", "age": 30}`\n    var p Person\n    json.Unmarshal([]byte(data), &p)\n    fmt.Println(p.Name, p.Age)\n}	"[\\"30 Alice\\", \\"Error\\", \\"Alice 30\\"]"	Alice 30	The JSON data is unmarshaled into the Person struct and printed as 'Alice 30'.	9	2025-04-11 09:04:58.873773+00
12	en	package main\n\nimport (\n    "fmt"\n    "os"\n)\n\nfunc main() {\n    _, err := os.Open("nonexistent.txt")\n    if err != nil {\n        fmt.Println("Error opening file")\n    }\n}	"[\\"nil\\", \\"Success\\", \\"Error opening file\\"]"	Error opening file	Since the file does not exist, os.Open() returns an error, and the program prints 'Error opening file'.	13	2025-04-11 09:07:24.745727+00
9	en	package main\n\nimport (\n    "fmt"\n    "net/http"\n)\n\nfunc helloHandler(w http.ResponseWriter, r *http.Request) {\n    fmt.Fprintln(w, "Hello, world!")\n}\n\nfunc main() {\n    http.HandleFunc("/", helloHandler)\n    http.ListenAndServe(":8080", nil)\n}	"[\\"It crashes\\", \\"It returns 404\\", \\"It responds with 'Hello, world!'\\"]"	It responds with 'Hello, world!'	The HTTP server listens on port 8080 and uses helloHandler to respond with 'Hello, world!'.	10	2025-04-25 08:16:20.087328+00
11	en	package main\n\nimport "testing"\n\nfunc Add(a, b int) int {\n    return a + b\n}\n\nfunc TestAdd(t *testing.T) {\n    result := Add(2, 3)\n    if result != 5 {\n        t.Errorf("Expected 5, got %d", result)\n    }\n}	"[\\"It runs the main function\\", \\"It starts a server\\", \\"It tests the Add function\\"]"	It tests the Add function	The TestAdd function verifies that Add(2, 3) returns 5.	12	2025-04-25 08:22:09.251136+00
18	ru	Что выведет следующий код?\n\n```java\nimport java.util.*;\n\npublic class WildcardTest {\n    public static void printList(List<? extends Number> list) {\n        for (Number n : list) {\n            System.out.print(n + " ");\n        }\n    }\n\n    public static void main(String[] args) {\n        List<Integer> intList = Arrays.asList(1, 2, 3);\n        List<Double> doubleList = Arrays.asList(1.1, 2.2);\n\n        printList(intList);\n        printList(doubleList);\n    }\n}\n```\n\nВыберите правильный ответ:	"[\\"1 2 3\\", \\"\\\\u041e\\\\u0448\\\\u0438\\\\u0431\\\\u043a\\\\u0430 \\\\u043a\\\\u043e\\\\u043c\\\\u043f\\\\u0438\\\\u043b\\\\u044f\\\\u0446\\\\u0438\\\\u0438\\", \\"1 2 3 1.1 2.2\\"]"	1 2 3 1.1 2.2	Метод принимает список с любым подтипом Number, и оба списка соответствуют — Integer и Double.	25	2025-04-11 09:02:53.191885+00
17	ru	Что произойдет при выполнении следующего кода?\n\n```java\nclass Counter {\n    private int count = 0;\n\n    public synchronized void increment() {\n        count++;\n    }\n\n    public int getCount() {\n        return count;\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) throws InterruptedException {\n        Counter counter = new Counter();\n\n        Thread t1 = new Thread(() -> {\n            for (int i = 0; i < 1000; i++) {\n                counter.increment();\n            }\n        });\n\n        Thread t2 = new Thread(() -> {\n            for (int i = 0; i < 1000; i++) {\n                counter.increment();\n            }\n        });\n\n        t1.start();\n        t2.start();\n\n        t1.join();\n        t2.join();\n\n        System.out.println(counter.getCount());\n    }\n}\n```\n\nВыберите правильный ответ:	"[\\"\\\\u041c\\\\u0435\\\\u043d\\\\u044c\\\\u0448\\\\u0435 2000\\", \\"\\\\u041e\\\\u0448\\\\u0438\\\\u0431\\\\u043a\\\\u0430 \\\\u043a\\\\u043e\\\\u043c\\\\u043f\\\\u0438\\\\u043b\\\\u044f\\\\u0446\\\\u0438\\\\u0438\\", \\"2000\\"]"	2000	Метод `increment` синхронизирован, поэтому потоки не мешают друг другу и итог — 2000.	24	2025-04-11 09:00:30.28379+00
20	ru	Что будет выведено в консоль?\n\n```java\nimport java.util.*;\n\npublic class MapExample {\n    public static void main(String[] args) {\n        Map<String, Integer> map = new HashMap<>();\n        map.put("one", 1);\n        map.put("two", 2);\n        map.put("three", 3);\n\n        System.out.println(map.get("two"));\n    }\n}\n```\n\nВыберите правильный ответ:	"[\\"null\\", \\"\\\\u041e\\\\u0448\\\\u0438\\\\u0431\\\\u043a\\\\u0430 \\\\u043a\\\\u043e\\\\u043c\\\\u043f\\\\u0438\\\\u043b\\\\u044f\\\\u0446\\\\u0438\\\\u0438\\", \\"2\\"]"	2	Метод get("two") возвращает значение по ключу "two", которое равно 2.	27	2025-04-11 09:03:46.050542+00
15	en	What is the output of this Go program?\n\n```go\npackage main\nimport "fmt"\n\ntype User struct {\n    name string\n}\n\nfunc changeName(u *User) {\n    u.name = "Alice"\n}\n\nfunc main() {\n    u := User{name: "Bob"}\n    changeName(&u)\n    fmt.Println(u.name)\n}\n```\n\nChoose the correct answer:	"[\\"Bob\\", \\"Compilation error\\", \\"Alice\\"]"	Alice	The function receives a pointer to the struct, allowing modification of the original object's field.	18	2025-04-25 08:23:42.767763+00
48	ru	List<String> names = Arrays.asList("Tom", "Jerry", "Anna");\nnames.sort((s1, s2) -> s1.length() - s2.length());\nSystem.out.println(names);	"[\\"[Anna, Tom, Jerry]\\", \\"[Jerry, Tom, Anna]\\", \\"[Tom, Anna, Jerry]\\"]"	[Tom, Anna, Jerry]	Список сортируется по длине строк, от самой короткой к самой длинной.	58	\N
47	ru	List<Integer> numbers = Arrays.asList(1, 2, 3);\nList<Integer> result = numbers.stream()\n    .map(n -> n * n)\n    .collect(Collectors.toList());\nSystem.out.println(result);	"[\\"[2, 3, 4]\\", \\"[1, 2, 3]\\", \\"[1, 4, 9]\\"]"	[1, 4, 9]	Каждый элемент возводится в квадрат через функцию map.	57	2025-04-26 12:34:17.27857+00
21	ru	Каков результат выполнения программы?\n\n```java\nclass Animal {\n    void speak() {\n        System.out.println("Animal");\n    }\n}\n\nclass Dog extends Animal {\n    void speak() {\n        System.out.println("Dog");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        Animal a = new Dog();\n        a.speak();\n    }\n}\n```\n\nВыберите правильный ответ:	"[\\"Animal\\", \\"\\\\u041e\\\\u0448\\\\u0438\\\\u0431\\\\u043a\\\\u0430 \\\\u0432\\\\u044b\\\\u043f\\\\u043e\\\\u043b\\\\u043d\\\\u0435\\\\u043d\\\\u0438\\\\u044f\\", \\"Dog\\"]"	Dog	Хотя переменная имеет тип Animal, метод speak() переопределён в Dog и будет вызван из него.	28	2025-04-11 09:04:41.72791+00
22	ru	Что выведет следующая программа?\n\n```java\npublic class ExceptionTest {\n    public static void main(String[] args) {\n        try {\n            System.out.println("try");\n            int x = 1 / 0;\n        } catch (ArithmeticException e) {\n            System.out.println("catch");\n        } finally {\n            System.out.println("finally");\n        }\n    }\n}\n```\n\nВыберите правильный ответ:	"[\\"try finally\\", \\"try catch\\", \\"try catch finally\\"]"	try catch finally	Сначала выполняется блок try, затем ловится ArithmeticException, и в любом случае выполняется finally.	29	2025-04-11 09:04:58.873773+00
24	en	What will the following Go program print?\n\n```go\npackage main\nimport "fmt"\n\ntype Speaker interface {\n    Speak() string\n}\n\ntype Dog struct{}\n\nfunc (d Dog) Speak() string {\n    return "Woof!"\n}\n\nfunc main() {\n    var s Speaker = Dog{}\n    fmt.Println(s.Speak())\n}\n```\n\nChoose the correct output:	"[\\"Error: Dog does not implement Speaker\\", \\"nil\\", \\"Woof!\\"]"	Woof!	Dog implements the Speak method defined in the Speaker interface, so it satisfies the interface and returns "Woof!".	31	2025-04-25 08:23:20.18855+00
25	ru	Какая техника в основном используется в Java для обработки коллизий в HashMap \nи как это влияет на производительность при большом количестве коллизий?	"[\\"\\\\u041d\\\\u0435\\\\u043c\\\\u0435\\\\u0434\\\\u043b\\\\u0435\\\\u043d\\\\u043d\\\\u043e\\\\u0435 \\\\u043f\\\\u043e\\\\u0432\\\\u0442\\\\u043e\\\\u0440\\\\u043d\\\\u043e\\\\u0435 \\\\u0445\\\\u0435\\\\u0448\\\\u0438\\\\u0440\\\\u043e\\\\u0432\\\\u0430\\\\u043d\\\\u0438\\\\u0435; \\\\u043f\\\\u0440\\\\u043e\\\\u0438\\\\u0437\\\\u0432\\\\u043e\\\\u0434\\\\u0438\\\\u0442\\\\u0435\\\\u043b\\\\u044c\\\\u043d\\\\u043e\\\\u0441\\\\u0442\\\\u044c \\\\u043e\\\\u0441\\\\u0442\\\\u0430\\\\u0451\\\\u0442\\\\u0441\\\\u044f \\\\u043f\\\\u043e\\\\u0441\\\\u0442\\\\u043e\\\\u044f\\\\u043d\\\\u043d\\\\u043e\\\\u0439\\", \\"\\\\u0418\\\\u0441\\\\u043f\\\\u043e\\\\u043b\\\\u044c\\\\u0437\\\\u043e\\\\u0432\\\\u0430\\\\u043d\\\\u0438\\\\u0435 \\\\u0441\\\\u0442\\\\u0440\\\\u0443\\\\u043a\\\\u0442\\\\u0443\\\\u0440\\\\u044b \\\\u043d\\\\u0430 \\\\u043e\\\\u0441\\\\u043d\\\\u043e\\\\u0432\\\\u0435 \\\\u0441\\\\u0442\\\\u0435\\\\u043a\\\\u0430; \\\\u043f\\\\u0440\\\\u043e\\\\u0438\\\\u0437\\\\u0432\\\\u043e\\\\u0434\\\\u0438\\\\u0442\\\\u0435\\\\u043b\\\\u044c\\\\u043d\\\\u043e\\\\u0441\\\\u0442\\\\u044c \\\\u0443\\\\u043b\\\\u0443\\\\u0447\\\\u0448\\\\u0430\\\\u0435\\\\u0442\\\\u0441\\\\u044f\\", \\"\\\\u0426\\\\u0435\\\\u043f\\\\u043e\\\\u0447\\\\u043a\\\\u0438 \\\\u0441\\\\u043e \\\\u0441\\\\u0432\\\\u044f\\\\u0437\\\\u0430\\\\u043d\\\\u043d\\\\u044b\\\\u043c\\\\u0438 \\\\u0441\\\\u043f\\\\u0438\\\\u0441\\\\u043a\\\\u0430\\\\u043c\\\\u0438; \\\\u043f\\\\u0440\\\\u043e\\\\u0438\\\\u0437\\\\u0432\\\\u043e\\\\u0434\\\\u0438\\\\u0442\\\\u0435\\\\u043b\\\\u044c\\\\u043d\\\\u043e\\\\u0441\\\\u0442\\\\u044c \\\\u043f\\\\u0430\\\\u0434\\\\u0430\\\\u0435\\\\u0442 \\\\u0434\\\\u043e O(n)\\"]"	Цепочки со связанными списками; производительность падает до O(n)	HashMap использует цепочки (обычно связанные списки) для обработки коллизий. При большом числе коллизий время доступа может ухудшиться с O(1) до O(n).	35	2025-04-25 08:15:13.957372+00
26	ru	Что произойдёт, если TreeMap в Java инициализировать компаратором, нарушающим \nобщий контракт метода compare (то есть несовместимым с equals)?	"[\\"TreeMap \\\\u0432\\\\u044b\\\\u0431\\\\u0440\\\\u043e\\\\u0441\\\\u0438\\\\u0442 \\\\u0438\\\\u0441\\\\u043a\\\\u043b\\\\u044e\\\\u0447\\\\u0435\\\\u043d\\\\u0438\\\\u0435 \\\\u043f\\\\u0440\\\\u0438 \\\\u0432\\\\u0441\\\\u0442\\\\u0430\\\\u0432\\\\u043a\\\\u0435\\", \\"TreeMap \\\\u043f\\\\u0440\\\\u043e\\\\u0438\\\\u0433\\\\u043d\\\\u043e\\\\u0440\\\\u0438\\\\u0440\\\\u0443\\\\u0435\\\\u0442 \\\\u043a\\\\u043e\\\\u043c\\\\u043f\\\\u0430\\\\u0440\\\\u0430\\\\u0442\\\\u043e\\\\u0440 \\\\u0438 \\\\u0438\\\\u0441\\\\u043f\\\\u043e\\\\u043b\\\\u044c\\\\u0437\\\\u0443\\\\u0435\\\\u0442 \\\\u0435\\\\u0441\\\\u0442\\\\u0435\\\\u0441\\\\u0442\\\\u0432\\\\u0435\\\\u043d\\\\u043d\\\\u044b\\\\u0439 \\\\u043f\\\\u043e\\\\u0440\\\\u044f\\\\u0434\\\\u043e\\\\u043a\\", \\"\\\\u041a\\\\u043b\\\\u044e\\\\u0447\\\\u0438, \\\\u0441\\\\u0447\\\\u0438\\\\u0442\\\\u0430\\\\u044e\\\\u0449\\\\u0438\\\\u0435\\\\u0441\\\\u044f \\\\u00ab\\\\u0440\\\\u0430\\\\u0432\\\\u043d\\\\u044b\\\\u043c\\\\u0438\\\\u00bb \\\\u043a\\\\u043e\\\\u043c\\\\u043f\\\\u0430\\\\u0440\\\\u0430\\\\u0442\\\\u043e\\\\u0440\\\\u043e\\\\u043c, \\\\u043c\\\\u043e\\\\u0433\\\\u0443\\\\u0442 \\\\u043f\\\\u0435\\\\u0440\\\\u0435\\\\u0437\\\\u0430\\\\u043f\\\\u0438\\\\u0441\\\\u044b\\\\u0432\\\\u0430\\\\u0442\\\\u044c \\\\u0434\\\\u0440\\\\u0443\\\\u0433 \\\\u0434\\\\u0440\\\\u0443\\\\u0433\\\\u0430\\"]"	Ключи, считающиеся «равными» компаратором, могут перезаписывать друг друга	Если компаратор считает два разных ключа равными, TreeMap будет рассматривать их как дубликаты и перезапишет значение.	36	2025-04-25 08:16:20.087328+00
27	ru	Какое исключение, как правило, выбрасывается при итерации по ArrayList в Java, \nесли другой поток структурно изменяет список в это время?	"[\\"IllegalStateException\\", \\"IndexOutOfBoundsException\\", \\"ConcurrentModificationException\\"]"	ConcurrentModificationException	Если коллекция модифицируется во время итерации через fail-fast итератор, \nJava выбрасывает ConcurrentModificationException.	37	2025-04-25 08:22:09.251136+00
45	ru	Map<String, Integer> map = new HashMap<>();\nmap.put("a", 1);\nmap.put("b", 2);\nmap.put("c", 3);\nint sum = 0;\nfor (Integer value : map.values()) {\n    sum += value;\n}\nSystem.out.println(sum);	"[\\"5\\", \\"3\\", \\"6\\"]"	6	Суммируются все значения: 1 + 2 + 3 = 6.	55	2025-04-26 12:28:40.135402+00
46	ru	List<String> list = Arrays.asList("apple", "banana", "cherry");\nList<String> result = list.stream()\n    .filter(s -> s.startsWith("b"))\n    .collect(Collectors.toList());\nSystem.out.println(result);	"[\\"[apple, banana]\\", \\"[banana, cherry]\\", \\"[banana]\\"]"	[banana]	Фильтруются только элементы, начинающиеся на 'b'.	56	\N
29	ru	Почему объекты-ключи могут быть автоматически удалены из WeakHashMap в Java \nи какая польза от этого поведения?	"[\\"\\\\u041f\\\\u043e\\\\u0442\\\\u043e\\\\u043c\\\\u0443 \\\\u0447\\\\u0442\\\\u043e WeakHashMap \\\\u043e\\\\u0447\\\\u0438\\\\u0449\\\\u0430\\\\u0435\\\\u0442 \\\\u044d\\\\u043b\\\\u0435\\\\u043c\\\\u0435\\\\u043d\\\\u0442\\\\u044b \\\\u043f\\\\u043e \\\\u0442\\\\u0430\\\\u0439\\\\u043c\\\\u0435\\\\u0440\\\\u0443\\", \\"\\\\u041f\\\\u043e\\\\u0442\\\\u043e\\\\u043c\\\\u0443 \\\\u0447\\\\u0442\\\\u043e WeakHashMap \\\\u0443\\\\u0434\\\\u0430\\\\u043b\\\\u044f\\\\u0435\\\\u0442 \\\\u044d\\\\u043b\\\\u0435\\\\u043c\\\\u0435\\\\u043d\\\\u0442\\\\u044b \\\\u043f\\\\u0440\\\\u0438 \\\\u0438\\\\u0437\\\\u043c\\\\u0435\\\\u043d\\\\u0435\\\\u043d\\\\u0438\\\\u0438 \\\\u0438\\\\u0445 \\\\u0437\\\\u043d\\\\u0430\\\\u0447\\\\u0435\\\\u043d\\\\u0438\\\\u0439\\", \\"\\\\u041f\\\\u043e\\\\u0442\\\\u043e\\\\u043c\\\\u0443 \\\\u0447\\\\u0442\\\\u043e WeakHashMap \\\\u043f\\\\u0440\\\\u0438\\\\u043c\\\\u0435\\\\u043d\\\\u044f\\\\u0435\\\\u0442 \\\\u0441\\\\u043b\\\\u0430\\\\u0431\\\\u044b\\\\u0435 \\\\u0441\\\\u0441\\\\u044b\\\\u043b\\\\u043a\\\\u0438, \\\\u0447\\\\u0442\\\\u043e \\\\u043f\\\\u043e\\\\u043c\\\\u043e\\\\u0433\\\\u0430\\\\u0435\\\\u0442 \\\\u0438\\\\u0437\\\\u0431\\\\u0435\\\\u0433\\\\u0430\\\\u0442\\\\u044c \\\\u0443\\\\u0442\\\\u0435\\\\u0447\\\\u0435\\\\u043a \\\\u043f\\\\u0430\\\\u043c\\\\u044f\\\\u0442\\\\u0438\\"]"	Потому что WeakHashMap применяет слабые ссылки, что помогает избегать утечек памяти	В WeakHashMap используются слабые ссылки на ключи, что позволяет сборщику мусора удалять записи, если на ключи больше нет жёстких ссылок.	39	2025-04-27 09:37:51.679281+00
30	ru	В чём основная особенность CopyOnWriteArrayList в Java \nи почему она эффективна при определённых сценариях многопоточности?	"[\\"\\\\u0418\\\\u0437\\\\u043c\\\\u0435\\\\u043d\\\\u0435\\\\u043d\\\\u0438\\\\u044f \\\\u0431\\\\u043b\\\\u043e\\\\u043a\\\\u0438\\\\u0440\\\\u0443\\\\u044e\\\\u0442\\\\u0441\\\\u044f \\\\u0441 \\\\u043f\\\\u043e\\\\u043c\\\\u043e\\\\u0449\\\\u044c\\\\u044e \\\\u0433\\\\u043b\\\\u043e\\\\u0431\\\\u0430\\\\u043b\\\\u044c\\\\u043d\\\\u043e\\\\u0439 \\\\u0431\\\\u043b\\\\u043e\\\\u043a\\\\u0438\\\\u0440\\\\u043e\\\\u0432\\\\u043a\\\\u0438\\", \\"\\\\u042d\\\\u043b\\\\u0435\\\\u043c\\\\u0435\\\\u043d\\\\u0442\\\\u044b \\\\u0430\\\\u0432\\\\u0442\\\\u043e\\\\u043c\\\\u0430\\\\u0442\\\\u0438\\\\u0447\\\\u0435\\\\u0441\\\\u043a\\\\u0438 \\\\u0441\\\\u043e\\\\u0440\\\\u0442\\\\u0438\\\\u0440\\\\u0443\\\\u044e\\\\u0442\\\\u0441\\\\u044f \\\\u043f\\\\u0440\\\\u0438 \\\\u0434\\\\u043e\\\\u0431\\\\u0430\\\\u0432\\\\u043b\\\\u0435\\\\u043d\\\\u0438\\\\u0438\\", \\"\\\\u0412\\\\u0441\\\\u0435 \\\\u0438\\\\u0437\\\\u043c\\\\u0435\\\\u043d\\\\u0435\\\\u043d\\\\u0438\\\\u044f \\\\u043f\\\\u0440\\\\u0438\\\\u0432\\\\u043e\\\\u0434\\\\u044f\\\\u0442 \\\\u043a \\\\u0441\\\\u043e\\\\u0437\\\\u0434\\\\u0430\\\\u043d\\\\u0438\\\\u044e \\\\u043d\\\\u043e\\\\u0432\\\\u043e\\\\u0439 \\\\u043a\\\\u043e\\\\u043f\\\\u0438\\\\u0438 \\\\u0441\\\\u043f\\\\u0438\\\\u0441\\\\u043a\\\\u0430, \\\\u0447\\\\u0442\\\\u043e \\\\u0434\\\\u0435\\\\u043b\\\\u0430\\\\u0435\\\\u0442 \\\\u0447\\\\u0442\\\\u0435\\\\u043d\\\\u0438\\\\u0435 \\\\u043f\\\\u043e\\\\u0442\\\\u043e\\\\u043a\\\\u043e\\\\u0431\\\\u0435\\\\u0437\\\\u043e\\\\u043f\\\\u0430\\\\u0441\\\\u043d\\\\u044b\\\\u043c\\"]"	Все изменения приводят к созданию новой копии списка, что делает чтение потокобезопасным	CopyOnWriteArrayList создаёт новую копию массива при изменениях, обеспечивая безопасное чтение без блокировок.	40	2025-04-26 12:12:40.571983+00
35	ru	List<String> list = new ArrayList<>();\nlist.add("one");\nlist.add("two");\nIterator<String> iterator = list.iterator();\nwhile (iterator.hasNext()) {\n    list.add("three");\n    System.out.println(iterator.next());\n}	"[\\"\\\\u041f\\\\u0440\\\\u043e\\\\u0433\\\\u0440\\\\u0430\\\\u043c\\\\u043c\\\\u0430 \\\\u043d\\\\u0430\\\\u043f\\\\u0435\\\\u0447\\\\u0430\\\\u0442\\\\u0430\\\\u0435\\\\u0442 \\\\u0432\\\\u0441\\\\u0435 \\\\u044d\\\\u043b\\\\u0435\\\\u043c\\\\u0435\\\\u043d\\\\u0442\\\\u044b \\\\u0431\\\\u0435\\\\u0437 \\\\u043e\\\\u0448\\\\u0438\\\\u0431\\\\u043e\\\\u043a\\", \\"\\\\u041f\\\\u0440\\\\u043e\\\\u0433\\\\u0440\\\\u0430\\\\u043c\\\\u043c\\\\u0430 \\\\u0437\\\\u0430\\\\u0446\\\\u0438\\\\u043a\\\\u043b\\\\u0438\\\\u0442\\\\u0441\\\\u044f \\\\u0431\\\\u0435\\\\u0441\\\\u043a\\\\u043e\\\\u043d\\\\u0435\\\\u0447\\\\u043d\\\\u043e\\", \\"\\\\u0411\\\\u0443\\\\u0434\\\\u0435\\\\u0442 \\\\u0432\\\\u044b\\\\u0431\\\\u0440\\\\u043e\\\\u0448\\\\u0435\\\\u043d\\\\u043e ConcurrentModificationException\\"]"	Будет выброшено ConcurrentModificationException	Модификация коллекции во время итерации приводит к выбрасыванию ConcurrentModificationException в Java.	45	2025-04-26 12:20:25.454909+00
34	ru	\nMap<String, Integer> map = new HashMap<>();\nmap.put("A", 1);\nmap.put("B", 2);\nmap.put("A", 3);\nSystem.out.println(map.get("A"));	"[\\"1\\", \\"2\\", \\"3\\"]"	3	Повторная вставка элемента с тем же ключом заменяет старое значение новым. Поэтому `map.get("A")` вернет 3.	44	\N
36	ru	Set<Integer> set = new TreeSet<>();\nset.add(5);\nset.add(1);\nset.add(10);\nset.add(1);\nSystem.out.println(set);	"[\\"[5, 1, 10]\\", \\"[10, 5, 1]\\", \\"[1, 5, 10]\\"]"	[1, 5, 10]	TreeSet автоматически сортирует элементы по естественному порядку. Дубликаты игнорируются.	46	\N
37	ru	List<String> list = new ArrayList<>();\nlist.add("apple");\nlist.add("banana");\nlist.remove("apple");\nSystem.out.println(list.size());	"[\\"2\\", \\"0\\", \\"1\\"]"	1	Удаляется элемент 'apple', остаётся один элемент 'banana', значит размер списка равен 1.	47	\N
38	ru	Set<String> set = new HashSet<>();\nset.add("dog");\nset.add("cat");\nset.add("dog");\nSystem.out.println(set.size());	"[\\"3\\", \\"1\\", \\"2\\"]"	2	HashSet хранит только уникальные элементы, поэтому дубликат 'dog' не добавится.	48	\N
39	ru	Queue<Integer> queue = new PriorityQueue<>();\nqueue.add(30);\nqueue.add(20);\nqueue.add(10);\nSystem.out.println(queue.poll());	"[\\"20\\", \\"30\\", \\"10\\"]"	10	PriorityQueue всегда возвращает элемент с наименьшим значением первым.	49	2025-04-26 12:24:57.635009+00
40	ru	List<String> list = new ArrayList<>();\nlist.add("apple");\nlist.add("banana");\nlist.remove("apple");\nSystem.out.println(list.size());	"[\\"2\\", \\"0\\", \\"1\\"]"	1	Удаляется элемент 'apple', остаётся один элемент 'banana', значит размер списка равен 1.	50	\N
41	ru	Set<String> set = new HashSet<>();\nset.add("dog");\nset.add("cat");\nset.add("dog");\nSystem.out.println(set.size());	"[\\"3\\", \\"1\\", \\"2\\"]"	2	HashSet хранит только уникальные элементы, поэтому дубликат 'dog' не добавится.	51	\N
42	ru	Queue<Integer> queue = new PriorityQueue<>();\nqueue.add(30);\nqueue.add(20);\nqueue.add(10);\nSystem.out.println(queue.poll());	"[\\"20\\", \\"30\\", \\"10\\"]"	10	PriorityQueue всегда возвращает элемент с наименьшим значением первым.	52	2025-04-26 12:26:06.883088+00
43	ru	List<Integer> numbers = new ArrayList<>();\nnumbers.add(1);\nnumbers.add(2);\nnumbers.add(3);\nfor (int i = 0; i < numbers.size(); i++) {\n    if (numbers.get(i) % 2 == 0) {\n        numbers.remove(i);\n    }\n}\nSystem.out.println(numbers);	"[\\"[1, 2, 3]\\", \\"[3]\\", \\"[1, 3]\\"]"	[1, 3]	Число 2 удаляется в процессе итерации, в итоге остаются 1 и 3.	53	\N
44	ru	List<String> list = new LinkedList<>();\nlist.add("one");\nlist.add("two");\nlist.add("three");\nString result = "";\nfor (String s : list) {\n    result += s.substring(0, 1);\n}\nSystem.out.println(result);	"[\\"ottw\\", \\"ottth\\", \\"ott\\"]"	ott	Берётся первая буква каждого элемента: 'o', 't', 't', склеиваются в строку.	54	\N
\.


--
-- Data for Name: tasks; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.tasks (id, difficulty, published, create_date, publish_date, image_url, external_link, translation_group_id, error, message_id, group_id, subtopic_id, topic_id) FROM stdin;
7	easy	t	2025-02-22 07:10:09.811662+00	2025-04-11 09:03:57.298668+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/golang_structs_and_methods_en_7.png	\N	ca945fb9-8ed4-4601-ad84-75b7a48b4d33	f	\N	2	18	14
39	hard	t	2025-04-26 12:11:52.35966+00	2025-04-27 09:37:59.514141+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/java_collections_ru_39.png	\N	48379cd9-2af4-4e06-bd66-b79414cb60ee	f	\N	3	32	15
8	easy	t	2025-02-22 07:10:09.820936+00	2025-04-11 09:04:53.509936+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/golang_slices_and_maps_en_8.png	\N	8f899d13-ac94-4c73-a6ba-c35a0b8f2828	f	\N	2	19	14
28	medium	t	2025-04-11 08:21:03.806833+00	2025-04-11 09:04:53.509949+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/java_inheritance_ru_28.png	\N	7b4954fc-3f5d-49af-b9a6-f023b42e5b68	f	\N	3	33	15
29	medium	t	2025-04-11 08:21:03.822777+00	2025-04-11 09:05:14.363131+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/java_exceptions_ru_29.png	\N	31ff243d-0413-4518-9f21-306fb37ea053	f	\N	3	34	15
13	medium	t	2025-04-09 14:53:21.789786+00	2025-04-11 09:07:29.837596+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/golang_error_handling_en_13.png	\N	66771392-8f36-4761-9d55-941c4cf6a97b	f	\N	2	16	14
33	medium	f	2025-04-22 06:36:11.058286+00	\N	\N	\N	3acc972b-35cf-4875-a2e4-81271baf2f99	f	\N	\N	\N	186
34	hard	f	2025-04-22 06:36:11.059792+00	\N	\N	\N	ccd1e24a-daca-4cc4-bee2-dd00b6d600da	f	\N	\N	\N	187
40	hard	t	2025-04-26 12:11:52.367214+00	2025-04-26 12:12:44.662236+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/java_collections_ru_40.png	\N	f78808d7-1c57-4988-8630-4b5f77df18ea	f	\N	3	32	15
5	medium	t	2025-02-22 07:10:09.789423+00	2025-04-11 09:00:41.281332+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/golang_error_handling_en_5.png	\N	46571e11-568d-474f-bb93-3332c4475ba7	f	\N	2	16	14
35	hard	t	2025-04-25 08:14:39.4028+00	2025-04-25 08:15:20.056346+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/java_collections_ru_35.png	\N	22083420-d6ef-4215-98f6-456308e89738	f	\N	3	32	15
36	hard	t	2025-04-25 08:14:39.668453+00	2025-04-25 08:16:34.027627+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/java_collections_ru_36.png	\N	9510fc44-dc18-4fd0-85f1-4cb352ff33e7	f	\N	3	32	15
12	easy	t	2025-02-22 07:10:09.854851+00	2025-04-25 08:22:24.13772+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/golang_testing_en_12.png	\N	be8a231d-4223-4d3c-ab1b-74b6c0c23d3b	f	\N	2	23	14
37	hard	t	2025-04-25 08:14:39.679694+00	2025-04-25 08:22:24.137746+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/java_collections_ru_37.png	\N	5423c920-9eff-484e-9ff1-8f2c3ccea9cb	f	\N	3	32	15
14	medium	t	2025-04-09 14:53:21.816881+00	2025-04-25 08:22:35.918488+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/golang_error_handling_en_14.png	\N	090423c4-6f90-4b01-85a3-ca1270fc6dae	f	\N	2	16	14
17	hard	t	2025-04-11 05:36:45.039505+00	2025-04-25 08:23:08.42274+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/golang_concurrency_en_17.png	\N	9a570894-08a1-46d3-9c1d-a3101983cc4a	f	\N	2	26	14
31	medium	t	2025-04-11 08:25:28.697709+00	2025-04-25 08:23:25.289146+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/golang_interfaces_en_31.png	\N	3430e93e-1037-4589-ac91-0798edbff204	f	\N	2	17	14
18	hard	t	2025-04-11 05:36:45.236555+00	2025-04-25 08:23:49.216086+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/golang_pointers_and_structs_en_18.png	\N	d46d2bc4-d19f-4231-b4e1-8bd8cfd7b179	f	\N	2	27	14
24	hard	t	2025-04-11 06:05:18.690589+00	2025-04-11 09:00:41.281198+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/java_multithreading_ru_24.png	\N	6e712169-f118-4df2-8a9c-7d439a5d3dea	f	\N	3	29	15
44	hard	f	2025-04-26 12:20:02.442861+00	\N	\N	\N	1a3f0dc1-a3ad-42fd-acc7-e696a796944a	f	\N	3	32	15
46	hard	f	2025-04-26 12:20:02.625694+00	\N	\N	\N	22c4acb1-d7c7-4395-89a3-55b89e0ce01d	f	\N	3	32	15
45	hard	t	2025-04-26 12:20:02.619219+00	2025-04-26 12:20:30.579166+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/java_collections_ru_45.png	\N	1a9a9081-91dd-44c3-99eb-c0222b1de7ce	f	\N	3	32	15
47	medium	f	2025-04-26 12:24:43.341789+00	\N	\N	\N	40ef0cba-c7a9-481b-b1c8-ee8b7544ea52	f	\N	3	32	15
48	medium	f	2025-04-26 12:24:43.501327+00	\N	\N	\N	354bdfa0-8043-4e3f-bcd4-33fba3412f6d	f	\N	3	32	15
49	medium	t	2025-04-26 12:24:43.509314+00	2025-04-26 12:25:03.734818+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/java_collections_ru_49.png	\N	9608cd6d-31aa-49f4-9621-73a6b7510e50	f	\N	3	32	15
50	medium	f	2025-04-26 12:25:53.630164+00	\N	\N	\N	c7b65583-3652-47f2-aaaf-bf0f7c09d527	f	\N	3	32	15
51	medium	f	2025-04-26 12:25:53.848439+00	\N	\N	\N	be647b1d-d00d-47fe-ae42-e5070aa89dba	f	\N	3	32	15
52	medium	t	2025-04-26 12:25:53.854242+00	2025-04-26 12:26:11.997305+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/java_collections_ru_52.png	\N	21fc0de0-3825-4933-88f7-4e29a6bd0fa6	f	\N	3	32	15
53	medium	f	2025-04-26 12:28:31.039532+00	\N	\N	\N	3e599550-774c-4e48-b2a9-be6993c69893	f	\N	3	32	15
54	medium	f	2025-04-26 12:28:31.462974+00	\N	\N	\N	8972fdcb-a8a5-4bc7-9c12-ebfe91ed850e	f	\N	3	32	15
55	medium	t	2025-04-26 12:28:31.469704+00	2025-04-26 12:28:45.344767+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/java_collections_ru_55.png	\N	d4e63f4b-14f9-45c1-a352-1f7f4bb3459e	f	\N	3	32	15
27	medium	t	2025-04-11 08:21:03.777234+00	2025-04-11 09:03:57.298709+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/java_collections_ru_27.png	\N	ede4635b-ef3d-40b3-b3d4-515860eeb7bd	f	\N	3	32	15
25	hard	t	2025-04-11 06:05:18.705307+00	2025-04-11 09:03:03.871021+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/java_generics_and_wildcards_ru_25.png	\N	6ef2a0c3-c1fb-4bc2-b629-ddbea9bbbbe3	f	\N	3	30	15
9	medium	t	2025-02-22 07:10:09.829721+00	2025-04-11 09:05:14.363108+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/golang_json_encoding/decoding_en_9.png	\N	24845230-0bcd-4dbe-b901-1d05d0d14340	f	\N	2	20	14
10	medium	t	2025-02-22 07:10:09.837907+00	2025-04-25 08:16:34.027562+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/golang_http_server_en_10.png	\N	1983d30e-937c-4d78-ab53-895bcd928373	f	\N	2	21	14
56	medium	f	2025-04-26 12:34:05.827314+00	\N	\N	\N	eddd5fcc-cb6f-450c-a7a7-b8064d7f1a33	f	\N	3	37	15
58	medium	f	2025-04-26 12:34:05.847633+00	\N	\N	\N	3de61422-c89e-4787-bc14-c9635768f8ef	f	\N	3	37	15
57	medium	t	2025-04-26 12:34:05.837287+00	2025-04-26 12:34:23.394315+00	https://fulani-quiz-images-new.s3.eu-north-1.amazonaws.com/java_lambda_ru_57.png	\N	768b3fc7-e9ee-4c4a-955d-daa417fceea0	f	\N	3	37	15
\.


--
-- Data for Name: topics; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.topics (id, name, description, icon) FROM stdin;
10	SQL	Description for SQL	blog-images/icons/default-icon.png
12	Machine Learning	Description for Machine Learning	blog-images/icons/default-icon.png
13	Test Topic	Test Description	blog-images/icons/default-icon.png
16	C	\N	blog-images/icons/default-icon.png
17	C++	\N	blog-images/icons/default-icon.png
18	C#	\N	blog-images/icons/default-icon.png
19	TypeScript	\N	blog-images/icons/default-icon.png
20	Ruby	\N	blog-images/icons/default-icon.png
21	Kotlin	\N	blog-images/icons/default-icon.png
22	Swift	\N	blog-images/icons/default-icon.png
23	PHP	\N	blog-images/icons/default-icon.png
24	R	\N	blog-images/icons/default-icon.png
25	Perl	\N	blog-images/icons/default-icon.png
26	Rust	\N	blog-images/icons/default-icon.png
27	Scala	\N	blog-images/icons/default-icon.png
28	Haskell	\N	blog-images/icons/default-icon.png
29	Objective-C	\N	blog-images/icons/default-icon.png
30	Dart	\N	blog-images/icons/default-icon.png
31	Elixir	\N	blog-images/icons/default-icon.png
32	F#	\N	blog-images/icons/default-icon.png
33	Lua	\N	blog-images/icons/default-icon.png
34	MATLAB	\N	blog-images/icons/default-icon.png
35	Shell	\N	blog-images/icons/default-icon.png
37	Django	\N	blog-images/icons/default-icon.png
38	Flask	\N	blog-images/icons/default-icon.png
39	FastAPI	\N	blog-images/icons/default-icon.png
40	Spring	\N	blog-images/icons/default-icon.png
41	React	\N	blog-images/icons/default-icon.png
42	Vue.js	\N	blog-images/icons/default-icon.png
44	Express.js	\N	blog-images/icons/default-icon.png
45	Next.js	\N	blog-images/icons/default-icon.png
46	Nuxt.js	\N	blog-images/icons/default-icon.png
47	Svelte	\N	blog-images/icons/default-icon.png
48	Laravel	\N	blog-images/icons/default-icon.png
49	Symfony	\N	blog-images/icons/default-icon.png
50	Ruby on Rails	\N	blog-images/icons/default-icon.png
53	TailwindCSS	\N	blog-images/icons/default-icon.png
54	TensorFlow	\N	blog-images/icons/default-icon.png
55	PyTorch	\N	blog-images/icons/default-icon.png
56	Keras	\N	blog-images/icons/default-icon.png
57	Scikit-learn	\N	blog-images/icons/default-icon.png
58	Pandas	\N	blog-images/icons/default-icon.png
59	NumPy	\N	blog-images/icons/default-icon.png
60	Matplotlib	\N	blog-images/icons/default-icon.png
61	PostgreSQL	\N	blog-images/icons/default-icon.png
62	MySQL	\N	blog-images/icons/default-icon.png
63	SQLite	\N	blog-images/icons/default-icon.png
64	MongoDB	\N	blog-images/icons/default-icon.png
65	Redis	\N	blog-images/icons/default-icon.png
66	Cassandra	\N	blog-images/icons/default-icon.png
67	DynamoDB	\N	blog-images/icons/default-icon.png
68	Firebase	\N	blog-images/icons/default-icon.png
69	Elasticsearch	\N	blog-images/icons/default-icon.png
70	Neo4j	\N	blog-images/icons/default-icon.png
71	MariaDB	\N	blog-images/icons/default-icon.png
72	Oracle Database	\N	blog-images/icons/default-icon.png
73	Docker	\N	blog-images/icons/default-icon.png
74	Kubernetes	\N	blog-images/icons/default-icon.png
76	Terraform	\N	blog-images/icons/default-icon.png
79	Google Cloud	\N	blog-images/icons/default-icon.png
80	Jenkins	\N	blog-images/icons/default-icon.png
81	GitLab CI/CD	\N	blog-images/icons/default-icon.png
82	CircleCI	\N	blog-images/icons/default-icon.png
83	Travis CI	\N	blog-images/icons/default-icon.png
84	Prometheus	\N	blog-images/icons/default-icon.png
85	Grafana	\N	blog-images/icons/default-icon.png
86	Consul	\N	blog-images/icons/default-icon.png
87	HashiCorp Vault	\N	blog-images/icons/default-icon.png
88	OpenShift	\N	blog-images/icons/default-icon.png
89	Vagrant	\N	blog-images/icons/default-icon.png
91	Ethereum	\N	blog-images/icons/default-icon.png
92	Solidity	\N	blog-images/icons/default-icon.png
93	Hyperledger	\N	blog-images/icons/default-icon.png
94	React Native	\N	blog-images/icons/default-icon.png
95	Flutter	\N	blog-images/icons/default-icon.png
96	Ionic	\N	blog-images/icons/default-icon.png
97	Unity	\N	blog-images/icons/default-icon.png
98	Unreal Engine	\N	blog-images/icons/default-icon.png
99	Qt	\N	blog-images/icons/default-icon.png
100	Electron	\N	blog-images/icons/default-icon.png
101	WebAssembly	\N	blog-images/icons/default-icon.png
102	gRPC	\N	blog-images/icons/default-icon.png
103	REST APIs	\N	blog-images/icons/default-icon.png
104	GraphQL	\N	blog-images/icons/default-icon.png
105	WebRTC	\N	blog-images/icons/default-icon.png
106	Microservices	\N	blog-images/icons/default-icon.png
107	Monoliths	\N	blog-images/icons/default-icon.png
108	Serverless	\N	blog-images/icons/default-icon.png
109	Edge Computing	\N	blog-images/icons/default-icon.png
110	Game Development	\N	blog-images/icons/default-icon.png
111	Godot	\N	blog-images/icons/default-icon.png
112	CryEngine	\N	blog-images/icons/default-icon.png
113	Construct	\N	blog-images/icons/default-icon.png
115	OpenGL	\N	blog-images/icons/default-icon.png
116	DirectX	\N	blog-images/icons/default-icon.png
117	Vulkan	\N	blog-images/icons/default-icon.png
118	Deep Learning	\N	blog-images/icons/default-icon.png
119	Natural Language Processing	\N	blog-images/icons/default-icon.png
120	Computer Vision	\N	blog-images/icons/default-icon.png
121	Reinforcement Learning	\N	blog-images/icons/default-icon.png
122	Chatbots	\N	blog-images/icons/default-icon.png
124	Explainable AI	\N	blog-images/icons/default-icon.png
125	Data Science	\N	blog-images/icons/default-icon.png
127	Data Visualization	\N	blog-images/icons/default-icon.png
128	Data Engineering	\N	blog-images/icons/default-icon.png
129	Business Intelligence	\N	blog-images/icons/default-icon.png
131	Hadoop	\N	blog-images/icons/default-icon.png
132	Tableau	\N	blog-images/icons/default-icon.png
133	Power BI	\N	blog-images/icons/default-icon.png
134	Cybersecurity	\N	blog-images/icons/default-icon.png
135	Penetration Testing	\N	blog-images/icons/default-icon.png
136	Ethical Hacking	\N	blog-images/icons/default-icon.png
137	Cryptography	\N	blog-images/icons/default-icon.png
138	Network Security	\N	blog-images/icons/default-icon.png
139	SIEM	\N	blog-images/icons/default-icon.png
140	OWASP	\N	blog-images/icons/default-icon.png
141	Nmap	\N	blog-images/icons/default-icon.png
142	Metasploit	\N	blog-images/icons/default-icon.png
144	Git	\N	blog-images/icons/default-icon.png
145	GitHub	\N	blog-images/icons/default-icon.png
146	GitLab	\N	blog-images/icons/default-icon.png
148	VS Code	\N	blog-images/icons/default-icon.png
149	IntelliJ IDEA	\N	blog-images/icons/default-icon.png
150	PyCharm	\N	blog-images/icons/default-icon.png
151	WebStorm	\N	blog-images/icons/default-icon.png
152	Eclipse	\N	blog-images/icons/default-icon.png
153	NetBeans	\N	blog-images/icons/default-icon.png
155	Sublime Text	\N	blog-images/icons/default-icon.png
156	Data Structures	\N	blog-images/icons/default-icon.png
157	Operating Systems	\N	blog-images/icons/default-icon.png
158	Computer Networks	\N	blog-images/icons/default-icon.png
159	Compiler Design	\N	blog-images/icons/default-icon.png
160	Theory of Computation	\N	blog-images/icons/default-icon.png
161	Parallel Computing	\N	blog-images/icons/default-icon.png
162	Quantum Computing	\N	blog-images/icons/default-icon.png
164	iOS	\N	blog-images/icons/default-icon.png
165	SwiftUI	\N	blog-images/icons/default-icon.png
166	Jetpack Compose	\N	blog-images/icons/default-icon.png
168	Scrum	\N	blog-images/icons/default-icon.png
169	Kanban	\N	blog-images/icons/default-icon.png
170	Lean Development	\N	blog-images/icons/default-icon.png
171	Design Patterns	\N	blog-images/icons/default-icon.png
172	Clean Code	\N	blog-images/icons/default-icon.png
173	Refactoring	\N	blog-images/icons/default-icon.png
174	Code Review	\N	blog-images/icons/default-icon.png
175	Technical Debt	\N	blog-images/icons/default-icon.png
176	Testing	\N	blog-images/icons/default-icon.png
177	Unit Testing	\N	blog-images/icons/default-icon.png
178	Integration Testing	\N	blog-images/icons/default-icon.png
179	Load Testing	\N	blog-images/icons/default-icon.png
181	UI/UX Design	\N	blog-images/icons/default-icon.png
75	Ansible	\N	/static/blog/images/icons/ansible-icon.png
180	API Testing	\N	/static/blog/images/icons/api-testing-icon.png
36	Assembly	\N	/static/blog/images/icons/assembly-icon.png
77	AWS	\N	/static/blog/images/icons/aws-icon.png
126	Big Data	\N	/static/blog/images/icons/big-data-icon.png
114	Blender	\N	/static/blog/images/icons/blender-icon.png
52	Bootstrap	\N	/static/blog/images/icons/bootstrap-icon.png
14	Golang	\N	/static/blog/images/icons/golang-icon.png
9	JavaScript	Description for JavaScript	/static/blog/images/icons/javascript-icon.png
43	Angular	\N	/static/blog/images/icons/angular-icon.png
182	Human-Computer Interaction	\N	blog-images/icons/default-icon.png
184	English	\N	blog-images/icons/default-icon.png
183	Accessibility	\N	/static/blog/images/icons/accessibility-icon.png
167	Agile Methodologies	\N	/static/blog/images/icons/agile-icon.png
123	AI Ethics	\N	/static/blog/images/icons/ai-ethics-icon.png
11	Algorithms	Description for Algorithms	/static/blog/images/icons/algorithms-icon.png
163	Android	\N	/static/blog/images/icons/android-icon.png
130	Apache Spark	\N	/static/blog/images/icons/spark-icon.png
51	ASP.NET	\N	/static/blog/images/icons/asp-net-icon.png
154	Atom	\N	/static/blog/images/icons/atom-icon.png
78	Azure	\N	/static/blog/images/icons/azure-icon.png
147	Bitbucket	\N	/static/blog/images/icons/bitbucket-icon.png
90	Blockchain	\N	/static/blog/images/icons/blockchain-icon.png
143	Burp Suite	\N	/static/blog/images/icons/burp-suite-icon.png
15	Java	\N	/static/blog/images/icons/java-icon.png
8	Python	Description for Python	/static/blog/images/icons/python-icon.png
185	coding	\N	/static/blog/images/icons/default-icon.png
186	math	\N	/static/blog/images/icons/default-icon.png
187	logic	\N	/static/blog/images/icons/default-icon.png
\.


--
-- Data for Name: user_channel_subscriptions; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.user_channel_subscriptions (id, subscription_status, subscribed_at, unsubscribed_at, channel_id, user_id) FROM stdin;
3	active	2025-02-19 01:08:36.604259+00	\N	-1002301205149	29
4	active	2025-02-22 06:25:43.692866+00	\N	-1002301205149	31
5	active	2025-04-04 03:34:02+00	2025-04-04 03:34:45+00	-1002301205149	34
\.


--
-- Data for Name: user_profiles; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.user_profiles (avatar, bio, location, birth_date, website, total_points, quizzes_completed, average_score, favorite_category, is_telegram_user, email_notifications, is_public, theme_preference, user_id, facebook, github, instagram, linkedin, telegram, youtube, last_seen) FROM stdin;
avatar/6.jpeg			\N		0	0	0		f	t	t	dark	40							2025-04-19 15:02:30.444595+00
			\N		150	5	10	Python	f	t	t	dark	34							2025-04-07 23:24:53.698461+00
			\N		1000	15	600	Java	f	t	t	dark	31							2025-04-07 23:25:46.835038+00
			\N		0	0	0		f	t	t	dark	5							2025-02-03 20:15:43.894553+00
avatar/b40bf0267c47cf0bde5b12a41d078803.jpg	Admin	USA	2000-10-01	http://www.test1.com	0	0	0		f	t	t	light	1		http://www.testgit.ru	https://www.instagram.com/mr.fulani/				2025-04-27 14:29:14.199279+00
			\N		0	0	0		f	t	t	dark	7							2025-02-03 20:15:43.894553+00
			\N		0	0	0		f	t	t	dark	8							2025-02-03 20:15:43.894553+00
			\N		0	0	0		f	t	t	dark	9							2025-02-03 20:15:43.894553+00
			\N		0	0	0		f	t	t	dark	39							2025-04-18 11:26:04.610764+00
avatar/_49db1323-b87c-49f3-8ec4-916afcfae838.jpeg		Russia	\N	http://www.test1.com	90	88	0		f	t	t	dark	3		http://www.testgit.ru	http://www.testinsta.ru		@testtelega		2025-04-26 08:52:19.659267+00
		Turkey	2000-05-05		101	13	98	Java	f	t	t	dark	36			https://www.instagram.com/test44/		@test44		2025-04-09 08:01:54.608201+00
avatar/image_rwvw4fF.jpg			\N		0	0	0		f	t	t	light	29				https://www.linkedin.com/feed			2025-04-24 06:55:21.201349+00
avatar/IMG_4534.png		Turkey	\N	http://www.test1.com	90	88	0		f	t	t	dark	4		http://www.testgit.ru	http://www.testinsta.ru		@testtelega		2025-02-12 10:05:15.075175+00
avatar/first_img_копия.jpg	Admin	Turkey	2025-04-24	https://www.google.com	0	0	0		f	t	t	dark	32		https://github.com/Mr-Fulani		https://www.linkedin.com/feed			2025-04-24 12:01:06.082457+00
			\N		0	0	0		f	t	t	dark	38							2025-04-17 11:57:40.036169+00
avatar/IMG_5024.jpeg	Абу Хурайра (да будет доволен им Аллах) передаёт: \r\n\r\nعَنْ أَبِي هُرَيْرَةَ رضي الله عنه قَالَ: سَمِعْتُ رَسُولَ اللَّهِ صَلَّى اللهُ عَلَيْهِ وَسَلَّمَ يَقُولُ:«كُلُّ أُمَّتِي مُعَافًى إِلَّا المُجَاهِرِينَ، وَإِنَّ مِنَ المُجَاهَرَةِ أَنْ يَعْمَلَ الرَّجُلُ بِاللَّيْلِ عَمَلًا، ثُمَّ يُصْبِحَ وَقَدْ سَتَرَهُ اللَّهُ عَلَيْهِ، فَيَقُولَ: يَا فُلاَنُ، عَمِلْتُ البَارِحَةَ كَذَا وَكَذَا، وَقَدْ بَاتَ يَسْتُرُهُ رَبُّهُ، وَيُصْبِحُ يَكْشِفُ سِتْرَ اللَّهِ عَنْهُ».	Turkey	2000-10-01		500	5	1110		f	t	t	dark	33	http://test55.com	https://github.com/Mr-Fulani	http://test55.com	http://test55.com	test55	http://test55.com	2025-04-26 13:33:40.497084+00
	I'm a muslim		\N		0	0	0		f	t	t	dark	41							2025-04-21 03:13:30.976324+00
avatar/my-avatar.png	Admin	Russia	3000-02-10	https://www.google.com	0	0	0		f	t	t	dark	42							2025-04-25 04:34:19.71501+00
avatar/photo_2025-03-13_09.30.05.jpeg	Почему люди пишут отзывы? Совершенно понятно, какую выгоду размещение отзывов в интернете приносит бизнесу: подтверждение качества, популярности, репутации. Но вот в чем же польза для тех, кто сам их пишет? На это есть пять причин: За положительный опыт клиенты таким образом благодарят компанию и помогают ей в развитии. Возможность повлиять на качество товара, услуги или обслуживания без последствий для себя.	UC	\N	http://www.anvarpasha.com	0	0	0		f	t	t	dark	6	https://www.linkedin.com			https://www.linkedin.com	https://t.me/Abuinternet	https://www.youtube.com	2025-04-24 13:53:04.015724+00
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.users (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined, subscription_status, created_at, language, deactivated_at, photo, telegram_id) FROM stdin;
5	pbkdf2_sha256$870000$YZQneNYVNTHEy1fGwkkPuR$Hg9rtkpztcyn/0MqwM6IW7Hj6bZpyF+nVnewfVndALo=	\N	f	test_user1				f	t	2025-02-03 19:07:18.539992+00	inactive	2025-02-03 19:07:19.002548+00	\N	\N	\N	\N
7	pbkdf2_sha256$870000$aUs3zoRJZB4Jg8yMuAaHmW$ZiymSBkGarNQlYYazG90xewpWigk3+x6NoVHvS4nvEk=	\N	f	test_user3				f	t	2025-02-03 19:07:19.48432+00	inactive	2025-02-03 19:07:19.945802+00	\N	\N	\N	\N
8	pbkdf2_sha256$870000$dZp54A5LdUlhuvM8ue1qKa$BQnRlZ+HXVFhfEroTqYpHeAmlobVdaM2NyoCbzSW//4=	\N	f	test_user4				f	t	2025-02-03 19:07:19.949425+00	inactive	2025-02-03 19:07:20.411518+00	\N	\N	\N	\N
9	pbkdf2_sha256$870000$FKWX3HbfO6Zs8v3U3mY4az$jmUFgvhXp54W7tcOyV9BGM8p0Gl+v3e+k0eViiZGauQ=	\N	f	test_user5				f	t	2025-02-03 19:07:20.414691+00	inactive	2025-02-03 19:07:20.877018+00	\N	\N	\N	\N
4	pbkdf2_sha256$870000$6LWnMyFYDg0GMiPgg33vnM$fFuTiWytAO5c9NvZpfxXv/Kla/M6QyGpL32c/TnRg8g=	2025-02-12 09:24:53.423431+00	f	Test3			test3@gmail.com	f	t	2025-02-03 05:42:04.404818+00	inactive	2025-02-03 05:42:04.899256+00	\N	\N	\N	\N
1	pbkdf2_sha256$870000$ptqjLJEmt4xVfsrzMzbyh9$rPCPcwkE0SHX59N7trNMbytC3SG6F9S61lRLiiqZ0FU=	2025-04-26 08:52:25.850761+00	t	zloy	Anvar	Sharipov	zloy@gmai.com	t	t	2025-02-03 05:36:50+00	inactive	2025-02-03 05:36:50.567752+00	\N	\N	\N	\N
33	pbkdf2_sha256$870000$BifE0QHb9s4wKA8HDOiKcP$8tPym0gC7/EYR9YsgGrb3VL5Zsf6XNDRjCFPGFShlRk=	2025-04-26 13:33:40.305184+00	f	test55	\N		test55@gmail.com	f	t	2025-03-12 06:01:27+00	inactive	2025-03-12 06:01:28.347236+00	\N	\N	\N	\N
38	pbkdf2_sha256$870000$JSYHqlWhYR48FWnjMhHZya$+dvkr5qe+b1+OH/UB+pFRDt9hIJ+nGkmxA+GXtUNDUE=	\N	t	Zloy	\N	\N	fulani.dev@gmail.com	t	t	2025-04-17 11:57:39.555573+00	inactive	2025-04-17 11:57:40.024521+00	\N	\N	\N	\N
36	pbkdf2_sha256$870000$4KQmV11KwUCq89DHZ1vonj$Bur7bqDDPRfijbMJ2j+G78E65RfahDiu21VYBj8kg7I=	2025-04-09 06:01:16+00	f	test44	\N	\N	test44@gmail.com	f	t	2025-04-09 06:01:15+00	inactive	2025-04-09 06:01:15.597317+00	\N	\N	\N	\N
39	pbkdf2_sha256$870000$EdtTzBKfpk9CvaqTaeyVE8$mJ0uALIxcBojBb2Fcql9AU8+0bNiIi9zcXksjdM+I1c=	2025-04-18 11:26:05.081889+00	f	Test33	\N	\N	ethyl_nape_5g@icloud.com	f	t	2025-04-18 11:26:04.601106+00	inactive	2025-04-18 11:26:04.601382+00	\N	\N	\N	\N
35	pbkdf2_sha256$870000$9pOKhofxUVcBoD0rNqfQwx$YCnIS/YcX6TqR4G+C4Of8f1CzKaRFr4K6NleeNEy0mU=	\N	f	niikbalikh	\N	\N	\N	f	t	2025-04-05 18:26:06.553427+00	inactive	2025-04-05 18:26:06.104979+00	unknown	\N	\N	273896022
34	pbkdf2_sha256$870000$I3OEIanMjQKrj2erv9CUWv$zbyb7+9y86PecsZcigApzNVEXjshEqcFY56wSw1BYGI=	\N	f	fulani_admin	\N	\N		f	t	2025-04-04 03:34:02+00	active	2025-04-04 03:34:02.543959+00	ru	\N	\N	7595062566
31	pbkdf2_sha256$870000$E2OgUYWmwm6Wz7aSatl6lF$9hn09cX+DP0dSemHl3G6bqvNDrNcSrNqiDkSz+21VCY=	\N	f	Mr_Fulani	\N	\N		f	t	2025-02-22 06:25:43+00	active	2025-02-22 06:25:43.325465+00	ru	\N	\N	975113235
42	pbkdf2_sha256$870000$6V1ClEQBw7agcppxKBU7e8$Xg9AND/lFN5S3SLqh/3sw6fY9kpbLgZK1vhEW0SOBsQ=	2025-04-24 17:01:19.955715+00	f	zloy_root	Fulani	Fulan	zloy_root@gmail.com	f	t	2025-04-24 13:56:43+00	inactive	2025-04-24 13:56:43.347229+00	\N	\N	\N	\N
29	pbkdf2_sha256$870000$Rs7jOcOFOykMgJBPn4NO0P$00VJL8ZjxB7lbm5+3CHUCjfR16kv2Wd/U2wJ2XgUC3U=	2025-04-22 06:38:43.067507+00	f	AbuInternet			abuinternet@gmail.com	f	t	2025-02-19 01:03:09+00	active	2025-02-19 01:03:08.661886+00	ru	\N	\N	7827592658
32	pbkdf2_sha256$870000$EdtWJfj4gKrDdgTPMXC1vz$FGHBiIUWihcWgPF1i849BVecfbDroYkBc28A8vMM96o=	2025-04-24 08:52:38+00	f	Test11	Anvar	Sharipov	test11@gmail.com	f	t	2025-02-25 19:55:04+00	inactive	2025-02-25 19:55:04.611276+00	\N	\N	\N	\N
40	pbkdf2_sha256$870000$f9Sx4sSlwIZUzAYeXcdgl7$HmXv/GfgO0SlS+ZwWaKRPzkj+V/kr2wAZKtn3JhTNpc=	2025-04-19 14:36:21.223455+00	f	test66			test66@gmail.com	f	t	2025-04-19 13:09:35.226119+00	inactive	2025-04-19 13:09:35.226494+00	\N	\N	\N	\N
6	pbkdf2_sha256$870000$V1diLqgcSuad2xJZTguxtA$USqqK/YzRLVG4ifyoOJse/yTDnwqeIfy75k+ZHSk03A=	2025-04-24 13:53:03.984274+00	f	test_user2	\N	\N	mr.fulani@icloud.com	f	t	2025-02-03 19:07:19+00	inactive	2025-02-03 19:07:19.480909+00	\N	\N	\N	\N
41	pbkdf2_sha256$870000$OvCvNbEU2jsCs0uBmMfTvX$SlxhOvjEe7x8CVeWejZgCavnupC9kslHvfnEoeX5cj0=	2025-04-20 12:37:31.929238+00	f	test99			test99@gmail.com	f	t	2025-04-20 12:37:31.437861+00	inactive	2025-04-20 12:37:31.438368+00	\N	\N	\N	\N
3	pbkdf2_sha256$870000$XWhY6DgSZT2Bms4m4jaXs9$42bSE0Otft7D9WldNVguQNOD1E6MrBuSe6kps08vu/A=	2025-04-25 21:46:21.543343+00	f	Test1			test1@gmail.com	f	t	2025-02-03 05:40:26.741782+00	inactive	2025-02-03 05:40:27.262772+00	\N	\N	\N	\N
\.


--
-- Data for Name: users_groups; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.users_groups (id, customuser_id, group_id) FROM stdin;
\.


--
-- Data for Name: users_user_permissions; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.users_user_permissions (id, customuser_id, permission_id) FROM stdin;
\.


--
-- Data for Name: webhooks; Type: TABLE DATA; Schema: public; Owner: admin_fulani_quiz
--

COPY public.webhooks (id, url, service_name, is_active, created_at, updated_at) FROM stdin;
\.


--
-- Name: accounts_telegramuser_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.accounts_telegramuser_id_seq', 1, false);


--
-- Name: admins_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.admins_groups_id_seq', 1, false);


--
-- Name: admins_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.admins_id_seq', 22, true);


--
-- Name: admins_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.admins_user_permissions_id_seq', 1, false);


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 168, true);


--
-- Name: blog_category_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.blog_category_id_seq', 7, true);


--
-- Name: blog_message_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.blog_message_id_seq', 149, true);


--
-- Name: blog_messageattachment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.blog_messageattachment_id_seq', 51, true);


--
-- Name: blog_pagevideo_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.blog_pagevideo_id_seq', 6, true);


--
-- Name: blog_post_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.blog_post_id_seq', 5, true);


--
-- Name: blog_postimage_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.blog_postimage_id_seq', 16, true);


--
-- Name: blog_project_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.blog_project_id_seq', 2, true);


--
-- Name: blog_projectimage_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.blog_projectimage_id_seq', 11, true);


--
-- Name: blog_testimonial_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.blog_testimonial_id_seq', 14, true);


--
-- Name: default_links_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.default_links_id_seq', 1, false);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 317, true);


--
-- Name: django_admins_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.django_admins_groups_id_seq', 1, false);


--
-- Name: django_admins_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.django_admins_id_seq', 1, false);


--
-- Name: django_admins_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.django_admins_user_permissions_id_seq', 1, false);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 42, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 82, true);


--
-- Name: feedback_messages_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.feedback_messages_id_seq', 8, true);


--
-- Name: groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.groups_id_seq', 5, true);


--
-- Name: main_fallback_links_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.main_fallback_links_id_seq', 1, false);


--
-- Name: polls_choice_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.polls_choice_id_seq', 4, true);


--
-- Name: polls_poll_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.polls_poll_id_seq', 3, true);


--
-- Name: polls_userresponse_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.polls_userresponse_id_seq', 3, true);


--
-- Name: subtopics_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.subtopics_id_seq', 37, true);


--
-- Name: super_admins_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.super_admins_groups_id_seq', 1, false);


--
-- Name: super_admins_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.super_admins_id_seq', 1, false);


--
-- Name: super_admins_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.super_admins_user_permissions_id_seq', 1, false);


--
-- Name: task_polls_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.task_polls_id_seq', 15, true);


--
-- Name: task_statistics_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.task_statistics_id_seq', 20, true);


--
-- Name: task_translations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.task_translations_id_seq', 48, true);


--
-- Name: tasks_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.tasks_id_seq', 58, true);


--
-- Name: topics_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.topics_id_seq', 187, true);


--
-- Name: user_channel_subscriptions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.user_channel_subscriptions_id_seq', 5, true);


--
-- Name: users_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.users_groups_id_seq', 1, false);


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.users_id_seq', 42, true);


--
-- Name: users_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin_fulani_quiz
--

SELECT pg_catalog.setval('public.users_user_permissions_id_seq', 1, false);


--
-- Name: accounts_telegramuser accounts_telegramuser_linked_user_id_key; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.accounts_telegramuser
    ADD CONSTRAINT accounts_telegramuser_linked_user_id_key UNIQUE (linked_user_id);


--
-- Name: accounts_telegramuser accounts_telegramuser_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.accounts_telegramuser
    ADD CONSTRAINT accounts_telegramuser_pkey PRIMARY KEY (id);


--
-- Name: accounts_telegramuser accounts_telegramuser_telegram_id_key; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.accounts_telegramuser
    ADD CONSTRAINT accounts_telegramuser_telegram_id_key UNIQUE (telegram_id);


--
-- Name: admins_groups admins_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.admins_groups
    ADD CONSTRAINT admins_groups_pkey PRIMARY KEY (id);


--
-- Name: admins_groups admins_groups_telegramadmin_id_telegramchannel_id_3248bd83_uniq; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.admins_groups
    ADD CONSTRAINT admins_groups_telegramadmin_id_telegramchannel_id_3248bd83_uniq UNIQUE (telegramadmin_id, telegramchannel_id);


--
-- Name: admins admins_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.admins
    ADD CONSTRAINT admins_pkey PRIMARY KEY (id);


--
-- Name: admins admins_telegram_id_key; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.admins
    ADD CONSTRAINT admins_telegram_id_key UNIQUE (telegram_id);


--
-- Name: admins_user_permissions admins_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.admins_user_permissions
    ADD CONSTRAINT admins_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: admins_user_permissions admins_user_permissions_telegramadmin_id_permiss_1e9243e1_uniq; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.admins_user_permissions
    ADD CONSTRAINT admins_user_permissions_telegramadmin_id_permiss_1e9243e1_uniq UNIQUE (telegramadmin_id, permission_id);


--
-- Name: admins admins_username_key; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.admins
    ADD CONSTRAINT admins_username_key UNIQUE (username);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: authtoken_token authtoken_token_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.authtoken_token
    ADD CONSTRAINT authtoken_token_pkey PRIMARY KEY (key);


--
-- Name: authtoken_token authtoken_token_user_id_key; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.authtoken_token
    ADD CONSTRAINT authtoken_token_user_id_key UNIQUE (user_id);


--
-- Name: blog_category blog_category_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.blog_category
    ADD CONSTRAINT blog_category_pkey PRIMARY KEY (id);


--
-- Name: blog_category blog_category_slug_key; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.blog_category
    ADD CONSTRAINT blog_category_slug_key UNIQUE (slug);


--
-- Name: blog_message blog_message_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.blog_message
    ADD CONSTRAINT blog_message_pkey PRIMARY KEY (id);


--
-- Name: blog_messageattachment blog_messageattachment_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.blog_messageattachment
    ADD CONSTRAINT blog_messageattachment_pkey PRIMARY KEY (id);


--
-- Name: blog_pagevideo blog_pagevideo_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.blog_pagevideo
    ADD CONSTRAINT blog_pagevideo_pkey PRIMARY KEY (id);


--
-- Name: blog_post blog_post_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.blog_post
    ADD CONSTRAINT blog_post_pkey PRIMARY KEY (id);


--
-- Name: blog_post blog_post_slug_key; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.blog_post
    ADD CONSTRAINT blog_post_slug_key UNIQUE (slug);


--
-- Name: blog_postimage blog_postimage_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.blog_postimage
    ADD CONSTRAINT blog_postimage_pkey PRIMARY KEY (id);


--
-- Name: blog_project blog_project_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.blog_project
    ADD CONSTRAINT blog_project_pkey PRIMARY KEY (id);


--
-- Name: blog_project blog_project_slug_key; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.blog_project
    ADD CONSTRAINT blog_project_slug_key UNIQUE (slug);


--
-- Name: blog_projectimage blog_projectimage_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.blog_projectimage
    ADD CONSTRAINT blog_projectimage_pkey PRIMARY KEY (id);


--
-- Name: blog_testimonial blog_testimonial_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.blog_testimonial
    ADD CONSTRAINT blog_testimonial_pkey PRIMARY KEY (id);


--
-- Name: default_links default_links_language_topic_e39767a3_uniq; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.default_links
    ADD CONSTRAINT default_links_language_topic_e39767a3_uniq UNIQUE (language, topic);


--
-- Name: default_links default_links_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.default_links
    ADD CONSTRAINT default_links_pkey PRIMARY KEY (id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_admins_groups django_admins_groups_djangoadmin_id_group_id_d2769aed_uniq; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.django_admins_groups
    ADD CONSTRAINT django_admins_groups_djangoadmin_id_group_id_d2769aed_uniq UNIQUE (djangoadmin_id, group_id);


--
-- Name: django_admins_groups django_admins_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.django_admins_groups
    ADD CONSTRAINT django_admins_groups_pkey PRIMARY KEY (id);


--
-- Name: django_admins django_admins_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.django_admins
    ADD CONSTRAINT django_admins_pkey PRIMARY KEY (id);


--
-- Name: django_admins_user_permissions django_admins_user_permi_djangoadmin_id_permissio_761125d8_uniq; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.django_admins_user_permissions
    ADD CONSTRAINT django_admins_user_permi_djangoadmin_id_permissio_761125d8_uniq UNIQUE (djangoadmin_id, permission_id);


--
-- Name: django_admins_user_permissions django_admins_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.django_admins_user_permissions
    ADD CONSTRAINT django_admins_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: django_admins django_admins_username_key; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.django_admins
    ADD CONSTRAINT django_admins_username_key UNIQUE (username);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: feedback_messages feedback_messages_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.feedback_messages
    ADD CONSTRAINT feedback_messages_pkey PRIMARY KEY (id);


--
-- Name: groups groups_group_id_key; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.groups
    ADD CONSTRAINT groups_group_id_key UNIQUE (group_id);


--
-- Name: groups groups_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.groups
    ADD CONSTRAINT groups_pkey PRIMARY KEY (id);


--
-- Name: main_fallback_links main_fallback_links_language_key; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.main_fallback_links
    ADD CONSTRAINT main_fallback_links_language_key UNIQUE (language);


--
-- Name: main_fallback_links main_fallback_links_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.main_fallback_links
    ADD CONSTRAINT main_fallback_links_pkey PRIMARY KEY (id);


--
-- Name: polls_choice polls_choice_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.polls_choice
    ADD CONSTRAINT polls_choice_pkey PRIMARY KEY (id);


--
-- Name: polls_poll polls_poll_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.polls_poll
    ADD CONSTRAINT polls_poll_pkey PRIMARY KEY (id);


--
-- Name: polls_userresponse polls_userresponse_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.polls_userresponse
    ADD CONSTRAINT polls_userresponse_pkey PRIMARY KEY (id);


--
-- Name: polls_userresponse polls_userresponse_poll_id_user_id_15471bd6_uniq; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.polls_userresponse
    ADD CONSTRAINT polls_userresponse_poll_id_user_id_15471bd6_uniq UNIQUE (poll_id, user_id);


--
-- Name: subtopics subtopics_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.subtopics
    ADD CONSTRAINT subtopics_pkey PRIMARY KEY (id);


--
-- Name: super_admins_groups super_admins_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.super_admins_groups
    ADD CONSTRAINT super_admins_groups_pkey PRIMARY KEY (id);


--
-- Name: super_admins_groups super_admins_groups_superadmin_id_group_id_e2d29a6e_uniq; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.super_admins_groups
    ADD CONSTRAINT super_admins_groups_superadmin_id_group_id_e2d29a6e_uniq UNIQUE (superadmin_id, group_id);


--
-- Name: super_admins super_admins_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.super_admins
    ADD CONSTRAINT super_admins_pkey PRIMARY KEY (id);


--
-- Name: super_admins_user_permissions super_admins_user_permis_superadmin_id_permission_05510104_uniq; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.super_admins_user_permissions
    ADD CONSTRAINT super_admins_user_permis_superadmin_id_permission_05510104_uniq UNIQUE (superadmin_id, permission_id);


--
-- Name: super_admins_user_permissions super_admins_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.super_admins_user_permissions
    ADD CONSTRAINT super_admins_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: super_admins super_admins_username_key; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.super_admins
    ADD CONSTRAINT super_admins_username_key UNIQUE (username);


--
-- Name: task_polls task_polls_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.task_polls
    ADD CONSTRAINT task_polls_pkey PRIMARY KEY (id);


--
-- Name: task_polls task_polls_poll_id_key; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.task_polls
    ADD CONSTRAINT task_polls_poll_id_key UNIQUE (poll_id);


--
-- Name: task_statistics task_statistics_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.task_statistics
    ADD CONSTRAINT task_statistics_pkey PRIMARY KEY (id);


--
-- Name: task_statistics task_statistics_user_id_task_id_8e6fb8fb_uniq; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.task_statistics
    ADD CONSTRAINT task_statistics_user_id_task_id_8e6fb8fb_uniq UNIQUE (user_id, task_id);


--
-- Name: task_translations task_translations_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.task_translations
    ADD CONSTRAINT task_translations_pkey PRIMARY KEY (id);


--
-- Name: tasks tasks_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.tasks
    ADD CONSTRAINT tasks_pkey PRIMARY KEY (id);


--
-- Name: topics topics_name_key; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.topics
    ADD CONSTRAINT topics_name_key UNIQUE (name);


--
-- Name: topics topics_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.topics
    ADD CONSTRAINT topics_pkey PRIMARY KEY (id);


--
-- Name: user_channel_subscriptions user_channel_subscriptions_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.user_channel_subscriptions
    ADD CONSTRAINT user_channel_subscriptions_pkey PRIMARY KEY (id);


--
-- Name: user_channel_subscriptions user_channel_subscriptions_user_id_channel_id_b2bbc10b_uniq; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.user_channel_subscriptions
    ADD CONSTRAINT user_channel_subscriptions_user_id_channel_id_b2bbc10b_uniq UNIQUE (user_id, channel_id);


--
-- Name: user_profiles user_profiles_user_id_8c5ab5fe_pk; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.user_profiles
    ADD CONSTRAINT user_profiles_user_id_8c5ab5fe_pk PRIMARY KEY (user_id);


--
-- Name: users_groups users_groups_customuser_id_group_id_927de924_uniq; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.users_groups
    ADD CONSTRAINT users_groups_customuser_id_group_id_927de924_uniq UNIQUE (customuser_id, group_id);


--
-- Name: users_groups users_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.users_groups
    ADD CONSTRAINT users_groups_pkey PRIMARY KEY (id);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: users_user_permissions users_user_permissions_customuser_id_permission_2b4e4e39_uniq; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.users_user_permissions
    ADD CONSTRAINT users_user_permissions_customuser_id_permission_2b4e4e39_uniq UNIQUE (customuser_id, permission_id);


--
-- Name: users_user_permissions users_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.users_user_permissions
    ADD CONSTRAINT users_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: users users_username_key; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_username_key UNIQUE (username);


--
-- Name: webhooks webhooks_pkey; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.webhooks
    ADD CONSTRAINT webhooks_pkey PRIMARY KEY (id);


--
-- Name: webhooks webhooks_url_key; Type: CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.webhooks
    ADD CONSTRAINT webhooks_url_key UNIQUE (url);


--
-- Name: admins_groups_telegramadmin_id_6baad203; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX admins_groups_telegramadmin_id_6baad203 ON public.admins_groups USING btree (telegramadmin_id);


--
-- Name: admins_groups_telegramchannel_id_0b158544; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX admins_groups_telegramchannel_id_0b158544 ON public.admins_groups USING btree (telegramchannel_id);


--
-- Name: admins_user_permissions_permission_id_15f257d0; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX admins_user_permissions_permission_id_15f257d0 ON public.admins_user_permissions USING btree (permission_id);


--
-- Name: admins_user_permissions_telegramadmin_id_57ee5f46; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX admins_user_permissions_telegramadmin_id_57ee5f46 ON public.admins_user_permissions USING btree (telegramadmin_id);


--
-- Name: admins_username_6f424f9e_like; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX admins_username_6f424f9e_like ON public.admins USING btree (username varchar_pattern_ops);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: authtoken_token_key_10f0b77e_like; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX authtoken_token_key_10f0b77e_like ON public.authtoken_token USING btree (key varchar_pattern_ops);


--
-- Name: blog_category_slug_92643dc5_like; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX blog_category_slug_92643dc5_like ON public.blog_category USING btree (slug varchar_pattern_ops);


--
-- Name: blog_message_recipient_id_8d6a454c; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX blog_message_recipient_id_8d6a454c ON public.blog_message USING btree (recipient_id);


--
-- Name: blog_message_sender_id_853d38f7; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX blog_message_sender_id_853d38f7 ON public.blog_message USING btree (sender_id);


--
-- Name: blog_messageattachment_message_id_84c85e23; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX blog_messageattachment_message_id_84c85e23 ON public.blog_messageattachment USING btree (message_id);


--
-- Name: blog_post_category_id_c326dbf8; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX blog_post_category_id_c326dbf8 ON public.blog_post USING btree (category_id);


--
-- Name: blog_post_slug_b95473f2_like; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX blog_post_slug_b95473f2_like ON public.blog_post USING btree (slug varchar_pattern_ops);


--
-- Name: blog_postimage_post_id_09cc1915; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX blog_postimage_post_id_09cc1915 ON public.blog_postimage USING btree (post_id);


--
-- Name: blog_project_category_id_fad3f302; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX blog_project_category_id_fad3f302 ON public.blog_project USING btree (category_id);


--
-- Name: blog_project_slug_777ed852_like; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX blog_project_slug_777ed852_like ON public.blog_project USING btree (slug varchar_pattern_ops);


--
-- Name: blog_projectimage_project_id_4e85ad1b; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX blog_projectimage_project_id_4e85ad1b ON public.blog_projectimage USING btree (project_id);


--
-- Name: blog_testimonial_user_id_b60a15ae; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX blog_testimonial_user_id_b60a15ae ON public.blog_testimonial USING btree (user_id);


--
-- Name: default_lin_languag_d3a8b2_idx; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX default_lin_languag_d3a8b2_idx ON public.default_links USING btree (language, topic);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_admins_groups_djangoadmin_id_82936b50; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX django_admins_groups_djangoadmin_id_82936b50 ON public.django_admins_groups USING btree (djangoadmin_id);


--
-- Name: django_admins_groups_group_id_3f8d3c46; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX django_admins_groups_group_id_3f8d3c46 ON public.django_admins_groups USING btree (group_id);


--
-- Name: django_admins_user_permissions_djangoadmin_id_013a80a8; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX django_admins_user_permissions_djangoadmin_id_013a80a8 ON public.django_admins_user_permissions USING btree (djangoadmin_id);


--
-- Name: django_admins_user_permissions_permission_id_57acfc0d; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX django_admins_user_permissions_permission_id_57acfc0d ON public.django_admins_user_permissions USING btree (permission_id);


--
-- Name: django_admins_username_f48ea9e1_like; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX django_admins_username_f48ea9e1_like ON public.django_admins USING btree (username varchar_pattern_ops);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: feedback_me_created_6ddecb_idx; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX feedback_me_created_6ddecb_idx ON public.feedback_messages USING btree (created_at);


--
-- Name: feedback_me_is_proc_600209_idx; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX feedback_me_is_proc_600209_idx ON public.feedback_messages USING btree (is_processed);


--
-- Name: main_fallba_languag_c6da5e_idx; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX main_fallba_languag_c6da5e_idx ON public.main_fallback_links USING btree (language);


--
-- Name: main_fallback_links_language_2d27ae59_like; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX main_fallback_links_language_2d27ae59_like ON public.main_fallback_links USING btree (language varchar_pattern_ops);


--
-- Name: polls_choice_poll_id_3a553f1a; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX polls_choice_poll_id_3a553f1a ON public.polls_choice USING btree (poll_id);


--
-- Name: polls_poll_author_id_d3805985; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX polls_poll_author_id_d3805985 ON public.polls_poll USING btree (author_id);


--
-- Name: polls_userresponse_choice_id_0f6795bd; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX polls_userresponse_choice_id_0f6795bd ON public.polls_userresponse USING btree (choice_id);


--
-- Name: polls_userresponse_poll_id_cc10fdd7; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX polls_userresponse_poll_id_cc10fdd7 ON public.polls_userresponse USING btree (poll_id);


--
-- Name: polls_userresponse_user_id_11078db4; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX polls_userresponse_user_id_11078db4 ON public.polls_userresponse USING btree (user_id);


--
-- Name: subtopics_topic_i_7d1938_idx; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX subtopics_topic_i_7d1938_idx ON public.subtopics USING btree (topic_id, name);


--
-- Name: subtopics_topic_id_f175706c; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX subtopics_topic_id_f175706c ON public.subtopics USING btree (topic_id);


--
-- Name: super_admins_groups_group_id_9e59e553; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX super_admins_groups_group_id_9e59e553 ON public.super_admins_groups USING btree (group_id);


--
-- Name: super_admins_groups_superadmin_id_dfecb623; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX super_admins_groups_superadmin_id_dfecb623 ON public.super_admins_groups USING btree (superadmin_id);


--
-- Name: super_admins_user_permissions_permission_id_e89c484c; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX super_admins_user_permissions_permission_id_e89c484c ON public.super_admins_user_permissions USING btree (permission_id);


--
-- Name: super_admins_user_permissions_superadmin_id_736dd893; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX super_admins_user_permissions_superadmin_id_736dd893 ON public.super_admins_user_permissions USING btree (superadmin_id);


--
-- Name: super_admins_username_8ca7096c_like; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX super_admins_username_8ca7096c_like ON public.super_admins USING btree (username varchar_pattern_ops);


--
-- Name: task_polls_poll_id_8a435075_like; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX task_polls_poll_id_8a435075_like ON public.task_polls USING btree (poll_id varchar_pattern_ops);


--
-- Name: task_polls_task_id_ab597f66; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX task_polls_task_id_ab597f66 ON public.task_polls USING btree (task_id);


--
-- Name: task_polls_translation_id_6476d859; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX task_polls_translation_id_6476d859 ON public.task_polls USING btree (translation_id);


--
-- Name: task_statis_last_at_333cdf_idx; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX task_statis_last_at_333cdf_idx ON public.task_statistics USING btree (last_attempt_date);


--
-- Name: task_statistics_task_id_58414696; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX task_statistics_task_id_58414696 ON public.task_statistics USING btree (task_id);


--
-- Name: task_statistics_user_id_b222ef0f; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX task_statistics_user_id_b222ef0f ON public.task_statistics USING btree (user_id);


--
-- Name: task_transl_languag_46dd43_idx; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX task_transl_languag_46dd43_idx ON public.task_translations USING btree (language);


--
-- Name: task_translations_task_id_95d14cb3; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX task_translations_task_id_95d14cb3 ON public.task_translations USING btree (task_id);


--
-- Name: tasks_create__aaa0b7_idx; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX tasks_create__aaa0b7_idx ON public.tasks USING btree (create_date);


--
-- Name: tasks_group_id_cf815437; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX tasks_group_id_cf815437 ON public.tasks USING btree (group_id);


--
-- Name: tasks_publish_1535f1_idx; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX tasks_publish_1535f1_idx ON public.tasks USING btree (published);


--
-- Name: tasks_subtopic_id_b47ec895; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX tasks_subtopic_id_b47ec895 ON public.tasks USING btree (subtopic_id);


--
-- Name: tasks_topic_id_21834d3f; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX tasks_topic_id_21834d3f ON public.tasks USING btree (topic_id);


--
-- Name: topics_name_59575953_like; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX topics_name_59575953_like ON public.topics USING btree (name varchar_pattern_ops);


--
-- Name: topics_name_5f3c7a_idx; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX topics_name_5f3c7a_idx ON public.topics USING btree (name);


--
-- Name: user_channe_subscri_0faf59_idx; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX user_channe_subscri_0faf59_idx ON public.user_channel_subscriptions USING btree (subscribed_at);


--
-- Name: user_channe_subscri_673376_idx; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX user_channe_subscri_673376_idx ON public.user_channel_subscriptions USING btree (subscription_status);


--
-- Name: user_channel_subscriptions_channel_id_1811513f; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX user_channel_subscriptions_channel_id_1811513f ON public.user_channel_subscriptions USING btree (channel_id);


--
-- Name: user_channel_subscriptions_user_id_fbc9fa97; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX user_channel_subscriptions_user_id_fbc9fa97 ON public.user_channel_subscriptions USING btree (user_id);


--
-- Name: users_groups_customuser_id_4bd991a9; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX users_groups_customuser_id_4bd991a9 ON public.users_groups USING btree (customuser_id);


--
-- Name: users_groups_group_id_2f3517aa; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX users_groups_group_id_2f3517aa ON public.users_groups USING btree (group_id);


--
-- Name: users_user_permissions_customuser_id_efdb305c; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX users_user_permissions_customuser_id_efdb305c ON public.users_user_permissions USING btree (customuser_id);


--
-- Name: users_user_permissions_permission_id_6d08dcd2; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX users_user_permissions_permission_id_6d08dcd2 ON public.users_user_permissions USING btree (permission_id);


--
-- Name: users_username_e8658fc8_like; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX users_username_e8658fc8_like ON public.users USING btree (username varchar_pattern_ops);


--
-- Name: webhooks_created_913b65_idx; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX webhooks_created_913b65_idx ON public.webhooks USING btree (created_at);


--
-- Name: webhooks_is_acti_7ab6f5_idx; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX webhooks_is_acti_7ab6f5_idx ON public.webhooks USING btree (is_active);


--
-- Name: webhooks_url_99fbdc9b_like; Type: INDEX; Schema: public; Owner: admin_fulani_quiz
--

CREATE INDEX webhooks_url_99fbdc9b_like ON public.webhooks USING btree (url varchar_pattern_ops);


--
-- Name: accounts_telegramuser accounts_telegramuser_linked_user_id_b755af0b_fk_users_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.accounts_telegramuser
    ADD CONSTRAINT accounts_telegramuser_linked_user_id_b755af0b_fk_users_id FOREIGN KEY (linked_user_id) REFERENCES public.users(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: admins_groups admins_groups_telegramadmin_id_6baad203_fk_admins_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.admins_groups
    ADD CONSTRAINT admins_groups_telegramadmin_id_6baad203_fk_admins_id FOREIGN KEY (telegramadmin_id) REFERENCES public.admins(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: admins_groups admins_groups_telegramchannel_id_0b158544_fk_groups_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.admins_groups
    ADD CONSTRAINT admins_groups_telegramchannel_id_0b158544_fk_groups_id FOREIGN KEY (telegramchannel_id) REFERENCES public.groups(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: admins_user_permissions admins_user_permissi_permission_id_15f257d0_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.admins_user_permissions
    ADD CONSTRAINT admins_user_permissi_permission_id_15f257d0_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: admins_user_permissions admins_user_permissions_telegramadmin_id_57ee5f46_fk_admins_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.admins_user_permissions
    ADD CONSTRAINT admins_user_permissions_telegramadmin_id_57ee5f46_fk_admins_id FOREIGN KEY (telegramadmin_id) REFERENCES public.admins(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: authtoken_token authtoken_token_user_id_35299eff_fk_users_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.authtoken_token
    ADD CONSTRAINT authtoken_token_user_id_35299eff_fk_users_id FOREIGN KEY (user_id) REFERENCES public.users(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_message blog_message_recipient_id_8d6a454c_fk_users_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.blog_message
    ADD CONSTRAINT blog_message_recipient_id_8d6a454c_fk_users_id FOREIGN KEY (recipient_id) REFERENCES public.users(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_message blog_message_sender_id_853d38f7_fk_users_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.blog_message
    ADD CONSTRAINT blog_message_sender_id_853d38f7_fk_users_id FOREIGN KEY (sender_id) REFERENCES public.users(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_messageattachment blog_messageattachment_message_id_84c85e23_fk_blog_message_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.blog_messageattachment
    ADD CONSTRAINT blog_messageattachment_message_id_84c85e23_fk_blog_message_id FOREIGN KEY (message_id) REFERENCES public.blog_message(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_post blog_post_category_id_c326dbf8_fk_blog_category_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.blog_post
    ADD CONSTRAINT blog_post_category_id_c326dbf8_fk_blog_category_id FOREIGN KEY (category_id) REFERENCES public.blog_category(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_postimage blog_postimage_post_id_09cc1915_fk_blog_post_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.blog_postimage
    ADD CONSTRAINT blog_postimage_post_id_09cc1915_fk_blog_post_id FOREIGN KEY (post_id) REFERENCES public.blog_post(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_project blog_project_category_id_fad3f302_fk_blog_category_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.blog_project
    ADD CONSTRAINT blog_project_category_id_fad3f302_fk_blog_category_id FOREIGN KEY (category_id) REFERENCES public.blog_category(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_projectimage blog_projectimage_project_id_4e85ad1b_fk_blog_project_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.blog_projectimage
    ADD CONSTRAINT blog_projectimage_project_id_4e85ad1b_fk_blog_project_id FOREIGN KEY (project_id) REFERENCES public.blog_project(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_testimonial blog_testimonial_user_id_b60a15ae_fk_users_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.blog_testimonial
    ADD CONSTRAINT blog_testimonial_user_id_b60a15ae_fk_users_id FOREIGN KEY (user_id) REFERENCES public.users(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_users_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_users_id FOREIGN KEY (user_id) REFERENCES public.users(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admins_groups django_admins_groups_djangoadmin_id_82936b50_fk_django_ad; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.django_admins_groups
    ADD CONSTRAINT django_admins_groups_djangoadmin_id_82936b50_fk_django_ad FOREIGN KEY (djangoadmin_id) REFERENCES public.django_admins(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admins_groups django_admins_groups_group_id_3f8d3c46_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.django_admins_groups
    ADD CONSTRAINT django_admins_groups_group_id_3f8d3c46_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admins_user_permissions django_admins_user_p_djangoadmin_id_013a80a8_fk_django_ad; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.django_admins_user_permissions
    ADD CONSTRAINT django_admins_user_p_djangoadmin_id_013a80a8_fk_django_ad FOREIGN KEY (djangoadmin_id) REFERENCES public.django_admins(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admins_user_permissions django_admins_user_p_permission_id_57acfc0d_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.django_admins_user_permissions
    ADD CONSTRAINT django_admins_user_p_permission_id_57acfc0d_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: polls_choice polls_choice_poll_id_3a553f1a_fk_polls_poll_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.polls_choice
    ADD CONSTRAINT polls_choice_poll_id_3a553f1a_fk_polls_poll_id FOREIGN KEY (poll_id) REFERENCES public.polls_poll(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: polls_poll polls_poll_author_id_d3805985_fk_users_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.polls_poll
    ADD CONSTRAINT polls_poll_author_id_d3805985_fk_users_id FOREIGN KEY (author_id) REFERENCES public.users(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: polls_userresponse polls_userresponse_choice_id_0f6795bd_fk_polls_choice_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.polls_userresponse
    ADD CONSTRAINT polls_userresponse_choice_id_0f6795bd_fk_polls_choice_id FOREIGN KEY (choice_id) REFERENCES public.polls_choice(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: polls_userresponse polls_userresponse_poll_id_cc10fdd7_fk_polls_poll_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.polls_userresponse
    ADD CONSTRAINT polls_userresponse_poll_id_cc10fdd7_fk_polls_poll_id FOREIGN KEY (poll_id) REFERENCES public.polls_poll(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: polls_userresponse polls_userresponse_user_id_11078db4_fk_users_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.polls_userresponse
    ADD CONSTRAINT polls_userresponse_user_id_11078db4_fk_users_id FOREIGN KEY (user_id) REFERENCES public.users(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: subtopics subtopics_topic_id_f175706c_fk_topics_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.subtopics
    ADD CONSTRAINT subtopics_topic_id_f175706c_fk_topics_id FOREIGN KEY (topic_id) REFERENCES public.topics(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: super_admins_groups super_admins_groups_group_id_9e59e553_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.super_admins_groups
    ADD CONSTRAINT super_admins_groups_group_id_9e59e553_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: super_admins_groups super_admins_groups_superadmin_id_dfecb623_fk_super_admins_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.super_admins_groups
    ADD CONSTRAINT super_admins_groups_superadmin_id_dfecb623_fk_super_admins_id FOREIGN KEY (superadmin_id) REFERENCES public.super_admins(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: super_admins_user_permissions super_admins_user_pe_permission_id_e89c484c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.super_admins_user_permissions
    ADD CONSTRAINT super_admins_user_pe_permission_id_e89c484c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: super_admins_user_permissions super_admins_user_pe_superadmin_id_736dd893_fk_super_adm; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.super_admins_user_permissions
    ADD CONSTRAINT super_admins_user_pe_superadmin_id_736dd893_fk_super_adm FOREIGN KEY (superadmin_id) REFERENCES public.super_admins(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: task_polls task_polls_task_id_ab597f66_fk_tasks_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.task_polls
    ADD CONSTRAINT task_polls_task_id_ab597f66_fk_tasks_id FOREIGN KEY (task_id) REFERENCES public.tasks(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: task_polls task_polls_translation_id_6476d859_fk_task_translations_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.task_polls
    ADD CONSTRAINT task_polls_translation_id_6476d859_fk_task_translations_id FOREIGN KEY (translation_id) REFERENCES public.task_translations(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: task_statistics task_statistics_task_id_58414696_fk_tasks_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.task_statistics
    ADD CONSTRAINT task_statistics_task_id_58414696_fk_tasks_id FOREIGN KEY (task_id) REFERENCES public.tasks(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: task_statistics task_statistics_user_id_b222ef0f_fk_users_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.task_statistics
    ADD CONSTRAINT task_statistics_user_id_b222ef0f_fk_users_id FOREIGN KEY (user_id) REFERENCES public.users(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: task_translations task_translations_task_id_95d14cb3_fk_tasks_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.task_translations
    ADD CONSTRAINT task_translations_task_id_95d14cb3_fk_tasks_id FOREIGN KEY (task_id) REFERENCES public.tasks(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: tasks tasks_group_id_cf815437_fk_groups_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.tasks
    ADD CONSTRAINT tasks_group_id_cf815437_fk_groups_id FOREIGN KEY (group_id) REFERENCES public.groups(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: tasks tasks_subtopic_id_b47ec895_fk_subtopics_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.tasks
    ADD CONSTRAINT tasks_subtopic_id_b47ec895_fk_subtopics_id FOREIGN KEY (subtopic_id) REFERENCES public.subtopics(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: tasks tasks_topic_id_21834d3f_fk_topics_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.tasks
    ADD CONSTRAINT tasks_topic_id_21834d3f_fk_topics_id FOREIGN KEY (topic_id) REFERENCES public.topics(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: user_channel_subscriptions user_channel_subscri_channel_id_1811513f_fk_groups_gr; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.user_channel_subscriptions
    ADD CONSTRAINT user_channel_subscri_channel_id_1811513f_fk_groups_gr FOREIGN KEY (channel_id) REFERENCES public.groups(group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: user_channel_subscriptions user_channel_subscriptions_user_id_fbc9fa97_fk_users_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.user_channel_subscriptions
    ADD CONSTRAINT user_channel_subscriptions_user_id_fbc9fa97_fk_users_id FOREIGN KEY (user_id) REFERENCES public.users(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: user_profiles user_profiles_user_id_8c5ab5fe_fk_users_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.user_profiles
    ADD CONSTRAINT user_profiles_user_id_8c5ab5fe_fk_users_id FOREIGN KEY (user_id) REFERENCES public.users(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: users_groups users_groups_customuser_id_4bd991a9_fk_users_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.users_groups
    ADD CONSTRAINT users_groups_customuser_id_4bd991a9_fk_users_id FOREIGN KEY (customuser_id) REFERENCES public.users(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: users_groups users_groups_group_id_2f3517aa_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.users_groups
    ADD CONSTRAINT users_groups_group_id_2f3517aa_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: users_user_permissions users_user_permissio_permission_id_6d08dcd2_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.users_user_permissions
    ADD CONSTRAINT users_user_permissio_permission_id_6d08dcd2_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: users_user_permissions users_user_permissions_customuser_id_efdb305c_fk_users_id; Type: FK CONSTRAINT; Schema: public; Owner: admin_fulani_quiz
--

ALTER TABLE ONLY public.users_user_permissions
    ADD CONSTRAINT users_user_permissions_customuser_id_efdb305c_fk_users_id FOREIGN KEY (customuser_id) REFERENCES public.users(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: admin_fulani_quiz
--

REVOKE USAGE ON SCHEMA public FROM PUBLIC;


--
-- PostgreSQL database dump complete
--

