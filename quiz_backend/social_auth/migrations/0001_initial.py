# Generated by Django 5.1.4 on 2025-07-15 17:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SocialAuthSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('telegram', 'Telegram'), ('github', 'GitHub'), ('google', 'Google'), ('vk', 'VKontakte'), ('facebook', 'Facebook'), ('twitter', 'Twitter')], max_length=20, unique=True, verbose_name='Провайдер')),
                ('client_id', models.CharField(max_length=255, verbose_name='Client ID')),
                ('client_secret', models.CharField(max_length=255, verbose_name='Client Secret')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Включен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Настройка социальной аутентификации',
                'verbose_name_plural': 'Настройки социальной аутентификации',
                'db_table': 'social_auth_settings',
            },
        ),
        migrations.CreateModel(
            name='SocialAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('telegram', 'Telegram'), ('github', 'GitHub'), ('google', 'Google'), ('vk', 'VKontakte'), ('facebook', 'Facebook'), ('twitter', 'Twitter')], max_length=20, verbose_name='Провайдер')),
                ('provider_user_id', models.CharField(max_length=255, verbose_name='ID пользователя в провайдере')),
                ('username', models.CharField(blank=True, max_length=255, null=True, verbose_name='Username в провайдере')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email в провайдере')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Фамилия')),
                ('avatar_url', models.URLField(blank=True, null=True, verbose_name='URL аватара')),
                ('access_token', models.TextField(blank=True, null=True, verbose_name='Access token')),
                ('refresh_token', models.TextField(blank=True, null=True, verbose_name='Refresh token')),
                ('token_expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Время истечения токена')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('last_login_at', models.DateTimeField(blank=True, null=True, verbose_name='Последний вход')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_accounts', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Социальный аккаунт',
                'verbose_name_plural': 'Социальные аккаунты',
                'db_table': 'social_accounts',
            },
        ),
        migrations.CreateModel(
            name='SocialLoginSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=255, unique=True, verbose_name='ID сессии')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP адрес')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('is_successful', models.BooleanField(default=False, verbose_name='Успешный вход')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='Сообщение об ошибке')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('social_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='login_sessions', to='social_auth.socialaccount', verbose_name='Социальный аккаунт')),
            ],
            options={
                'verbose_name': 'Сессия социальной аутентификации',
                'verbose_name_plural': 'Сессии социальной аутентификации',
                'db_table': 'social_login_sessions',
            },
        ),
        migrations.AddIndex(
            model_name='socialaccount',
            index=models.Index(fields=['provider', 'provider_user_id'], name='social_acco_provide_7847d7_idx'),
        ),
        migrations.AddIndex(
            model_name='socialaccount',
            index=models.Index(fields=['user', 'provider'], name='social_acco_user_id_e2981d_idx'),
        ),
        migrations.AddIndex(
            model_name='socialaccount',
            index=models.Index(fields=['is_active'], name='social_acco_is_acti_2e2190_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='socialaccount',
            unique_together={('provider', 'provider_user_id')},
        ),
        migrations.AddIndex(
            model_name='socialloginsession',
            index=models.Index(fields=['session_id'], name='social_logi_session_22263d_idx'),
        ),
        migrations.AddIndex(
            model_name='socialloginsession',
            index=models.Index(fields=['social_account', 'created_at'], name='social_logi_social__d3903f_idx'),
        ),
        migrations.AddIndex(
            model_name='socialloginsession',
            index=models.Index(fields=['is_successful'], name='social_logi_is_succ_e5b2c5_idx'),
        ),
    ]
