# Generated by Django 5.1.4 on 2025-04-27 21:39

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('platforms', '0001_initial'),
        ('topics', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('difficulty', models.CharField(choices=[('easy', 'Легкий'), ('medium', 'Средний'), ('hard', 'Сложный')], help_text='Уровень сложности задачи', max_length=50)),
                ('published', models.BooleanField(default=False, help_text='Опубликована ли задача')),
                ('create_date', models.DateTimeField(auto_now_add=True, help_text='Дата создания задачи')),
                ('publish_date', models.DateTimeField(help_text='Дата публикации задачи', null=True)),
                ('image_url', models.URLField(help_text='URL изображения задачи', max_length=255, null=True)),
                ('external_link', models.URLField(help_text='Внешняя ссылка', max_length=255, null=True)),
                ('translation_group_id', models.UUIDField(default=uuid.uuid4, help_text='ID группы связанных переводов')),
                ('error', models.BooleanField(default=False, help_text='Содержит ли задача ошибки')),
                ('message_id', models.IntegerField(help_text='ID связанного сообщения', null=True)),
                ('group', models.ForeignKey(help_text='Связанная группа', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='platforms.telegramchannel')),
                ('subtopic', models.ForeignKey(help_text='Подтема задачи', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='topics.subtopic')),
                ('topic', models.ForeignKey(help_text='Тема, к которой относится задача', on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='topics.topic')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
                'db_table': 'tasks',
                'ordering': ['-create_date'],
            },
        ),
        migrations.CreateModel(
            name='TaskStatistics',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('attempts', models.IntegerField(default=0, help_text='Количество попыток')),
                ('successful', models.BooleanField(default=False, help_text='Успешно ли решена задача')),
                ('last_attempt_date', models.DateTimeField(auto_now=True, help_text='Дата последней попытки')),
                ('task', models.ForeignKey(help_text='Задача', on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='tasks.task')),
                ('user', models.ForeignKey(help_text='Пользователь', on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Статистика задачи',
                'verbose_name_plural': 'Статистика задач',
                'db_table': 'task_statistics',
            },
        ),
        migrations.CreateModel(
            name='TaskTranslation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('language', models.CharField(help_text='Язык перевода', max_length=10)),
                ('question', models.TextField(help_text='Текст вопроса')),
                ('answers', models.JSONField(help_text='Варианты ответов в формате JSON')),
                ('correct_answer', models.CharField(help_text='Правильный ответ', max_length=255)),
                ('explanation', models.TextField(help_text='Объяснение ответа', null=True)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('task', models.ForeignKey(help_text='Связанная задача', on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='tasks.task')),
            ],
            options={
                'verbose_name': 'Перевод задачи',
                'verbose_name_plural': 'Переводы задач',
                'db_table': 'task_translations',
            },
        ),
        migrations.CreateModel(
            name='TaskPoll',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('poll_id', models.CharField(help_text='ID опроса в Telegram', max_length=255, unique=True)),
                ('poll_question', models.TextField(help_text='Вопрос опроса', null=True)),
                ('poll_options', models.JSONField(help_text='Варианты ответов в формате JSON', null=True)),
                ('is_anonymous', models.BooleanField(default=True, help_text='Анонимный ли опрос')),
                ('poll_type', models.CharField(help_text='Тип опроса', max_length=50, null=True)),
                ('allows_multiple_answers', models.BooleanField(default=False, help_text='Разрешены ли множественные ответы')),
                ('total_voter_count', models.IntegerField(default=0, help_text='Общее количество проголосовавших')),
                ('poll_link', models.CharField(help_text='Ссылка на опрос', max_length=255, null=True)),
                ('task', models.ForeignKey(help_text='Связанная задача', on_delete=django.db.models.deletion.CASCADE, related_name='polls', to='tasks.task')),
                ('translation', models.ForeignKey(help_text='Связанный перевод', on_delete=django.db.models.deletion.CASCADE, to='tasks.tasktranslation')),
            ],
            options={
                'verbose_name': 'Опрос задачи',
                'verbose_name_plural': 'Опросы задач',
                'db_table': 'task_polls',
            },
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['create_date'], name='tasks_create__aaa0b7_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['published'], name='tasks_publish_1535f1_idx'),
        ),
        migrations.AddIndex(
            model_name='taskstatistics',
            index=models.Index(fields=['last_attempt_date'], name='task_statis_last_at_333cdf_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='taskstatistics',
            unique_together={('user', 'task')},
        ),
        migrations.AddIndex(
            model_name='tasktranslation',
            index=models.Index(fields=['language'], name='task_transl_languag_46dd43_idx'),
        ),
    ]
