# Generated by Django 5.1.11 on 2025-10-25 13:06

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("tasks", "0002_miniapptaskstatistics"),
    ]

    operations = [
        migrations.CreateModel(
            name="TaskComment",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "author_telegram_id",
                    models.BigIntegerField(help_text="Telegram ID автора комментария"),
                ),
                (
                    "author_username",
                    models.CharField(
                        help_text="Имя пользователя для отображения", max_length=255
                    ),
                ),
                ("text", models.TextField(help_text="Текст комментария")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Дата и время создания комментария"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="Дата и время последнего обновления"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, help_text="Мягкое удаление комментария"
                    ),
                ),
                (
                    "reports_count",
                    models.IntegerField(
                        default=0, help_text="Количество жалоб на комментарий"
                    ),
                ),
                (
                    "parent_comment",
                    models.ForeignKey(
                        blank=True,
                        help_text="Родительский комментарий для древовидной структуры",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="tasks.taskcomment",
                    ),
                ),
                (
                    "task_translation",
                    models.ForeignKey(
                        help_text="Перевод задачи, к которому относится комментарий",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="tasks.tasktranslation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Комментарий к задаче",
                "verbose_name_plural": "Комментарии к задачам",
                "db_table": "task_comments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TaskCommentImage",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "image",
                    models.ImageField(
                        help_text="Изображение комментария", upload_to="task_comments/"
                    ),
                ),
                (
                    "uploaded_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Дата и время загрузки изображения"
                    ),
                ),
                (
                    "comment",
                    models.ForeignKey(
                        help_text="Комментарий, к которому относится изображение",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="tasks.taskcomment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Изображение комментария",
                "verbose_name_plural": "Изображения комментариев",
                "db_table": "task_comment_images",
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="TaskCommentReport",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "reporter_telegram_id",
                    models.BigIntegerField(
                        help_text="Telegram ID пользователя, подавшего жалобу"
                    ),
                ),
                (
                    "reason",
                    models.CharField(
                        choices=[
                            ("spam", "Спам"),
                            ("offensive", "Оскорбительный контент"),
                            ("inappropriate", "Неуместный контент"),
                            ("other", "Другое"),
                        ],
                        help_text="Причина жалобы",
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Дополнительное описание жалобы",
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Дата и время подачи жалобы"
                    ),
                ),
                (
                    "is_reviewed",
                    models.BooleanField(
                        default=False, help_text="Проверена ли жалоба модератором"
                    ),
                ),
                (
                    "comment",
                    models.ForeignKey(
                        help_text="Комментарий, на который подана жалоба",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to="tasks.taskcomment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Жалоба на комментарий",
                "verbose_name_plural": "Жалобы на комментарии",
                "db_table": "task_comment_reports",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="taskcomment",
            index=models.Index(
                fields=["task_translation", "parent_comment"],
                name="task_commen_task_tr_7a8653_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="taskcomment",
            index=models.Index(
                fields=["author_telegram_id"], name="task_commen_author__a03d3e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="taskcomment",
            index=models.Index(
                fields=["created_at"], name="task_commen_created_50c6cd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="taskcomment",
            index=models.Index(
                fields=["is_deleted"], name="task_commen_is_dele_a49f26_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="taskcommentreport",
            index=models.Index(
                fields=["comment", "is_reviewed"], name="task_commen_comment_d8c99b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="taskcommentreport",
            index=models.Index(
                fields=["reporter_telegram_id"], name="task_commen_reporte_4fda2d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="taskcommentreport",
            index=models.Index(
                fields=["created_at"], name="task_commen_created_f211f2_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="taskcommentreport",
            unique_together={("comment", "reporter_telegram_id")},
        ),
    ]
