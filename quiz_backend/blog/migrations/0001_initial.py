# Generated by Django 5.1.4 on 2025-05-01 18:32

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название категории')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг категории')),
                ('description', models.TextField(blank=True, verbose_name='Описание категории')),
                ('is_portfolio', models.BooleanField(default=False, help_text='Укажите, если категория предназначена для портфолио, а не блога.', verbose_name='Категория портфолио')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PageVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.CharField(choices=[('index', 'Главная страница'), ('about', 'Страница "Обо мне"')], help_text='Выберите страницу, для которой предназначено видео.', max_length=10, verbose_name='Страница')),
                ('title', models.CharField(help_text='Название, которое будет отображаться под видео.', max_length=200, verbose_name='Название видео')),
                ('video_url', models.URLField(blank=True, help_text='Вставьте ссылку на YouTube-видео (например, https://www.youtube.com/watch?v=xxx).', null=True, verbose_name='Ссылка на YouTube')),
                ('video_file', models.FileField(blank=True, help_text='Загрузите локальный видеофайл (например, .mp4), если не используете YouTube.', null=True, upload_to='videos/page_videos/', verbose_name='Локальный видеофайл')),
                ('order', models.PositiveIntegerField(default=0, help_text='Число, определяющее порядок видео в списке (меньше — выше).', verbose_name='Порядок отображения')),
                ('gif', models.FileField(blank=True, null=True, upload_to='gifs/page_videos/', verbose_name='GIF-файл')),
            ],
            options={
                'verbose_name': 'Видео для страницы',
                'verbose_name_plural': 'Видео для страниц',
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Содержимое сообщения')),
                ('fullname', models.CharField(default='Unknown', max_length=255, verbose_name='Полное имя')),
                ('email', models.EmailField(default='unknown@example.com', max_length=254, verbose_name='Email')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_read', models.BooleanField(default=False, verbose_name='Прочитано')),
                ('is_deleted_by_sender', models.BooleanField(default=False, verbose_name='Удалено отправителем')),
                ('is_deleted_by_recipient', models.BooleanField(default=False, verbose_name='Удалено получателем')),
                ('recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL, verbose_name='Получатель')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL, verbose_name='Отправитель')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MessageAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='message_attachments/%Y/%m/%d/', verbose_name='Файл')),
                ('filename', models.CharField(max_length=255, verbose_name='Имя файла')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='blog.message', verbose_name='Сообщение')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок поста')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг поста')),
                ('content', models.TextField(verbose_name='Содержимое поста')),
                ('excerpt', models.TextField(blank=True, verbose_name='Краткое описание')),
                ('video_url', models.URLField(blank=True, help_text='URL-адрес видео (например, YouTube)', null=True, verbose_name='Ссылка на видео')),
                ('published', models.BooleanField(default=False, verbose_name='Опубликовано')),
                ('featured', models.BooleanField(default=False, verbose_name='Избранное')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата публикации')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='Количество просмотров')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='blog.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Пост',
                'verbose_name_plural': 'Посты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PostImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, help_text='Загрузите статичное изображение (JPG или PNG) для поста.', null=True, upload_to='blog/posts/photos/', verbose_name='Фото (JPG/PNG)')),
                ('gif', models.FileField(blank=True, help_text='Загрузите анимированный GIF для поста.', null=True, upload_to='blog/posts/gifs/', verbose_name='GIF (анимация)')),
                ('video', models.FileField(blank=True, help_text='Загрузите видео в формате MP4 для поста.', null=True, upload_to='blog/posts/videos/', verbose_name='Видео (MP4)')),
                ('is_main', models.BooleanField(default=False, help_text='Отметьте, если это медиа будет отображаться как миниатюра поста.', verbose_name='Главное изображение')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='blog.post', verbose_name='Пост')),
            ],
            options={
                'verbose_name': 'Медиа поста',
                'verbose_name_plural': 'Медиа постов',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название проекта')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг проекта')),
                ('description', models.TextField(verbose_name='Описание проекта')),
                ('technologies', models.CharField(help_text='Список использованных технологий (например, Python, Django).', max_length=200, verbose_name='Технологии')),
                ('video_url', models.URLField(blank=True, help_text='URL-адрес видео (например, YouTube)', null=True, verbose_name='Ссылка на видео')),
                ('github_link', models.URLField(blank=True, help_text='URL-адрес репозитория на GitHub', verbose_name='Ссылка на GitHub')),
                ('demo_link', models.URLField(blank=True, help_text='URL-адрес живой демонстрации проекта', verbose_name='Ссылка на демо')),
                ('featured', models.BooleanField(default=False, verbose_name='Избранное')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='blog.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'Проекты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, help_text='Загрузите статичное изображение (JPG или PNG) для проекта.', null=True, upload_to='blog/projects/photos/', verbose_name='Фото (JPG/PNG)')),
                ('gif', models.FileField(blank=True, help_text='Загрузите анимированный GIF для проекта.', null=True, upload_to='blog/projects/gifs/', verbose_name='GIF (анимация)')),
                ('video', models.FileField(blank=True, help_text='Загрузите видео в формате MP4 для проекта.', null=True, upload_to='blog/projects/videos/', verbose_name='Видео (MP4)')),
                ('is_main', models.BooleanField(default=False, help_text='Отметьте, если это медиа будет отображаться как миниатюра проекта.', verbose_name='Главное изображение')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='blog.project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Медиа проекта',
                'verbose_name_plural': 'Медиа проектов',
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст отзыва')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Одобрен')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testimonials', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['-created_at'],
            },
        ),
    ]
